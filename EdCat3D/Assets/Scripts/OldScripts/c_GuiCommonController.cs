using System.Collections.Generic;
using System.Collections;
using System.Text.RegularExpressions;
using UnityEngine;

[System.Serializable]
public partial class c_GuiCommonController : MonoBehaviour
{
    /*****************************************************************************************
* Common GUI functions
* 
* @author N-Game Studios
* Research & Development
* 
*****************************************************************************************/
    //#pragma strict
    //import System;
    private c_GuiCommonStyleController gs_common;
    private c_GuiFontStyleController gs_font;
    private Color gui_dc;
    private Vector2 someVectorCursor;
    private Vector3 labelForestPos;
    //private var guiRatio:float = Global.guiRatio;
    //private var _guiRatio:float;
    private Vector2 scrollPosition;
    private GameObject npcBarGO;
    private int npcBarLevel;
    private string npcBarName;
    private int npcBarLifeCUR;
    private int npcBarLifeMAX;
    private GameObject npcGO;
    private string npcName;
    private Rect iconDummyThingRect;
    private int mushroom1_index;
    private int mushroom2_index;
    private int mushroom3_index;
    private int mushroom4_index;
    private int[] validChoices;
    private bool _isMushroomGenerate;
    private GUIStyle poisonMushroomIcon;
    private string poisonMushroomName;
    private bool _isRod1Select;
    private bool _isRod2Select;
    private bool _isRod3Select;
    private int Rod1RandomChance;
    private int Rod2RandomChance;
    private int Rod3RandomChance;
    private bool _isFisherman;
    private bool _isFisherman1;
    private bool _isFisherman2;
    private bool _isFisherman3;
    private int fishCooldown;
    private int fishRandomX;
    private int fishRandomY;
    private int fishRandomChanceOriginal;
    private int fishRandomChance;
    private int fishMyChance;
    private int fishRandomIndex;
    private Vector2 someVectorFish;
    private Vector2 scrollPositionKitchen;
    private int vegetable1_index;
    private int vegetable2_index;
    private int vegetable3_index;
    private int vegetable4_index;
    private int[] validVegetables;
    private bool _isVegetableGenerate;
    private GUIStyle wrongVegetableIcon;
    private string wrongVegetableName;
    private int museumItem1_index;
    private int museumItem2_index;
    private int museumItem3_index;
    private int museumItem4_index;
    private int[] validMuseumItems;
    private bool _isMuseumItemGenerate;
    private GUIStyle wrongMuseumItemIcon;
    private string wrongMuseumItemName;
    private int boxroomItem1_index;
    private int boxroomItem2_index;
    private int boxroomItem3_index;
    private int boxroomItem4_index;
    private int[] validBoxroomItems;
    private bool _isBoxroomItemGenerate;
    private GUIStyle wrongBoxroomItemIcon;
    private string wrongBoxroomItemName;
    private int mushroomsItem1_index;
    private int mushroomsItem2_index;
    private int mushroomsItem3_index;
    private int mushroomsItem4_index;
    private int[] validMushroomsItems;
    private bool _isMushroomsItemGenerate;
    private GUIStyle wrongMushroomsItemIcon;
    private string wrongMushroomsItemName;
    private Vector2 someVectorTutorialBlaster;
    private Vector2 someVectorGoldenHOPA;
    private Vector2 someVectorTutorialCobweb;
    private Vector2 someVectorTutorialSpider;
    private int tutorialKitchenTry;
    private float _heroRotAngle;
    private Vector2 _heroPivotPoint;
    //public var customSkin: GUISkin;

    private Hashtable someDropableObjectHash;
    public virtual void Start()
    {
         //resolutions = Screen.resolutions;
        this.gs_common = (c_GuiCommonStyleController) GameObject.Find("_gui_styles_common").GetComponent(typeof(c_GuiCommonStyleController));
        this.gs_font = (c_GuiFontStyleController) GameObject.Find("_gui_styles_font").GetComponent(typeof(c_GuiFontStyleController));
        Global._gs_common = this.gs_common;
        Global._gs_font = this.gs_font;
        // === loader ===
        Global._guiFuncs["ComlicatedLoader"] = this.gui_ComlicatedLoader;
        // === base interfaces ===
        Global._guiFuncs["BaseBack"] = this.gui_BaseBack;
        Global._guiFuncs["WorldMap"] = this.gui_WorldMap;
        Global._guiFuncs["ShipScreen"] = this.gui_ShipScreen;
        Global._guiFuncs["CharacterScreen"] = this.gui_CharacterScreen;
        Global._guiFuncs["StoreScreen"] = this.gui_StoreScreen;
        Global._guiFuncs["PierScreen"] = this.gui_PierScreen;
        Global._guiFuncs["DialogueScreen"] = this.gui_DialogueScreen;
        Global._guiFuncs["BattleScreen"] = this.gui_BattleScreen;
        Global._guiFuncs["CraftScreen"] = this.gui_CraftScreen;
        Global._guiFuncs["LibraryScreen"] = this.gui_LibraryScreen;
        Global._guiFuncs["KitchenScreen"] = this.gui_KitchenScreen;
        Global._guiFuncs["StorageScreen"] = this.gui_StorageScreen;
        Global._guiFuncs["StorageFarawayScreen"] = this.gui_StorageFarawayScreen;
        Global._guiFuncs["VillaScreen"] = this.gui_VillaScreen;
        Global._guiFuncs["MuseumScreen"] = this.gui_MuseumScreen;
        Global._guiFuncs["GlobalMap"] = this.gui_GlobalMap;
        Global._guiFuncs["DeathScreen"] = this.gui_DeathScreen;
        // === mini-games ===
        Global._guiFuncs["MushroomGameScreen"] = this.gui_MushroomsGameScreen;
        Global._guiFuncs["FishingGameScreen"] = this.gui_FishingGameScreen;
        Global._guiFuncs["VegetablesGameScreen"] = this.gui_VegetablesGameScreen;
        Global._guiFuncs["DoorLockGameScreen"] = this.gui_DoorLockGameScreen;
        Global._guiFuncs["MosaicGameScreen"] = this.gui_MosaicGameScreen;
        Global._guiFuncs["HOG1GameScreen"] = this.gui_HOG1GameScreen;
        Global._guiFuncs["HOG2GameScreen"] = this.gui_HOG2GameScreen;
        Global._guiFuncs["HOG3GameScreen"] = this.gui_HOG3GameScreen;
        // === popup interfaces ===
        Global._guiFuncs["DisplayErrorPopUp"] = this.gui_DisplayErrorPopUp;
        Global._guiFuncs["MushroomsGameWinPopUp"] = this.gui_MushroomsGameWinPopUp;
        Global._guiFuncs["MushroomsGameLoosePopUp"] = this.gui_MushroomsGameLoosePopUp;
        Global._guiFuncs["FishingGameWinPopUp"] = this.gui_FishingGameWinPopUp;
        Global._guiFuncs["FishingGameLoosePopUp"] = this.gui_FishingGameLoosePopUp;
        Global._guiFuncs["ItemCreatedPopUp"] = this.gui_ItemCreatedPopUp;
        Global._guiFuncs["NoResourcesCraftPopUp"] = this.gui_NoResourcesCraftPopUp;
        Global._guiFuncs["NoResourcesFoodPopUp"] = this.gui_NoResourcesFoodPopUp;
        Global._guiFuncs["FoodCreatedPopUp"] = this.gui_FoodCreatedPopUp;
        Global._guiFuncs["VeGameWinPopUp"] = this.gui_VeGameWinPopUp;
        Global._guiFuncs["VeGameLoosePopUp"] = this.gui_VeGameLoosePopUp;
        Global._guiFuncs["HOG1EndPopUp"] = this.gui_HOG1EndPopUp;
        Global._guiFuncs["NoWayPopUp"] = this.gui_NoWayPopUp;
        Global._guiFuncs["LootInfoPopUp"] = this.gui_LootInfoPopUp;
        Global._guiFuncs["InventoryFullPopUp"] = this.gui_InventoryFullPopUp;
        Global._guiFuncs["MenuPopUp"] = this.gui_MenuPopUp;
        Global._guiFuncs["LoadGamePopUp"] = this.gui_LoadGamePopUp;
        Global._guiFuncs["ExitGamePopUp"] = this.gui_ExitGamePopUp;
        // === TUTORIAL ===
        Global._guiFuncs["TutorialDialogue01"] = this.gui_TutorialDialogue01;
        Global._guiFuncs["TutorialDialogue02"] = this.gui_TutorialDialogue02;
        Global._guiFuncs["TutorialDialogue03"] = this.gui_TutorialDialogue03;
        Global._guiFuncs["TutorialDialogue04"] = this.gui_TutorialDialogue04;
        Global._guiFuncs["TutorialDialogue05"] = this.gui_TutorialDialogue05;
        Global._guiFuncs["TutorialDialogue06"] = this.gui_TutorialDialogue06;
        Global._guiFuncs["TutorialDialogue06_1"] = this.gui_TutorialDialogue06_1;
        Global._guiFuncs["TutorialDialogue07"] = this.gui_TutorialDialogue07;
        Global._guiFuncs["TutorialDialogue08"] = this.gui_TutorialDialogue08;
        Global._guiFuncs["TutorialUFOKitchen"] = this.gui_TutorialUFOKitchen;
        Global._guiFuncs["TutorialUFOKitchenPlay"] = this.gui_TutorialUFOKitchenPlay;
        Global._guiFuncs["TutorialUFOKitchenScreen"] = this.gui_TutorialUFOKitchenScreen;
        Global._guiFuncs["TutorialUFOKitchenPopup"] = this.gui_TutorialUFOKitchenPopup;
        Global._guiFuncs["TutorialDialogue09"] = this.gui_TutorialDialogue09;
        Global._guiFuncs["TutorialDialogue10"] = this.gui_TutorialDialogue10;
        Global._guiFuncs["TutorialDialogue11"] = this.gui_TutorialDialogue11;
        Global._guiFuncs["TutorialLibraryScreen"] = this.gui_TutorialLibraryScreen;
        Global._guiFuncs["TutorialLibraryPopUp"] = this.gui_TutorialLibraryPopUp;
        Global._guiFuncs["TutorialDialogue12"] = this.gui_TutorialDialogue12;
        Global._guiFuncs["TutorialDialogue13"] = this.gui_TutorialDialogue13;
        Global._guiFuncs["TutorialDialogue14"] = this.gui_TutorialDialogue14;
        Global._guiFuncs["TutorialDialogue15"] = this.gui_TutorialDialogue15;
        Global._guiFuncs["TutorialDialogue16"] = this.gui_TutorialDialogue16;
        Global._guiFuncs["TutorialDialogue17"] = this.gui_TutorialDialogue17;
        Global._guiFuncs["TutorialDialogue18"] = this.gui_TutorialDialogue18;
        Global._guiFuncs["TutorialDialogue19"] = this.gui_TutorialDialogue19;
        Global._guiFuncs["TutorialGoToMap"] = this.gui_TutorialGoToMap;
        Global._guiFuncs["TutorialDialogue20"] = this.gui_TutorialDialogue20;
        Global._guiFuncs["TutorialDialogue21"] = this.gui_TutorialDialogue21;
        Global._guiFuncs["TutorialCutScene01"] = this.gui_TutorialCutScene01;
        Global._guiFuncs["TutorialDialogue22"] = this.gui_TutorialDialogue22;
        Global._guiFuncs["TutorialDialogue23"] = this.gui_TutorialDialogue23;
        Global._guiFuncs["TutorialDialogue24"] = this.gui_TutorialDialogue24;
        Global._guiFuncs["TutorialVeGamePopUp"] = this.gui_TutorialVeGamePopUp;
        Global._guiFuncs["TutorialVeGameEndPopUp"] = this.gui_TutorialVeGameEndPopUp;
        Global._guiFuncs["TutorialDialogue25"] = this.gui_TutorialDialogue25;
        Global._guiFuncs["TutorialGoToUFO"] = this.gui_TutorialGoToUFO;
        Global._guiFuncs["TutorialWeaponSelectLibrary"] = this.gui_TutorialWeaponSelectLibrary;
        Global._guiFuncs["TutorialWeaponLibraryScreen"] = this.gui_TutorialWeaponLibraryScreen;
        Global._guiFuncs["TutorialFeatureLearn"] = this.gui_TutorialFeatureLearn;
        Global._guiFuncs["TutorialGoToWorkroom"] = this.gui_TutorialGoToWorkroom;
        Global._guiFuncs["TutorialWorkroomScreen"] = this.gui_TutorialWorkroomScreen;
        Global._guiFuncs["TutorialWorkroomNoResDialogue1"] = this.gui_TutorialWorkroomNoResDialogue1;
        Global._guiFuncs["TutorialWorkroomNoResDialogue2"] = this.gui_TutorialWorkroomNoResDialogue2;
        Global._guiFuncs["TutorialWorkroomNoResDialogue3"] = this.gui_TutorialWorkroomNoResDialogue3;
        Global._guiFuncs["TutorialTechLibraryScreen"] = this.gui_TutorialTechLibraryScreen;
        Global._guiFuncs["TutorialBlasterLearn"] = this.gui_TutorialBlasterLearn;
        Global._guiFuncs["TutorialGoToWorkroom2"] = this.gui_TutorialGoToWorkroom2;
        Global._guiFuncs["TutorialWorkroom2Screen"] = this.gui_TutorialWorkroom2Screen;
        Global._guiFuncs["TutorialCreateBlasterPopup"] = this.gui_TutorialCreateBlasterPopup;
        Global._guiFuncs["TutorialDialogue26"] = this.gui_TutorialDialogue26;
        Global._guiFuncs["TutorialGoToStorage"] = this.gui_TutorialGoToStorage;
        Global._guiFuncs["TutorialStorageScreen"] = this.gui_TutorialStorageScreen;
        Global._guiFuncs["TutorialInventoryScreen"] = this.gui_TutorialInventoryScreen;
        Global._guiFuncs["TutorialDialogue27"] = this.gui_TutorialDialogue27;
        Global._guiFuncs["TutorialDialogue28"] = this.gui_TutorialDialogue28;
        Global._guiFuncs["TutorialBattleScreen"] = this.gui_TutorialBattleScreen;
        Global._guiFuncs["TutorialDialogue29"] = this.gui_TutorialDialogue29;
        Global._guiFuncs["TutorialDialogue30"] = this.gui_TutorialDialogue30;
        Global._guiFuncs["TutorialDialogue31"] = this.gui_TutorialDialogue31;
        Global._guiFuncs["TutorialMushroomEndPopUp"] = this.gui_TutorialMushroomEndPopUp;
        Global._guiFuncs["TutorialMushroomSoupLearn"] = this.gui_TutorialMushroomSoupLearn;
        Global._guiFuncs["TutorialMushroomPotatoesLearn"] = this.gui_TutorialMushroomPotatoesLearn;
        Global._guiFuncs["TutorialDialogue32"] = this.gui_TutorialDialogue32;
        Global._guiFuncs["TutorialDialogue33"] = this.gui_TutorialDialogue33;
        Global._guiFuncs["TutorialDialogue34"] = this.gui_TutorialDialogue34;
        Global._guiFuncs["TutorialDialogue35"] = this.gui_TutorialDialogue35;
        Global._guiFuncs["TutorialDialogue36"] = this.gui_TutorialDialogue36;
        // === VILLA DIALOGUES ===
        Global._guiFuncs["VillaDialogue01"] = this.gui_VillaDialogue01;
        Global._guiFuncs["VillaDialogue02"] = this.gui_VillaDialogue02;
        Global._guiFuncs["VillaDialogue03"] = this.gui_VillaDialogue03;
        Global._guiFuncs["VillaDialogue04"] = this.gui_VillaDialogue04;
        Global._guiFuncs["VillaDialogue05"] = this.gui_VillaDialogue05;
        // === HOG2 диалог и викторина ===
        Global._guiFuncs["HOG2Dialogue01"] = this.gui_HOG2Dialogue01;
        Global._guiFuncs["MuseumGameScreen"] = this.gui_MuseumGameScreen;
        Global._guiFuncs["MuseumGameWinPopUp"] = this.gui_MuseumGameWinPopUp;
        Global._guiFuncs["MuseumGameLoosePopUp"] = this.gui_MuseumGameLoosePopUp;
        // === HOG3 диалог и викторина ===
        Global._guiFuncs["HOG3Dialogue01"] = this.gui_HOG3Dialogue01;
        Global._guiFuncs["BoxroomGameScreen"] = this.gui_BoxroomGameScreen;
        Global._guiFuncs["BoxroomGameWinPopUp"] = this.gui_BoxroomGameWinPopUp;
        Global._guiFuncs["BoxroomGameLoosePopUp"] = this.gui_BoxroomGameLoosePopUp;
        // === GIRL DIALOGUES ===
        Global._guiFuncs["GirlDialogue01"] = this.gui_GirlDialogue01;
        Global._guiFuncs["GirlDialogue02"] = this.gui_GirlDialogue02;
        Global._guiFuncs["GirlDialogue03"] = this.gui_GirlDialogue03;
        Global._guiFuncs["GirlDialogue04"] = this.gui_GirlDialogue04;
        Global._guiFuncs["GirlDialogue05"] = this.gui_GirlDialogue05;
        Global._guiFuncs["GirlDialogue06"] = this.gui_GirlDialogue06;
        Global._guiFuncs["GirlDialogue07"] = this.gui_GirlDialogue07;
        Global._guiFuncs["GirlDialogue08"] = this.gui_GirlDialogue08;
        Global._guiFuncs["GirlDialogue09"] = this.gui_GirlDialogue09;
        Global._guiFuncs["GirlDialogue10"] = this.gui_GirlDialogue10;
        Global._guiFuncs["GirlDialogue11"] = this.gui_GirlDialogue11;
        Global._guiFuncs["GirlDialogue12"] = this.gui_GirlDialogue12;
        Global._guiFuncs["GirlDialogue13"] = this.gui_GirlDialogue13;
        Global._guiFuncs["ZoeStoryPopUp"] = this.gui_ZoeStoryPopUp;
        Global._guiFuncs["GirlDialogue14"] = this.gui_GirlDialogue14;
        Global._guiFuncs["GirlDialogue15"] = this.gui_GirlDialogue15;
        Global._guiFuncs["GirlDialogue16"] = this.gui_GirlDialogue16;
        // === FISHING DIALOGUES ===
        Global._guiFuncs["FishingDialogue01"] = this.gui_FishingDialogue01;
        Global._guiFuncs["FishingDialogue02"] = this.gui_FishingDialogue02;
        Global._guiFuncs["FishingDialogue03"] = this.gui_FishingDialogue03;
        Global._guiFuncs["FishingDialogue04"] = this.gui_FishingDialogue04;
        Global._guiFuncs["FishingDialogue05"] = this.gui_FishingDialogue05;
        // === Вход в подземелье ===
        Global._guiFuncs["DoorLockDialogue01"] = this.gui_DoorLockDialogue01;
        Global._guiFuncs["DoorLockHint"] = this.gui_DoorLockHint;
        Global._guiFuncs["DoorLockDialogue02"] = this.gui_DoorLockDialogue02;
        // === Диалоги в подземелье ===
        Global._guiFuncs["TempleDialogue01"] = this.gui_TempleDialogue01;
        Global._guiFuncs["TempleDialogue02"] = this.gui_TempleDialogue02;
        Global._guiFuncs["TempleDialogue03"] = this.gui_TempleDialogue03;
        Global._guiFuncs["TempleDialogue04"] = this.gui_TempleDialogue04;
        Global._guiFuncs["TempleDialogue05"] = this.gui_TempleDialogue05;
        Global._guiFuncs["TempleDialogue06"] = this.gui_TempleDialogue06;
        Global._guiFuncs["IndiansPopUp"] = this.gui_IndiansPopUp;
        // === ICONS ===
        //Крафт предметов
        Global._recipeItems[0]["icon"] = this.gs_common.gui_RecipeItemIcon01;
        /*(Global._recipeItems[1])["icon"] = gs_common.gui_RecipeItemIcon02;*/
        Global._recipeItems[1]["icon"] = this.gs_common.gui_RecipeItemIcon03;
        Global._recipeItems[2]["icon"] = this.gs_common.gui_RecipeItemIcon04;
        Global._recipeItems[3]["icon"] = this.gs_common.gui_RecipeItemIcon05;
        Global._recipeItems[0]["costicon1"] = this.gs_common.gui_icons_loot_metal;
        Global._recipeItems[0]["costicon2"] = this.gs_common.gui_icons_loot_plastic;
        /*(Global._recipeItems[1])["costicon1"] = gs_common.gui_icons_loot_cobweb;
    (Global._recipeItems[1])["costicon2"] = gs_common.gui_icons_loot_deadspider;
    (Global._recipeItems[1])["costicon3"] = gs_common.gui_icons_loot_metal;*/
        Global._recipeItems[1]["costicon1"] = this.gs_common.gui_icons_loot_metal;
        Global._recipeItems[1]["costicon2"] = this.gs_common.gui_icons_loot_eballon;
        Global._recipeItems[2]["costicon1"] = this.gs_common.gui_icons_loot_metal;
        Global._recipeItems[2]["costicon2"] = this.gs_common.gui_icons_loot_plastic;
        Global._recipeItems[3]["costicon1"] = this.gs_common.gui_icons_loot_cobweb;
        Global._recipeItems[3]["costicon2"] = this.gs_common.gui_icons_loot_deadspider;
        Global._recipeItems[3]["costicon3"] = this.gs_common.gui_icons_loot_metal;
        //Крафт еды
        Global._recipeFood[0]["icon"] = this.gs_common.gui_icons_food_chicken_soup;
        Global._recipeFood[1]["icon"] = this.gs_common.gui_icons_food_cabbage_soup;
        Global._recipeFood[2]["icon"] = this.gs_common.gui_icons_food_mushroom_soup;
        Global._recipeFood[3]["icon"] = this.gs_common.gui_icons_food_mushroom_potatoes;
        Global._recipeFood[4]["icon"] = this.gs_common.gui_icons_food_fish_soup;
        Global._recipeFood[5]["icon"] = this.gs_common.gui_icons_food_pancake;
        Global._recipeFood[6]["icon"] = this.gs_common.gui_icons_food_smoothies;
        Global._recipeFood[7]["icon"] = this.gs_common.gui_icons_food_milkshape;
        Global._recipeFood[0]["costicon1"] = this.gs_common.gui_icons_food_chicken;
        Global._recipeFood[0]["costicon2"] = this.gs_common.gui_icons_food_potatoes;
        Global._recipeFood[0]["costicon3"] = this.gs_common.gui_icons_food_carrot;
        Global._recipeFood[0]["costicon4"] = this.gs_common.gui_icons_food_onion;
        Global._recipeFood[1]["costicon1"] = this.gs_common.gui_icons_food_cabbage;
        Global._recipeFood[1]["costicon2"] = this.gs_common.gui_icons_food_potatoes;
        Global._recipeFood[1]["costicon3"] = this.gs_common.gui_icons_food_carrot;
        Global._recipeFood[1]["costicon4"] = this.gs_common.gui_icons_food_sourcream;
        Global._recipeFood[2]["costicon1"] = this.gs_common.gui_icons_food_mushrooms;
        Global._recipeFood[2]["costicon2"] = this.gs_common.gui_icons_food_potatoes;
        Global._recipeFood[2]["costicon3"] = this.gs_common.gui_icons_food_onion;
        Global._recipeFood[2]["costicon4"] = this.gs_common.gui_icons_food_sourcream;
        Global._recipeFood[3]["costicon1"] = this.gs_common.gui_icons_food_mushrooms;
        Global._recipeFood[3]["costicon2"] = this.gs_common.gui_icons_food_potatoes;
        Global._recipeFood[4]["costicon1"] = this.gs_common.gui_icons_food_fish;
        Global._recipeFood[4]["costicon2"] = this.gs_common.gui_icons_food_potatoes;
        Global._recipeFood[4]["costicon3"] = this.gs_common.gui_icons_food_onion;
        Global._recipeFood[4]["costicon4"] = this.gs_common.gui_icons_food_spice;
        Global._recipeFood[5]["costicon1"] = this.gs_common.gui_icons_food_flour;
        Global._recipeFood[5]["costicon2"] = this.gs_common.gui_icons_food_egg;
        Global._recipeFood[5]["costicon3"] = this.gs_common.gui_icons_food_milk;
        Global._recipeFood[5]["costicon4"] = this.gs_common.gui_icons_food_sourcream;
        Global._recipeFood[6]["costicon1"] = this.gs_common.gui_icons_food_orange;
        Global._recipeFood[6]["costicon2"] = this.gs_common.gui_icons_food_banana;
        Global._recipeFood[6]["costicon3"] = this.gs_common.gui_icons_food_berries;
        Global._recipeFood[7]["costicon1"] = this.gs_common.gui_icons_food_banana;
        Global._recipeFood[7]["costicon2"] = this.gs_common.gui_icons_food_milk;
        //Книги в библиотеке
        (Global._userBooksHealth["library_book01"] as Hashtable)["titleimage"] = this.gs_common.gui_library_booktitle_food;
        (Global._userBooksBiology["library_book01"] as Hashtable)["titleimage"] = this.gs_common.gui_library_booktitle_vegetables;
        (Global._userBooksBiology["library_book02"] as Hashtable)["titleimage"] = this.gs_common.gui_library_booktitle_mushrooms;
        (Global._userBooksBiology["library_book03"] as Hashtable)["titleimage"] = this.gs_common.gui_library_booktitle_spiders;
        (Global._userBooksTech["library_book01"] as Hashtable)["titleimage"] = this.gs_common.gui_library_booktitle_spacesuits;
        //Хопные предметы в музее
        (Global._userMuseum["museum_exhibit01"] as Hashtable)["titleimage"] = this.gs_common.gui_exhibit_title_cd;
        (Global._userMuseum["museum_exhibit02"] as Hashtable)["titleimage"] = this.gs_common.gui_exhibit_title_ammonit;
        //Слоты для предметов на герое
        Global._someWearHashPlace_StrplaceToRect["armor"] = new Rect((Screen.width / 2) + (755 * Global.guiRatio), (Screen.height / 2) - (315 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someWearHashPlace_StrplaceToRect["gloves"] = new Rect((Screen.width / 2) + (755 * Global.guiRatio), (Screen.height / 2) - (135 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someWearHashPlace_StrplaceToRect["boots"] = new Rect((Screen.width / 2) + (755 * Global.guiRatio), (Screen.height / 2) + (45 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someWearHashPlace_StrplaceToRect["weapon"] = new Rect((Screen.width / 2) + (143 * Global.guiRatio), (Screen.height / 2) - (315 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someWearHashPlace_StrplaceToRect["feature"] = new Rect((Screen.width / 2) + (143 * Global.guiRatio), (Screen.height / 2) - (135 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someWearHashPlace_StrplaceToRect["backpack"] = new Rect((Screen.width / 2) + (143 * Global.guiRatio), (Screen.height / 2) + (45 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        //Инвентарь
        Global.globalInventoryThingsArr[0]["icon"] = this.gs_common.gui_icons_crystal_premium;
        Global.globalInventoryThingsArr[1]["icon"] = this.gs_common.gui_icons_thing_r4_leg;
        Global.globalInventoryThingsArr[2]["icon"] = this.gs_common.gui_icons_thing_r4_hand;
        Global.globalInventoryThingsArr[3]["icon"] = this.gs_common.gui_icons_thing_r4_body;
        Global.globalInventoryThingsArr[4]["icon"] = this.gs_common.gui_icons_thing_r3_hand;
        //Инвентарь таблица координат ячеек
        Global.invSlot00Rect = new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot10Rect = new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot20Rect = new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot30Rect = new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot40Rect = new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot50Rect = new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot01Rect = new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot11Rect = new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot21Rect = new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot31Rect = new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot41Rect = new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot51Rect = new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot02Rect = new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot12Rect = new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot22Rect = new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot32Rect = new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot42Rect = new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot52Rect = new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot03Rect = new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot13Rect = new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot23Rect = new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot33Rect = new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot43Rect = new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.invSlot53Rect = new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot00Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "0" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot10Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "0" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot20Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "0" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot30Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "0" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot40Rect, new Hashtable(new Hashtable() { {"x", "4" },  {"y", "0" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot50Rect, new Hashtable(new Hashtable() { {"x", "5" },  {"y", "0" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot01Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "1" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot11Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "1" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot21Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "1" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot31Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "1" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot41Rect, new Hashtable(new Hashtable() { {"x", "4" },  {"y", "1" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot51Rect, new Hashtable(new Hashtable() { {"x", "5" },  {"y", "1" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot02Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "2" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot12Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "2" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot22Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "2" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot32Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "2" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot42Rect, new Hashtable(new Hashtable() { {"x", "4" },  {"y", "2" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot52Rect, new Hashtable(new Hashtable() { {"x", "5" },  {"y", "2" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot03Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "3" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot13Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "3" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot23Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "3" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot33Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "3" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot43Rect, new Hashtable(new Hashtable() { {"x", "4" },  {"y", "3" }, }));
        Global._someInventoryHashPlace_RectToCoords.Add(Global.invSlot53Rect, new Hashtable(new Hashtable() { {"x", "5" },  {"y", "3" }, }));
        //Кукла персонажа - таблица координат ячеек
        Global.armorSlotRect = new Rect((Screen.width / 2) + (755 * Global.guiRatio), (Screen.height / 2) - (315 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.glovesSlotRect = new Rect((Screen.width / 2) + (755 * Global.guiRatio), (Screen.height / 2) - (135 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.bootsSlotRect = new Rect((Screen.width / 2) + (755 * Global.guiRatio), (Screen.height / 2) + (45 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.weaponSlotRect = new Rect((Screen.width / 2) + (143 * Global.guiRatio), (Screen.height / 2) - (315 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.featureSlotRect = new Rect((Screen.width / 2) + (143 * Global.guiRatio), (Screen.height / 2) - (135 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.backpackSlotRect = new Rect((Screen.width / 2) + (143 * Global.guiRatio), (Screen.height / 2) + (45 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someWearHashPlace_RectToStrplace.Add(Global.armorSlotRect, "armor");
        Global._someWearHashPlace_RectToStrplace.Add(Global.glovesSlotRect, "gloves");
        Global._someWearHashPlace_RectToStrplace.Add(Global.bootsSlotRect, "boots");
        Global._someWearHashPlace_RectToStrplace.Add(Global.weaponSlotRect, "weapon");
        Global._someWearHashPlace_RectToStrplace.Add(Global.featureSlotRect, "feature");
        Global._someWearHashPlace_RectToStrplace.Add(Global.backpackSlotRect, "backpack");
        //Инвентарь склада: таблица координат ячеек
        Global.storageInvSlot00Rect = new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot10Rect = new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot20Rect = new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot30Rect = new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot01Rect = new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot11Rect = new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot21Rect = new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot31Rect = new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot02Rect = new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot12Rect = new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot22Rect = new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot32Rect = new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot03Rect = new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot13Rect = new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot23Rect = new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageInvSlot33Rect = new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot00Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "0" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot10Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "0" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot20Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "0" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot30Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "0" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot01Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "1" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot11Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "1" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot21Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "1" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot31Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "1" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot02Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "2" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot12Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "2" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot22Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "2" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot32Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "2" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot03Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "3" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot13Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "3" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot23Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "3" }, }));
        Global._someStorageInventoryHashPlace_RectToCoords.Add(Global.storageInvSlot33Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "3" }, }));
        //Склад: таблица координат ячеек
        Global.storageSlot00Rect = new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot10Rect = new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot20Rect = new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot30Rect = new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot01Rect = new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot11Rect = new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot21Rect = new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot31Rect = new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot02Rect = new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot12Rect = new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot22Rect = new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot32Rect = new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot03Rect = new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot13Rect = new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot23Rect = new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global.storageSlot33Rect = new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio);
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot00Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "0" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot10Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "0" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot20Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "0" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot30Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "0" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot01Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "1" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot11Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "1" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot21Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "1" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot31Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "1" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot02Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "2" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot12Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "2" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot22Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "2" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot32Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "2" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot03Rect, new Hashtable(new Hashtable() { {"x", "0" },  {"y", "3" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot13Rect, new Hashtable(new Hashtable() { {"x", "1" },  {"y", "3" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot23Rect, new Hashtable(new Hashtable() { {"x", "2" },  {"y", "3" }, }));
        Global._someStorageHashPlace_RectToCoords.Add(Global.storageSlot33Rect, new Hashtable(new Hashtable() { {"x", "3" },  {"y", "3" }, }));
    }

    public virtual void Update()
    {
        Vector3 mPos = Input.mousePosition;
        Global.gmrPos = new Vector2(mPos.x, Screen.height - mPos.y);
    }

    // === loader ===
    public virtual void gui_ComlicatedLoader() // Загрузчик
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        //GUI.Box(Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", gs_common.gui_loading_background);
        if (Global.random_loader == 1)
        {
            GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_loading_background_01);
        }
        else
        {
            if (Global.random_loader == 2)
            {
                GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_loading_background_02);
            }
            else
            {
                if (Global.random_loader == 3)
                {
                    GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_loading_background_03);
                }
                else
                {
                    if (Global.random_loader == 4)
                    {
                        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_loading_background_04);
                    }
                    else
                    {
                        if (Global.random_loader == 5)
                        {
                            GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_loading_background_05);
                        }
                    }
                }
            }
        }
        GUI.Box(new Rect((Screen.width / 2) - (566 * Global.guiRatio), Screen.height - (236 * Global.guiRatio), 1134 * Global.guiRatio, 92 * Global.guiRatio), "", this.gs_common.gui_loading_loader_back);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (557 * Global.guiRatio), Screen.height - (228 * Global.guiRatio), ((Global._progressComplicatedLoader * 1118) * Global.guiRatio) / 100, 76 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1118 * Global.guiRatio, 76 * Global.guiRatio), "", this.gs_common.gui_loading_loader);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    // === base interfaces ===
    public virtual void gui_BaseBack()
    {
        Global._isPopUpOpen = true;
    }

    public virtual void gui_WorldMap() //Карта мира (основной игровой интерфейс)
    {
        if (!Global._isBattleRagesOn)
        {
            if (Global._isTakeLoot)
            {
                this.showTakeVegetable();
            }
            if ((!Global._isPopUpOpen && (Event.current.type == EventType.KeyUp)) && (Event.current.keyCode == KeyCode.Escape))
            {
                Event.current.type = EventType.Ignore;
                Global.globalBus.SendMessage("c_GameController_Base_command_setPause");
                Global._gui_AddInterface("MenuPopUp");
                Global._isPopUpOpen = true;
            }
            if ((!Global._isPopUpOpen && (Event.current.type == EventType.KeyUp)) && (Event.current.keyCode == KeyCode.F5))
            {
                Event.current.type = EventType.Ignore;
                Global._isGameSaved = true;
                Global.globalBus.gameObject.SendMessage("SaveGame");
            }
            if ((!Global._isPopUpOpen && (Event.current.type == EventType.KeyUp)) && (Event.current.keyCode == KeyCode.F6))
            {
                Event.current.type = EventType.Ignore;
                Global.globalBus.SendMessage("c_StartController_command_StartGame");
            }
            GUI.BeginGroup(new Rect(Screen.width - (310 * Global.guiRatio), 22 * Global.guiRatio, 288 * Global.guiRatio, 288 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 2048 * Global.guiRatio, 2048 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
            Global._minimapMapX = (-1024 - ((1024 * Global._hero_dolly.transform.position.x) / 194)) + (144 * Global.guiRatio);
            Global._minimapMapY = (-1024 + ((1024 * Global._hero_dolly.transform.position.z) / 194)) + (144 * Global.guiRatio);
            GUI.BeginGroup(new Rect((-1024 * Global.guiRatio) + (Global._minimapMapX * Global.guiRatio), (-1024 * Global.guiRatio) + (Global._minimapMapY * Global.guiRatio), 2048 * Global.guiRatio, 2048 * Global.guiRatio));
            if (Global._isWorldMap)
            {
                GUI.Box(new Rect(0, 0, 2048 * Global.guiRatio, 2048 * Global.guiRatio), "", this.gs_common.gui_gamescreen_worldmap);
            }
            if (Global._isGreenHouse)
            {
                GUI.Box(new Rect(0, 0, 2048 * Global.guiRatio, 2048 * Global.guiRatio), "", this.gs_common.gui_gamescreen_greenhouse);
            }
            if (Global._isTemple)
            {
                GUI.Box(new Rect(0, 0, 2048 * Global.guiRatio, 2048 * Global.guiRatio), "", this.gs_common.gui_gamescreen_temple);
            }
            foreach (GameObject EnemyObj in GameObject.FindGameObjectsWithTag("MONSTER"))
            {
                if (((s_AIController) EnemyObj.GetComponent(typeof(s_AIController))) != null)
                {
                    if (((s_AIController) EnemyObj.GetComponent(typeof(s_AIController))).isNpcDead != true)
                    {
                        GUI.Box(new Rect(((2048 + ((1024 * EnemyObj.transform.position.x) / 194)) - 9) * Global.guiRatio, ((2048 - ((1024 * EnemyObj.transform.position.z) / 194)) - 9) * Global.guiRatio, 19 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_gamescreen_symbol_mob);
                    }
                }
            }
            GUI.EndGroup();
            GUI.EndGroup();
            if (Global._isWorldMap)
            {
                if (GUI.Button(new Rect(Screen.width - (82 * Global.guiRatio), 0, 82 * Global.guiRatio, 82 * Global.guiRatio), "", this.gs_common.gui_common_button_world))
                {
                    Global._isPopUpOpen = true;
                    Global.UFOShowEntry = false;
                    Global._gui_SetInterface("GlobalMap");
                }
            }
            GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
            if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
            {
                 //Карта мира
                Global._gui_CloseAllInterfaces();
                Global._isPopUpOpen = false;
                Global._isUFOScreen = false;
                Global.UFOShowEntry = true;
                ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                Global._gui_SetInterface("WorldMap");
            }
            if (GUI.Button(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo))
            {
                 //Экран НЛО
                Global._gui_CloseAllInterfaces();
                Global._isPopUpOpen = true;
                Global._isUFOScreen = true;
                Global.UFOShowEntry = false;
                ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                this.c_GameController_Base_command_SortThings();
                Global.globalBus.gameObject.SendMessage("c_GameController_CheckConsumables");
                Global._gui_SetInterface("ShipScreen");
            }
            if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
            {
                 //Экран персонажа
                Global._gui_CloseAllInterfaces();
                Global._isPopUpOpen = true;
                Global._isInventoryOpen = true;
                Global.UFOShowEntry = false;
                ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                Global._gui_SetInterface("CharacterScreen");
                this.c_GameController_Base_command_SortThings();
                Global.globalBus.gameObject.SendMessage("c_GameController_CheckConsumables");
            }
            if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
            {
                 //Выход
                Global.globalBus.SendMessage("c_GameController_Base_command_setPause");
                Global._gui_AddInterface("MenuPopUp");
                Global._isPopUpOpen = true;
            }
            if (Global._isInventoryFull)
            {
                this.showInventoryFullMessage();
            }
            GUI.EndGroup();
        }
        else
        {
            GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
            GUI.Box(new Rect((Screen.width / 2) - (919 * Global.guiRatio), (Screen.height / 2) - (499 * Global.guiRatio), 57 * Global.guiRatio, 49 * Global.guiRatio), "", this.gs_common.gui_battlescreen_heart);
            if (GUI.Button(new Rect(Screen.width - (155 * Global.guiRatio), Screen.height - (120 * Global.guiRatio), 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_livebattle))
            {
                Global._isBattleRagesOn = false;
            }
            GUI.Label(new Rect((Screen.width / 2) - (847 * Global.guiRatio), (Screen.height / 2) - (498 * Global.guiRatio), 550 * Global.guiRatio, 40 * Global.guiRatio), Strings.string078, this.gs_font.font_b52_36_l_blue);
            GUI.BeginGroup(new Rect((Screen.width / 2) - (851 * Global.guiRatio), (Screen.height / 2) - (468 * Global.guiRatio), 468 * Global.guiRatio, 18 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 468 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_battlescreen_healtbar_background);
            GUI.BeginGroup(new Rect(0, 0, ((Global._userCurrentHealth * 468) * Global.guiRatio) / Global._userMaxHealth, 18 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 468 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_battlescreen_healtbar_health);
            GUI.EndGroup();
            GUI.EndGroup();
            GUI.Label(new Rect((Screen.width / 2) - (490 * Global.guiRatio), (Screen.height / 2) - (494 * Global.guiRatio), 200 * Global.guiRatio, 50 * Global.guiRatio), (Global._userCurrentHealth.ToString() + "/") + Global._userMaxHealth.ToString(), this.gs_font.font_b52_28_l_blue);
            if (Global._isR3Gun && !Global._isR5Backpack)
            {
                GUI.BeginGroup(new Rect((Screen.width / 2) - (902 * Global.guiRatio), Screen.height - (120 * Global.guiRatio), 638 * Global.guiRatio, 98 * Global.guiRatio));
                if (Global.Ability01Cooldown == 0)
                {
                    if (GUI.Button(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01))
                    {
                         //Мощный выстрел
                        if (!Global._isAbility01Select)
                        {
                            Global._isAbility01Select = true;
                            Global._TempDistance = (int) Global._system_distanceAttack;
                            if (Global._system_distanceAttack < 15)
                            {
                                Global._system_distanceAttack = 15;
                            }
                        }
                        else
                        {
                            Global._isAbility01Select = false;
                            Global._system_distanceAttack = Global._TempDistance;
                        }
                        Global._isClickDlg = false;
                    }
                    if (Global._isAbility01Select)
                    {
                        GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01_select);
                        Global._isAbility01 = true;
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01);
                    GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, ((98 * Global.guiRatio) / 10) * Global.Ability01Cooldown), "", this.gs_common.gui_battlescreen_shad);
                }
                GUI.EndGroup();
            }
            if (!Global._isR3Gun && Global._isR5Backpack)
            {
                GUI.BeginGroup(new Rect((Screen.width / 2) - (902 * Global.guiRatio), Screen.height - (120 * Global.guiRatio), 638 * Global.guiRatio, 98 * Global.guiRatio));
                if (Global.Ability02Cooldown == 0)
                {
                    if (GUI.Button(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability02))
                    {
                         //Лечение
                        Global._isAbility02 = true;
                        Global.globalBus.SendMessage("c_GameController_Base_command_Cooldown02", 5);
                        Global.globalBus.SendMessage("c_GameController_Base_command_Ability02");
                        Global._userCurrentHealth = Global._userCurrentHealth + 20;
                        if (Global._userCurrentHealth > Global._userMaxHealth)
                        {
                            Global._userCurrentHealth = Global._userMaxHealth;
                        }
                        Global._isClickDlg = false;
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability02);
                    GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, ((98 * Global.guiRatio) / 5) * Global.Ability02Cooldown), "", this.gs_common.gui_battlescreen_shad);
                }
                GUI.EndGroup();
            }
            if (Global._isR3Gun && Global._isR5Backpack)
            {
                GUI.BeginGroup(new Rect((Screen.width / 2) - (902 * Global.guiRatio), Screen.height - (120 * Global.guiRatio), 638 * Global.guiRatio, 98 * Global.guiRatio));
                if (Global.Ability01Cooldown == 0)
                {
                    if (GUI.Button(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01))
                    {
                         //Мощный выстрел
                        if (!Global._isAbility01Select)
                        {
                            Global._isAbility01Select = true;
                            Global._TempDistance = (int) Global._system_distanceAttack;
                            if (Global._system_distanceAttack < 15)
                            {
                                Global._system_distanceAttack = 15;
                            }
                        }
                        else
                        {
                            Global._isAbility01Select = false;
                            Global._system_distanceAttack = Global._TempDistance;
                        }
                        Global._isClickDlg = false;
                    }
                    if (Global._isAbility01Select)
                    {
                        GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01_select);
                        Global._isAbility01 = true;
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01);
                    GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, ((98 * Global.guiRatio) / 10) * Global.Ability01Cooldown), "", this.gs_common.gui_battlescreen_shad);
                }
                if (Global.Ability02Cooldown == 0)
                {
                    if (GUI.Button(new Rect(108 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability02))
                    {
                         //Лечение
                        Global._isAbility02 = true;
                        Global.globalBus.SendMessage("c_GameController_Base_command_Cooldown02", 5);
                        Global.globalBus.SendMessage("c_GameController_Base_command_Ability02");
                        Global._userCurrentHealth = Global._userCurrentHealth + 20;
                        if (Global._userCurrentHealth > Global._userMaxHealth)
                        {
                            Global._userCurrentHealth = Global._userMaxHealth;
                        }
                        Global._isClickDlg = false;
                    }
                }
                else
                {
                    GUI.Box(new Rect(108 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability02);
                    GUI.Box(new Rect(108 * Global.guiRatio, 0, 98 * Global.guiRatio, ((98 * Global.guiRatio) / 5) * Global.Ability02Cooldown), "", this.gs_common.gui_battlescreen_shad);
                }
                GUI.EndGroup();
            }
            /*if (Global._isFeatureEquiped)
        {
            GUI.BeginGroup(Rect(Screen.width / 2 - 902 * Global.guiRatio, Screen.height - 120 * Global.guiRatio, 638 * Global.guiRatio, 98 * Global.guiRatio));
            if (Global.Ability01Cooldown == 0) {
                if (GUI.Button(Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability01)) {
                    //Мощный выстрел
                    if (!Global._isAbility01Select) {
                        //Global._isAbility01Select = false;
                        Global._isAbility01Select = true;
                        Global._TempDistance = Global._system_distanceAttack;

                        if (Global._system_distanceAttack < 15) {
                            Global._system_distanceAttack = 15;
                        }
                    }
                    else {
                        Global._isAbility01Select = false;
                        Global._system_distanceAttack = Global._TempDistance;
                    }
                    Global._isClickDlg = false;
                }
                if (Global._isAbility01Select) {
                    GUI.Box(Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability01_select);
                    Global._isAbility01 = true;
                }
            }
            else {
                GUI.Box(Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability01);
                GUI.Box(Rect(0, 0, 98 * Global.guiRatio, (98 * Global.guiRatio / 10) * Global.Ability01Cooldown), "", gs_common.gui_battlescreen_shad);
            }
            if (Global.Ability02Cooldown == 0) {
                if (GUI.Button(Rect(108 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability02)) {
                    //Лечение
                    Global._isAbility02 = true;
                    Global.globalBus.SendMessage("c_GameController_Base_command_Cooldown02", 5);

                    Global.globalBus.SendMessage("c_GameController_Base_command_Ability02");

                    Global._userCurrentHealth = Global._userCurrentHealth + 20;
                    if (Global._userCurrentHealth > Global._userMaxHealth) {
                        Global._userCurrentHealth = Global._userMaxHealth;
                    }
                    Global._isClickDlg = false;
                }
            }
            else {
                GUI.Box(Rect(108 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability02);
                GUI.Box(Rect(108 * Global.guiRatio, 0, 98 * Global.guiRatio, (98 * Global.guiRatio / 5) * Global.Ability02Cooldown), "", gs_common.gui_battlescreen_shad);
            }
            if (Global.Ability03Cooldown == 0) {
                if (GUI.Button(Rect(216 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability03)) {
                    //Парализация
                    Global._isAbility03 = true;
                    Global.globalBus.SendMessage("c_GameController_Base_command_Cooldown03", 7);

                    Global.globalBus.SendMessage("c_GameController_Base_command_AbilityImmortal");
                    Global._isClickDlg = false;
                }
            }
            else {
                GUI.Box(Rect(216 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability03);
                GUI.Box(Rect(216 * Global.guiRatio, 0, 98 * Global.guiRatio, (98 * Global.guiRatio / 7) * Global.Ability03Cooldown), "", gs_common.gui_battlescreen_shad);
            }
            if (Global.Ability04Cooldown == 0) {
                if (GUI.Button(Rect(324 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability04)) {
                    //Усиление
                    Global._isAbility04 = true;
                    Global.globalBus.SendMessage("c_GameController_Base_command_Cooldown04", 7);

                    Global.globalBus.SendMessage("c_GameController_Base_command_Ability04");
                    Global._isClickDlg = false;
                }
            }
            else {
                GUI.Box(Rect(324 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability04);
                GUI.Box(Rect(324 * Global.guiRatio, 0, 98 * Global.guiRatio, (98 * Global.guiRatio / 7) * Global.Ability04Cooldown), "", gs_common.gui_battlescreen_shad);
            }
            if (Global.Ability05Cooldown == 0) {
                if (GUI.Button(Rect(432 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability05)) {
                    //Защита
                    Global._isAbility05 = true;

                    if (Global._isR3Backpack) Global.rr_backpack_shield.SetActive(true);
                    Global.rr_body_shield.SetActive(true);
                    if (Global._isR3Gun) Global.rr_gun_shield.SetActive(true);
                    Global.rr_hand_shield.SetActive(true);
                    Global.rr_leg_shield.SetActive(true);

                    Global.globalBus.SendMessage("c_GameController_Base_command_Cooldown05", 7);

                    Global.globalBus.SendMessage("c_GameController_Base_command_Ability05");
                    Global._isClickDlg = false;
                }
            }
            else {
                GUI.Box(Rect(432 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability05);
                GUI.Box(Rect(432 * Global.guiRatio, 0, 98 * Global.guiRatio, (98 * Global.guiRatio / 7) * Global.Ability05Cooldown), "", gs_common.gui_battlescreen_shad);
            }
            if (Global.Ability06Cooldown == 0) {
                if (GUI.Button(Rect(540 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability06)) {
                    //Невидимость
                    Global._isAbility06 = true;

                    if (Global._isR3Backpack) Global.r3_backpack.SetActive(false);
                    if (Global._isR3Body) Global.r3_body.SetActive(false);
                    if (Global._isR3Gun) Global.r3_gun.SetActive(false);
                    if (Global._isR3Hand) Global.r3_hand.SetActive(false);
                    if (Global._isR3Leg) Global.r3_leg.SetActive(false);

                    if (Global._isR4Backpack) Global.r4_backpack.SetActive(false);
                    if (Global._isR4Body) Global.r4_body.SetActive(false);
                    if (Global._isR4Gun) Global.r4_gun.SetActive(false);
                    if (Global._isR4Hand) Global.r4_hand.SetActive(false);
                    if (Global._isR4Leg) Global.r4_leg.SetActive(false);

                    if (Global._isR3Backpack) Global.rr_backpack_invisible.SetActive(true);
                    Global.rr_body_invisible.SetActive(true);
                    if (Global._isR3Gun) Global.rr_gun_invisible.SetActive(true);
                    Global.rr_hand_invisible.SetActive(true);
                    Global.rr_leg_invisible.SetActive(true);

                    Global.globalBus.SendMessage("c_GameController_Base_command_Cooldown06", 7);

                    Global.globalBus.SendMessage("c_GameController_Base_command_AbilityImmortal");
                    Global._isBattleRagesOn = false;
                    Global._isClickDlg = false;
                }
            }
            else {
                GUI.Box(Rect(540 * Global.guiRatio, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", gs_common.gui_battlescreen_ability06);
                GUI.Box(Rect(540 * Global.guiRatio, 0, 98 * Global.guiRatio, (98 * Global.guiRatio / 7) * Global.Ability06Cooldown), "", gs_common.gui_battlescreen_shad);
            }
            GUI.EndGroup();
        }*/
            GUI.EndGroup();
        }
        if ((!Global._isTutorialAbilityClick 
            && (Global._TutorialSpider != null)) 
            && (((s_AIController) Global._TutorialSpider.GetComponent(typeof(s_AIController))).isNpcDead == true))
        {
            if (!Global._isTutorialWaitingForTheSun)
            {
                this.StartCoroutine(this.WaitingForTheSun());
                Global._isTutorialWaitingForTheSun = true;
                Global.globalBus.gameObject.SendMessage("SaveGame");
            }
            Global._isPopUpOpen = true;
        }
        if (Global._isGetNewLevel)
        {
            this.showNewLevelMessage();
        }
        if (Global._isGameSaved)
        {
            this.showGameSavedMessage();
        }
    }

    public virtual void showInventoryFullMessage()
    {
        GUI.BeginGroup(new Rect(0, 60 * Global.guiRatio, 800 * Global.guiRatio, 60 * Global.guiRatio));
        this.gs_font.font_b52_60_cb_white.normal.textColor = new Color(1f, 1f, 1f, Global.labelFullInventoryAlpha);
        GUI.Label(new Rect(0, 0, 800 * Global.guiRatio, 60 * Global.guiRatio), Strings.string142, this.gs_font.font_b52_60_cb_white);
        this.gs_font.font_b52_60_cb_white.normal.textColor = new Color(1f, 1f, 1f, 1f);
        GUI.EndGroup();
    }

    public virtual void showNewLevelMessage()
    {
        GUI.BeginGroup(new Rect(0, (Screen.height / 2) - (48 * Global.guiRatio), 1920 * Global.guiRatio, 60 * Global.guiRatio));
        this.gs_font.font_b52_60_cb_white.normal.textColor = new Color(1f, 1f, 1f, Global.labelNewLevelAlpha);
        GUI.Label(new Rect(0, 0, 1920 * Global.guiRatio, 60 * Global.guiRatio), Strings.string201 + Global._paramHeroLevel.ToString(), this.gs_font.font_b52_60_cb_white);
        this.gs_font.font_b52_60_cb_white.normal.textColor = new Color(1f, 1f, 1f, 1f);
        GUI.EndGroup();
    }

    public virtual void showGameSavedMessage()
    {
        GUI.BeginGroup(new Rect(0, (Screen.height / 2) - (48 * Global.guiRatio), 1920 * Global.guiRatio, 60 * Global.guiRatio));
        this.gs_font.font_b52_60_cb_white.normal.textColor = new Color(1f, 1f, 1f, Global.labelGameSavedAlpha);
        GUI.Label(new Rect(0, 0, 1920 * Global.guiRatio, 60 * Global.guiRatio), Strings.string212, this.gs_font.font_b52_60_cb_white);
        this.gs_font.font_b52_60_cb_white.normal.textColor = new Color(1f, 1f, 1f, 1f);
        GUI.EndGroup();
    }

    public virtual void showTakeVegetable()
    {
         /*var vegetableGOCurrentPos:Vector3 = Camera.main.WorldToScreenPoint(new Vector3(
        Global._selectedVegetable.transform.position.x, 
        Global._selectedVegetable.transform.position.y + 3, 
        Global._selectedVegetable.transform.position.z
    ));

    vegetableGOCurrentPos.y = Screen.height - vegetableGOCurrentPos.y;*/
        if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_banana"))
        {
            Global.lootIcon = this.gs_common.gui_icons_food_banana;
        }
        else
        {
            if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_berries"))
            {
                Global.lootIcon = this.gs_common.gui_icons_food_berries;
            }
            else
            {
                if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_cabbage"))
                {
                    Global.lootIcon = this.gs_common.gui_icons_food_cabbage;
                }
                else
                {
                    if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_carrot"))
                    {
                        Global.lootIcon = this.gs_common.gui_icons_food_carrot;
                    }
                    else
                    {
                        if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_chicken"))
                        {
                            Global.lootIcon = this.gs_common.gui_icons_food_chicken;
                        }
                        else
                        {
                            if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_egg"))
                            {
                                Global.lootIcon = this.gs_common.gui_icons_food_egg;
                            }
                            else
                            {
                                if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_fish"))
                                {
                                    Global.lootIcon = this.gs_common.gui_icons_food_fish;
                                }
                                else
                                {
                                    if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_flour"))
                                    {
                                        Global.lootIcon = this.gs_common.gui_icons_food_flour;
                                    }
                                    else
                                    {
                                        if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_milk"))
                                        {
                                            Global.lootIcon = this.gs_common.gui_icons_food_milk;
                                        }
                                        else
                                        {
                                            if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_mushrooms"))
                                            {
                                                Global.lootIcon = this.gs_common.gui_icons_food_mushrooms;
                                            }
                                            else
                                            {
                                                if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_onion"))
                                                {
                                                    Global.lootIcon = this.gs_common.gui_icons_food_onion;
                                                }
                                                else
                                                {
                                                    if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_orange"))
                                                    {
                                                        Global.lootIcon = this.gs_common.gui_icons_food_orange;
                                                    }
                                                    else
                                                    {
                                                        if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_potatoes"))
                                                        {
                                                            Global.lootIcon = this.gs_common.gui_icons_food_potatoes;
                                                        }
                                                        else
                                                        {
                                                            if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_sourcream"))
                                                            {
                                                                Global.lootIcon = this.gs_common.gui_icons_food_sourcream;
                                                            }
                                                            else
                                                            {
                                                                if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_spice"))
                                                                {
                                                                    Global.lootIcon = this.gs_common.gui_icons_food_spice;
                                                                }
                                                                else
                                                                {
                                                                    if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_beans"))
                                                                    {
                                                                        Global.lootIcon = this.gs_common.gui_icons_food_beans;
                                                                    }
                                                                    else
                                                                    {
                                                                        if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_chickpea"))
                                                                        {
                                                                            Global.lootIcon = this.gs_common.gui_icons_food_chickpea;
                                                                        }
                                                                        else
                                                                        {
                                                                            if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_corn"))
                                                                            {
                                                                                Global.lootIcon = this.gs_common.gui_icons_food_corn;
                                                                            }
                                                                            else
                                                                            {
                                                                                if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_kidney_beans"))
                                                                                {
                                                                                    Global.lootIcon = this.gs_common.gui_icons_food_kidney_beans;
                                                                                }
                                                                                else
                                                                                {
                                                                                    if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_lentils"))
                                                                                    {
                                                                                        Global.lootIcon = this.gs_common.gui_icons_food_lentils;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_peanut"))
                                                                                        {
                                                                                            Global.lootIcon = this.gs_common.gui_icons_food_peanut;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            if ((Global._isRemoteVegetablePlace != null) && (Global.VegetableType == "food_peas"))
                                                                                            {
                                                                                                Global.lootIcon = this.gs_common.gui_icons_food_peas;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        //Лут с мобов
        if ((Global._selectedDropPlace != null) && (Global.lootType == "loot_metal"))
        {
            Global.lootIcon = this.gs_common.gui_icons_loot_metal;
        }
        else
        {
            if ((Global._selectedDropPlace != null) && (Global.lootType == "loot_plastic"))
            {
                Global.lootIcon = this.gs_common.gui_icons_loot_plastic;
            }
            else
            {
                if ((Global._selectedDropPlace != null) && (Global.lootType == "loot_cobweb"))
                {
                    Global.lootIcon = this.gs_common.gui_icons_loot_cobweb;
                }
                else
                {
                    if ((Global._selectedDropPlace != null) && (Global.lootType == "loot_deadspider"))
                    {
                        Global.lootIcon = this.gs_common.gui_icons_loot_deadspider;
                    }
                    else
                    {
                        if ((Global._selectedDropPlace != null) && (Global.lootType == "loot_eballon"))
                        {
                            Global.lootIcon = this.gs_common.gui_icons_loot_eballon;
                        }
                        else
                        {
                            if ((Global._selectedDropPlace != null) && (Global.lootType == "loot_cactus"))
                            {
                                Global.lootIcon = this.gs_common.gui_icons_loot_cactus;
                            }
                        }
                    }
                }
            }
        }
        //Лут с коровы и козла
        if ((Global._isRemoteAnimalPlace != null) && (Global.AnimalType == "food_milk"))
        {
            Global.lootIcon = this.gs_common.gui_icons_food_milk;
        }
        GUI.BeginGroup(new Rect(Global.labelLootPos.x - (106 * Global.guiRatio), Global.labelLootPos.y - (46 * Global.guiRatio), 212 * Global.guiRatio, 92 * Global.guiRatio));

        {
            float _64 = Global.labelLootAlpha;
            Color _65 = GUI.backgroundColor;
            _65.a = _64;
            GUI.backgroundColor = _65;
        }
        this.gs_font.font_arial_60_l_white.normal.textColor = new Color(1f, 1f, 1f, Global.labelLootAlpha);
        GUI.Box(new Rect(0, 0, 92 * Global.guiRatio, 92 * Global.guiRatio), "", Global.lootIcon);
        GUI.Label(new Rect(95 * Global.guiRatio, 22 * Global.guiRatio, 117 * Global.guiRatio, 60 * Global.guiRatio), "+ " + Global.VegetableAmount.ToString(), this.gs_font.font_arial_60_l_white);

        {
            float _66 = 1f;
            Color _67 = GUI.backgroundColor;
            _67.a = _66;
            GUI.backgroundColor = _67;
        }
        this.gs_font.font_arial_60_l_white.normal.textColor = new Color(1f, 1f, 1f, 1f);
        GUI.EndGroup();
    }

    public virtual void gui_GlobalMap() // Карта мира
    {
        float XVar = 0.0f;
        float ZVar = 0.0f;
        ZVar = 4 - (Global._hero_dolly.transform.position.z * 0.0038f);
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_worldmap_map);
        GUI.Box(new Rect(Screen.width + (Global._hero_dolly.transform.position.x * 5.2f), Screen.height - (Global._hero_dolly.transform.position.z * ZVar), 75 * Global.guiRatio, 109 * Global.guiRatio), "", this.gs_common.gui_worldmap_player);
        if (GUI.Button(new Rect(Screen.width - (52 * Global.guiRatio), (Screen.height / 2) - (539 * Global.guiRatio), 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close_dark))
        {
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = false;
            Global._isInventoryOpen = false;
            Global.UFOShowEntry = true;
            Global._isUFOScreen = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
            Global.someDropableObject = null;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
    }

    public virtual void gui_DeathScreen() // Экран котской кончины
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string216, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            System.GC.Collect();
            Application.Quit();
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 145 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string217, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            System.GC.Collect();
            Application.Quit();
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string218, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_ShipScreen() //Экран НЛО
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        //GUI.Box(Rect(0, 0, 1920*Global.guiRatio, 1080*Global.guiRatio), "", gs_common.gui_ufoscreen_ufo);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (872 * Global.guiRatio), (Screen.height / 2) - (419 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Кухня
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote1);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string054, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (686 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 576 * Global.guiRatio, 77 * Global.guiRatio)); //Музей
        GUI.Box(new Rect(0, 0, 576 * Global.guiRatio, 77 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote6);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string139, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string056, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global.someDropableObject = null;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect((Screen.width / 2) - (532 * Global.guiRatio), (Screen.height / 2) - (408 * Global.guiRatio), 311 * Global.guiRatio, 238 * Global.guiRatio), "", this.gs_common.emptystyle)) //Кухня
        {
            Global._isClickDlg = true;
            Global._isPopUpOpen = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("KitchenScreen");
            Global._dlgRun = false;
        }
        if (GUI.Button(new Rect((Screen.width / 2) + (125 * Global.guiRatio), (Screen.height / 2) - (460 * Global.guiRatio), 349 * Global.guiRatio, 233 * Global.guiRatio), "", this.gs_common.emptystyle)) //Мастерская
        {
            Global._isClickDlg = true;
            Global._isPopUpOpen = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._isTabCraftSelect = true;
            Global._isTabMakeoutSelect = false;
            Global._gui_SetInterface("CraftScreen");
            Global._dlgRun = false;
        }
        if (GUI.Button(new Rect((Screen.width / 2) - (180 * Global.guiRatio), (Screen.height / 2) + (91 * Global.guiRatio), 660 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.emptystyle)) //Склад 1
        {
            Global._isClickDlg = true;
            Global._isPopUpOpen = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            this.c_GameController_Base_command_SortThings();
            if (Global._isStorageFaraway)
            {
                Global._gui_SetInterface("StorageFarawayScreen");
            }
            else
            {
                Global._gui_SetInterface("StorageScreen");
            }
            Global.StorageInventoryArr = new List<Hashtable>(Global.globalInventoryThingsArr);
            Global.StorageInventoryArr.Remove(Global.StorageInventoryArr[0]);
            int j = 0;
            while (j < Global.StorageInventoryArr.Count)
            {
                (Global.StorageInventoryArr[j] as Hashtable)["fromdrag"] = "storage_inv";
                j++;
            }
            this.c_GameController_Base_command_SortStorageInventory();
            Global._dlgRun = false;
        }
        if (GUI.Button(new Rect((Screen.width / 2) + (231 * Global.guiRatio), (Screen.height / 2) - (236 * Global.guiRatio), 302 * Global.guiRatio, 327 * Global.guiRatio), "", this.gs_common.emptystyle)) //Склад 2
        {
            Global._isClickDlg = true;
            Global._isPopUpOpen = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            this.c_GameController_Base_command_SortThings();
            if (Global._isStorageFaraway)
            {
                Global._gui_SetInterface("StorageFarawayScreen");
            }
            else
            {
                Global._gui_SetInterface("StorageScreen");
            }
            Global.StorageInventoryArr = new List<Hashtable>(Global.globalInventoryThingsArr);
            Global.StorageInventoryArr.Remove(Global.StorageInventoryArr[0]);
            int i = 0;
            while (i < Global.StorageInventoryArr.Count)
            {
                (Global.StorageInventoryArr[i] as Hashtable)["fromdrag"] = "storage_inv";
                i++;
            }
            this.c_GameController_Base_command_SortStorageInventory();
            Global._dlgRun = false;
        }
        if (GUI.Button(new Rect((Screen.width / 2) - (544 * Global.guiRatio), (Screen.height / 2) - (136 * Global.guiRatio), 364 * Global.guiRatio, 377 * Global.guiRatio), "", this.gs_common.emptystyle)) //Библиотека
        {
            Global._isClickDlg = true;
            Global._isPopUpOpen = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("LibraryScreen");
            Global._dlgRun = false;
        }
        if (GUI.Button(new Rect((Screen.width / 2) - (209 * Global.guiRatio), (Screen.height / 2) - (482 * Global.guiRatio), 318 * Global.guiRatio, 124 * Global.guiRatio), "", this.gs_common.emptystyle)) //Музей
        {
            Global._isClickDlg = true;
            Global._isPopUpOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("MuseumScreen");
            Global._dlgRun = false;
        }
        GUI.EndGroup();
    }

    public virtual void gui_CharacterScreen() //Экран персонажа
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_inventory_background);
        if (GUI.Button(new Rect(Screen.width - (52 * Global.guiRatio), (Screen.height / 2) - (539 * Global.guiRatio), 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            if (Global._isUFOScreen)
            {
                Global._gui_CloseAllInterfaces();
                Global._isPopUpOpen = true;
                Global._isUFOScreen = true;
                ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                Global._gui_SetInterface("ShipScreen");
            }
            else
            {
                if (Global._isTutorial22 && !Global._isTutorial25)
                {
                    Global._isKot = true;
                    Global._isChangeChar = true;
                    Global.speakerGO = GameObject.Find("_kotSpeaker");
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.kot_dlg_003);
                    if (Global._isChangeChar)
                    {
                        if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                        {
                        }
                        else
                        {
                             //speak
                            this.ResetDialogue();
                        }
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue20");
                }
                else
                {
                    if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                    {
                        Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                        Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                        Global._isClickDialogue = true;
                        Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                        if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                        {
                        }
                        else
                        {
                             //speak
                            this.ResetDialogue();
                        }
                        this.StartCoroutine("DialogueEnd");
                        Global._gui_SetInterface("TutorialDialogue27");
                    }
                    else
                    {
                        Global._gui_CloseAllInterfaces();
                        Global._isPopUpOpen = false;
                        Global._isInventoryOpen = false;
                        Global.UFOShowEntry = true;
                        Global._isUFOScreen = false;
                        ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                        Global.someDropableObject = null;
                        Global._gui_SetInterface("WorldMap");
                    }
                }
            }
        }
        //Имя и здоровье героя
        GUI.BeginGroup(new Rect((Screen.width / 2) + (145 * Global.guiRatio), (Screen.height / 2) - (499 * Global.guiRatio), 768 * Global.guiRatio, 52 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 57 * Global.guiRatio, 49 * Global.guiRatio), "", this.gs_common.gui_inventory_heart);
        GUI.Box(new Rect(68 * Global.guiRatio, 34 * Global.guiRatio, 700 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_inventory_healthbar_empty);
        GUI.BeginGroup(new Rect(68 * Global.guiRatio, 34 * Global.guiRatio, ((Global._userCurrentHealth * 700) * Global.guiRatio) / Global._userMaxHealth, 18 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 700 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_inventory_healthbar_full);
        GUI.EndGroup();
        GUI.Label(new Rect(68 * Global.guiRatio, 6 * Global.guiRatio, 100 * Global.guiRatio, 40 * Global.guiRatio), Strings.string078, this.gs_font.font_b52_36_l_white);
        GUI.Label(new Rect(656 * Global.guiRatio, 10 * Global.guiRatio, 120 * Global.guiRatio, 30 * Global.guiRatio), (Global._userCurrentHealth.ToString() + "/") + Global._userMaxHealth.ToString(), this.gs_font.font_b52_28_l_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1830 * Global.guiRatio, 783 * Global.guiRatio));
        if (Global._isR3Backpack || Global._isR5Backpack)
        {
            GUI.Box(new Rect(0, 0, 1830 * Global.guiRatio, 783 * Global.guiRatio), "", this.gs_common.gui_inventory_cells);
        }
        else
        {
            GUI.Box(new Rect(0, 0, 1830 * Global.guiRatio, 783 * Global.guiRatio), "", this.gs_common.gui_inventory_cells_no_backpack);
        }
        //Панель статусов
        GUI.BeginGroup(new Rect(1058 * Global.guiRatio, 0, 772 * Global.guiRatio, 86 * Global.guiRatio));
        if (Global._isStatusMegaHealth)
        {
            GUI.Box(new Rect(240 * Global.guiRatio, 1 * Global.guiRatio, 83 * Global.guiRatio, 83 * Global.guiRatio), "", this.gs_common.gui_inventory_status_fullhealth);
        }
        GUI.EndGroup();
        //СЛОТЫ ГЕРОЯ
        GUI.Box(new Rect(1058 * Global.guiRatio, 96 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_weapons_icon);
        GUI.Box(new Rect(1058 * Global.guiRatio, 276 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_feature_icon);
        GUI.Box(new Rect(1058 * Global.guiRatio, 456 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_backpack_icon);
        GUI.Box(new Rect(1670 * Global.guiRatio, 96 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_armor_icon);
        GUI.Box(new Rect(1670 * Global.guiRatio, 276 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_gloves_icon);
        GUI.Box(new Rect(1670 * Global.guiRatio, 456 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_boots_icon);
        //Панель параметров
        GUI.BeginGroup(new Rect(1058 * Global.guiRatio, 636 * Global.guiRatio, 772 * Global.guiRatio, 148 * Global.guiRatio));
        GUI.Box(new Rect(40 * Global.guiRatio, 9 * Global.guiRatio, 64 * Global.guiRatio, 65 * Global.guiRatio), "", this.gs_common.gui_inventory_damage);
        GUI.Label(new Rect(104 * Global.guiRatio, 28 * Global.guiRatio, 125 * Global.guiRatio, 30 * Global.guiRatio), (Global._system_CharacterParams["damagemin"].ToString() + "-") + Global._system_CharacterParams["damagemax"].ToString(), this.gs_font.font_b52_36_c_white);
        GUI.Box(new Rect(40 * Global.guiRatio, 78 * Global.guiRatio, 64 * Global.guiRatio, 65 * Global.guiRatio), "", this.gs_common.gui_inventory_armor);
        GUI.Label(new Rect(104 * Global.guiRatio, 96 * Global.guiRatio, 125 * Global.guiRatio, 30 * Global.guiRatio), Global._system_CharacterParams["armor"].ToString(), this.gs_font.font_b52_36_c_white);
        GUI.EndGroup();
        //3D-модель героя
        GUI.DrawTexture(new Rect(1058 * Global.guiRatio, 0, 772 * Global.guiRatio, 772 * Global.guiRatio), this.gs_common.gui_inventory_hero_render);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(52 * Global.guiRatio, 15 * Global.guiRatio, 116 * Global.guiRatio, 113 * Global.guiRatio), "", this.gs_common.gui_inventory_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string093, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                    Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global._isInventoryOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global.someDropableObject = null;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        if (GUI.Button(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo))
        {
             //Экран НЛО
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = false;
            Global._isUFOScreen = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global.someDropableObject = null;
            Global._gui_SetInterface("ShipScreen");
        }
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory_hover);
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = false;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        this.drawUserInventory(Global.globalInventoryThingsArr, true);
        this.drawUserDummyThings();
        GUI.EndGroup();
        if (!(Global.someDropableObject == null) && Global.isMouseHold)
        {
            GUI.BeginGroup(new Rect(Global.gmPos.x - (80 * Global.guiRatio), Global.gmPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global.someDropableObject["object"] as Hashtable)["icon"]);
            GUI.EndGroup();
        }
    }

    private void drawUserInventory(System.Collections.Generic.List<Hashtable> inArr, bool isThings)
    {
        int itemArmor = 0;
        int itemHealth = 0;
        int removeArmor = 0;
        int removeHealth = 0;
        int addArmor = 0;
        int addHealth = 0;
        int minusHealth = 0;
        minusHealth = Global._userMaxHealth - Global._userCurrentHealth;
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1010 * Global.guiRatio, 670 * Global.guiRatio));
        foreach (Hashtable oneThingInv in inArr)
        {
            Rect iconThingRect = new Rect((int.Parse((string) oneThingInv["x"]) * 170) * Global.guiRatio, (int.Parse((string) oneThingInv["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio);
            if ((Global.someDropableObject == null) || (!(Global.someDropableObject == null) && !(Global.someDropableObject["uniqueID"] == oneThingInv["vid"])))
            {
                GUI.BeginGroup(iconThingRect);
                if (!(Global.someDropableObject == null))
                {
                    if (Global.someDropableObject["uniqueID"] == oneThingInv["uniqueID"])
                    {
                        if (!Global.isMouseHold)
                        {
                            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        }
                    }
                    else
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                        {
                            GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                        }
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                    {
                        GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                    }
                }
                GUI.EndGroup();
            }
            if ((Global.someDropableObject == null) && !(oneThingInv["type"] as string == "premium"))
            {
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) - (915 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (411 * Global.guiRatio));
                if (this.isPointInRect(iconThingRect, Global.gmPos))
                {
                    if (Input.GetMouseButtonDown(0) && !Global._isWeCanDragAndDrop)
                    {
                        Global._isWeCanDragAndDrop = true;
                        Global.lastMouseDownObjectForDrag = Time.realtimeSinceStartup;
                    }
                    else
                    {
                        if (Input.GetMouseButton(0) && Global._isWeCanDragAndDrop)
                        {
                            Global._isDummyThing = false;
                            Global._isInventoryThing = true;
                            someDropableObjectHash = this.getDropHashtableFor(oneThingInv);
                            someDropableObjectHash["fromdrag"] = "inventory";
                            Global.someDropableObject = someDropableObjectHash;
                        }
                    }
                    if (Input.GetMouseButtonUp(0) && Global._isWeCanDragAndDrop)
                    {
                        Global.isMouseHold = false;
                    }
                }
            }
            if (!(Global.someDropableObject == null) && !(oneThingInv["type"] as string == "premium"))
            {
                if (Global._isInventoryThing)
                {
                    GUI.Box(new Rect((int.Parse((string) Global.someDropableObject["x"]) * 170) * Global.guiRatio, (int.Parse((string) Global.someDropableObject["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) - (915 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (411 * Global.guiRatio));
                if (this.isPointInRect(iconThingRect, Global.gmPos))
                {
                    if (Input.GetMouseButtonDown(0) && !Global._isWeCanDragAndDrop)
                    {
                        Global._isDummyThing = false;
                        Global._isInventoryThing = true;
                        someDropableObjectHash = this.getDropHashtableFor(oneThingInv);
                        Global.someDropableObject = someDropableObjectHash;
                        Global._isWeCanDragAndDrop = true;
                        Global.lastMouseDownObjectForDrag = Time.realtimeSinceStartup;
                    }
                    else
                    {
                        if ((Input.GetMouseButton(0) && Global._isWeCanDragAndDrop) && ((Time.realtimeSinceStartup - Global.lastMouseDownObjectForDrag) > 0.2f))
                        {
                            Global.isMouseHold = true;
                        }
                    }
                    if (Input.GetMouseButtonUp(0) && Global._isWeCanDragAndDrop)
                    {
                        Global._isWeCanDragAndDrop = false;
                        Global.isMouseHold = false;
                    }
                }
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1830 * Global.guiRatio, 783 * Global.guiRatio));
        if (Global.someDropableObject == null)
        {
            GUI.Box(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
            GUI.Box(new Rect(883 * Global.guiRatio, 688 * Global.guiRatio, 94 * Global.guiRatio, 95 * Global.guiRatio), "", this.gs_common.gui_inventory_button_trashbin_d);
        }
        if (!(Global.someDropableObject == null) && (Global.someDropableObject["type"] as string == "loot"))
        {
            GUI.Box(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
            GUI.Box(new Rect(883 * Global.guiRatio, 688 * Global.guiRatio, 94 * Global.guiRatio, 95 * Global.guiRatio), "", this.gs_common.gui_inventory_button_trashbin_d);
        }
        if ((!(Global.someDropableObject == null) 
            && !(Global.someDropableObject["type"] as string == "loot")) 
            || ((!(Global.someDropableObject == null)
            && (Global.someDropableObject["type"] as string == "loot"))
            && (Global.someDropableObject["thingname"] as string == "food_milk")))
        {
            if (GUI.Button(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                if (Global._isInventoryThing)
                {
                    if (Global.someDropableObject["type"] as string == "food")
                    {
                        Global._userCurrentHealth = Global._userCurrentHealth + int.Parse((string) Global.someDropableObject["addhealth"]);
                        if (Global._userCurrentHealth > Global._userMaxHealth)
                        {
                            Global._isStatusMegaHealth = true;
                        }
                        System.Collections.Generic.List<Hashtable> FoodArrayTemp = Global.globalInventoryThingsArr;
                        int FoodObjIndex = FoodArrayTemp.IndexOf((Hashtable) Global.someDropableObject["object"]);
                        if (int.Parse((string) Global.someDropableObject["val"]) > 1)
                        {
                            Global.someDropableObject["val"] = int.Parse((string) Global.someDropableObject["val"]) - 1;
                            (Global.globalInventoryThingsArr[FoodObjIndex] as Hashtable)["val"] = Global.someDropableObject["val"].ToString();
                        }
                        else
                        {
                            Global.globalInventoryThingsArr.Remove(Global.globalInventoryThingsArr[FoodObjIndex]);
                        }
                        Global._isDropStart = false;
                        Global._isWeCanDragAndDrop = false;
                        Global.isMouseHold = false;
                        Global.someDropableObject = null;
                        this.c_GameController_Base_command_SortThings();
                    }
                    else
                    {
                        if ((Global.someDropableObject["type"] == "loot") && (Global.someDropableObject["thingname"] == "food_milk"))
                        {
                            Global._userCurrentHealth = Global._userCurrentHealth + 10;
                            if (Global._userCurrentHealth > Global._userMaxHealth)
                            {
                                Global._userCurrentHealth = Global._userMaxHealth;
                            }
                            System.Collections.Generic.List<Hashtable> LootArrayTemp = Global.globalInventoryThingsArr;
                            int LootObjIndex = LootArrayTemp.IndexOf((Hashtable) Global.someDropableObject["object"]);
                            if (int.Parse((string) Global.someDropableObject["val"]) > 1)
                            {
                                Global.someDropableObject["val"] = int.Parse((string) Global.someDropableObject["val"]) - 1;
                                (Global.globalInventoryThingsArr[LootObjIndex] as Hashtable)["val"] = Global.someDropableObject["val"].ToString();
                            }
                            else
                            {
                                Global.globalInventoryThingsArr.Remove(Global.globalInventoryThingsArr[LootObjIndex]);
                            }
                            (Global._userResourcesFood["food_milk"] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesFood["food_milk"] as Hashtable)["amount"]) - 1).ToString();
                            Global._isDropStart = false;
                            Global._isWeCanDragAndDrop = false;
                            Global.isMouseHold = false;
                            Global.someDropableObject = null;
                            this.c_GameController_Base_command_SortThings();
                        }
                        else
                        {
                            if ((!(Global.someDropableObject["armor"] == null) && !(Global.someDropableObject["armor"] == "")) && !(Global.someDropableObject["armor"] == "0"))
                            {
                                itemArmor = int.Parse((string) Global.someDropableObject["armor"]);
                            }
                            if ((!(Global.someDropableObject["health"] == null) && !(Global.someDropableObject["health"] == "")) && !(Global.someDropableObject["health"] == "0"))
                            {
                                itemHealth = int.Parse((string) Global.someDropableObject["health"]);
                            }
                            if (Global.system_dummy[Global.someDropableObject["type"]] == null)
                            {
                                Global.system_dummy.Add(Global.someDropableObject["type"], new Hashtable(new Hashtable() { {"position", Global.someDropableObject["type"] },  {"droptype", Global.someDropableObject["droptype"] },  {"type", Global.someDropableObject["type"] },  {"thingname", Global.someDropableObject["thingname"] },  {"icon", Global.someDropableObject["icon"] },  {"fromdrag", Global.someDropableObject["fromdrag"] },  {"isdropable", Global.someDropableObject["isdropable"] },  {"x", Global.someDropableObject["x"] },  {"y", Global.someDropableObject["y"] },  {"uniqueID", ((string) (((string) (((string) (((string) Global.someDropableObject["type"]) + Random.Range(1111, 9999).ToString())) + "_")) + Random.Range(1411, 9599).ToString())) + Random.Range(1171, 9991).ToString() },  {"vid", Global.someDropableObject["vid"] },  {"name", Global.someDropableObject["name"] },  {"armor", Global.someDropableObject["armor"] },  {"health", Global.someDropableObject["health"] },  {"level", Global.someDropableObject["level"] },  {"costtype1", Global.someDropableObject["costtype1"] },  {"costamount1", Global.someDropableObject["costamount1"] },  {"costicon1", Global.someDropableObject["costicon1"] },  {"costtype2", Global.someDropableObject["costtype2"] },  {"costamount2", Global.someDropableObject["costamount2"] },  {"costicon2", Global.someDropableObject["costicon2"] },  {"costtype3", Global.someDropableObject["costtype3"] },  {"costamount3", Global.someDropableObject["costamount3"] },  {"costicon3", Global.someDropableObject["costicon3"] },  {"costtype4", Global.someDropableObject["costtype4"] },  {"costamount4", Global.someDropableObject["costamount4"] },  {"costicon4", Global.someDropableObject["costicon4"] }, }));
                                Global._system_CharacterParams["armor"] = ((int) Global._system_CharacterParams["armor"]) + itemArmor;
                                Global._userMaxHealth = Global._userMaxHealth + itemHealth;
                                Global._userCurrentHealth = Global._userMaxHealth - minusHealth;
                                if (Global.someDropableObject["thingname"] == "thing_r3_backpack")
                                {
                                    Global._isR3Backpack = true;
                                    Global._isR5Backpack = false;
                                    Global.inv_r3_backpack.SetActive(true);
                                    Global.r3_backpack.SetActive(true);
                                    Global.inv_r5_backpack.SetActive(false);
                                    Global.r5_backpack.SetActive(false);
                                }
                                if (Global.someDropableObject["thingname"] == "thing_r5_backpack")
                                {
                                    Global._isR3Backpack = false;
                                    Global._isR5Backpack = true;
                                    Global.inv_r3_backpack.SetActive(false);
                                    Global.r3_backpack.SetActive(false);
                                    Global.inv_r5_backpack.SetActive(true);
                                    Global.r5_backpack.SetActive(true);
                                }
                                if (Global.someDropableObject["thingname"] == "thing_r3_gun")
                                {
                                    Global._isR3Gun = true;
                                    Global._system_distanceAttack = 10;
                                    Global._isAttack01 = false;
                                    Global._isAttack02 = true;
                                    Global._isAttack03 = false;
                                    Global.inv_r3_gun.SetActive(true);
                                    Global.r3_gun.SetActive(true);
                                    Global.inv_r4_gun.SetActive(false);
                                    Global.r4_gun.SetActive(false);
                                }
                                if (Global.someDropableObject["thingname"] == "thing_r4_gun")
                                {
                                    Global._isR3Gun = false;
                                    Global._isR4Gun = true;
                                    Global._system_distanceAttack = 10;
                                    Global._isAttack01 = false;
                                    Global._isAttack02 = false;
                                    Global._isAttack03 = true;
                                    Global.inv_r3_gun.SetActive(false);
                                    Global.r3_gun.SetActive(false);
                                    Global.inv_r4_gun.SetActive(true);
                                    Global.r4_gun.SetActive(true);
                                }
                                if (Global.someDropableObject["thingname"] == "thing_r4_body")
                                {
                                    Global._isR3Body = false;
                                    Global._isR4Body = true;
                                    Global.inv_r3_body.SetActive(false);
                                    Global.inv_r4_body.SetActive(true);
                                    Global.r3_body.SetActive(false);
                                    Global.r4_body.SetActive(true);
                                }
                                if (Global.someDropableObject["thingname"] == "thing_r4_hand")
                                {
                                    Global._isR3Hand = false;
                                    Global._isR4Hand = true;
                                    Global.inv_r3_hand.SetActive(false);
                                    Global.inv_r4_hand.SetActive(true);
                                    Global.r3_hand.SetActive(false);
                                    Global.r4_hand.SetActive(true);
                                }
                                if (Global.someDropableObject["thingname"] == "thing_r4_leg")
                                {
                                    Global._isR3Leg = false;
                                    Global._isR4Leg = true;
                                    Global.inv_r3_leg.SetActive(false);
                                    Global.inv_r4_leg.SetActive(true);
                                    Global.r3_leg.SetActive(false);
                                    Global.r4_leg.SetActive(true);
                                }
                                System.Collections.Generic.List<Hashtable> ThingsArrayTemp = Global.globalInventoryThingsArr;
                                int ThingsObjIndex = ThingsArrayTemp.IndexOf((Hashtable) Global.someDropableObject["object"]);
                                Global.globalInventoryThingsArr.Remove(Global.globalInventoryThingsArr[ThingsObjIndex]);
                                Global._isDropStart = false;
                                Global._isWeCanDragAndDrop = false;
                                Global.isMouseHold = false;
                                Global.someDropableObject = null;
                                this.c_GameController_Base_command_SortThings();
                            }
                            else
                            {
                                if ((!((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["armor"] == null) && !((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["armor"] == "")) && !((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["armor"] == "0"))
                                {
                                    removeArmor = int.Parse((string) (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["armor"]);
                                }
                                if ((!((Global.someDropableObject["object"] as Hashtable)["armor"] == null)
                                    && !((Global.someDropableObject["object"] as Hashtable)["armor"] as string== ""))
                                    && !((Global.someDropableObject["object"] as Hashtable)["armor"] as string == "0"))
                                {
                                    addArmor = int.Parse((Global.someDropableObject["object"] as Hashtable)["armor"] as string);
                                }
                                if ((!((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["health"] == null)
                                    && !((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["health"] as string == "")) 
                                    && !((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["health"] as string == "0"))
                                {
                                    removeHealth = int.Parse((string) (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["health"]);
                                }
                                if ((!((Global.someDropableObject["object"] as Hashtable)["health"] == null) 
                                    && !((Global.someDropableObject["object"] as Hashtable)["health"] as string == ""))
                                    && !((Global.someDropableObject["object"] as Hashtable)["health"] as string == "0"))
                                {
                                    addHealth = int.Parse((Global.someDropableObject["object"] as Hashtable)["health"] as string);
                                }

                                Global.globalInventoryThingsArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["droptype"] },  {"type", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["type"] },  {"thingname", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] },  {"icon", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["icon"] },  {"fromdrag", "inventory" },  {"isdropable", "true" },  {"x", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["x"] },  {"y", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["y"] },  {"uniqueID", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["uniqueID"] },  {"vid", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["vid"] },  {"level", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["level"] },  {"armor", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["armor"] },  {"health", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["health"] },  {"name", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["name"] },  {"costtype1", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costtype1"] },  {"costamount1", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costamount1"] },  {"costicon1", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costicon1"] },  {"costtype2", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costtype2"] },  {"costamount2", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costamount2"] },  {"costicon2", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costicon2"] },  {"costtype3", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costtype3"] },  {"costamount3", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costamount3"] },  {"costicon3", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costicon3"] },  {"costtype4", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costtype4"] },  {"costamount4", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costamount4"] },  {"costicon4", (Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["costicon4"] }, }));
                                //Вещи, которые снимаем
                                if ((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] as string == "thing_r3_backpack")
                                {
                                    Global._isR3Backpack = false;
                                    Global.inv_r3_backpack.SetActive(false);
                                    Global.r3_backpack.SetActive(false);
                                }
                                if ((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] as string == "thing_r5_backpack")
                                {
                                    Global._isR5Backpack = false;
                                    Global.inv_r5_backpack.SetActive(false);
                                    Global.r5_backpack.SetActive(false);
                                }
                                if ((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] as string == "thing_r3_gun")
                                {
                                    Global._isR3Gun = false;
                                    Global._system_distanceAttack = 3;
                                    Global._isAttack01 = true;
                                    Global._isAttack02 = false;
                                    Global.inv_r3_gun.SetActive(false);
                                    Global.r3_gun.SetActive(false);
                                }
                                if ((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] as string == "thing_r4_gun")
                                {
                                    Global._isR4Gun = false;
                                    Global._system_distanceAttack = 3;
                                    Global._isAttack01 = true;
                                    Global._isAttack03 = false;
                                    Global.inv_r4_gun.SetActive(false);
                                    Global.r4_gun.SetActive(false);
                                }
                                if ((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] as string == "thing_r4_body")
                                {
                                    Global._isR3Body = true;
                                    Global._isR4Body = false;
                                    Global.inv_r3_body.SetActive(true);
                                    Global.inv_r4_body.SetActive(false);
                                    Global.r3_body.SetActive(true);
                                    Global.r4_body.SetActive(false);
                                }
                                if ((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] as string == "thing_r3_hand")
                                {
                                    Global._isR3Hand = false;
                                    Global._isR4Hand = true;
                                    Global.inv_r3_hand.SetActive(false);
                                    Global.inv_r4_hand.SetActive(true);
                                    Global.r3_hand.SetActive(false);
                                    Global.r4_hand.SetActive(true);
                                }
                                if ((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] as string == "thing_r4_hand")
                                {
                                    Global._isR3Hand = true;
                                    Global._isR4Hand = false;
                                    Global.inv_r3_hand.SetActive(true);
                                    Global.inv_r4_hand.SetActive(false);
                                    Global.r3_hand.SetActive(true);
                                    Global.r4_hand.SetActive(false);
                                }
                                if ((Global.system_dummy[Global.someDropableObject["type"]] as Hashtable)["thingname"] as string == "thing_r4_leg")
                                {
                                    Global._isR3Leg = true;
                                    Global._isR4Leg = false;
                                    Global.inv_r3_leg.SetActive(true);
                                    Global.inv_r4_leg.SetActive(false);
                                    Global.r3_leg.SetActive(true);
                                    Global.r4_leg.SetActive(false);
                                }
                                Global.system_dummy.Remove(Global.someDropableObject["type"]);
                                Global.system_dummy.Add(Global.someDropableObject["type"], new Hashtable(new Hashtable() { {"position", Global.someDropableObject["type"] },  {"droptype", Global.someDropableObject["droptype"] },  {"type", Global.someDropableObject["type"] },  {"thingname", Global.someDropableObject["thingname"] },  {"icon", Global.someDropableObject["icon"] },  {"fromdrag", Global.someDropableObject["fromdrag"] },  {"isdropable", Global.someDropableObject["isdropable"] },  {"x", Global.someDropableObject["x"] },  {"y", Global.someDropableObject["y"] },  {"uniqueID", ((string) (((string) (((string) (((string) Global.someDropableObject["type"]) + Random.Range(1111, 9999).ToString())) + "_")) + Random.Range(1411, 9599).ToString())) + Random.Range(1171, 9991).ToString() },  {"vid", Global.someDropableObject["vid"] },  {"name", Global.someDropableObject["name"] },  {"armor", Global.someDropableObject["armor"] },  {"health", Global.someDropableObject["health"] },  {"level", Global.someDropableObject["level"] },  {"costtype1", Global.someDropableObject["costtype1"] },  {"costamount1", Global.someDropableObject["costamount1"] },  {"costicon1", Global.someDropableObject["costicon1"] },  {"costtype2", Global.someDropableObject["costtype2"] },  {"costamount2", Global.someDropableObject["costamount2"] },  {"costicon2", Global.someDropableObject["costicon2"] },  {"costtype3", Global.someDropableObject["costtype3"] },  {"costamount3", Global.someDropableObject["costamount3"] },  {"costicon3", Global.someDropableObject["costicon3"] },  {"costtype4", Global.someDropableObject["costtype4"] },  {"costamount4", Global.someDropableObject["costamount4"] },  {"costicon4", Global.someDropableObject["costicon4"] }, }));
                                //Вещи, которые надеваем
                                if (Global.someDropableObject["thingname"] as string == "thing_r3_backpack")
                                {
                                    Global._isR3Backpack = true;
                                    Global._isR5Backpack = false;
                                    Global.inv_r3_backpack.SetActive(true);
                                    Global.r3_backpack.SetActive(true);
                                    Global.inv_r5_backpack.SetActive(false);
                                    Global.r5_backpack.SetActive(false);
                                }
                                if (Global.someDropableObject["thingname"] as string == "thing_r5_backpack")
                                {
                                    Global._isR3Backpack = false;
                                    Global._isR5Backpack = true;
                                    Global.inv_r3_backpack.SetActive(false);
                                    Global.r3_backpack.SetActive(false);
                                    Global.inv_r5_backpack.SetActive(true);
                                    Global.r5_backpack.SetActive(true);
                                }
                                if (Global.someDropableObject["thingname"] as string == "thing_r3_gun")
                                {
                                    Global._isR3Gun = true;
                                    Global._isR4Gun = false;
                                    Global._system_distanceAttack = 10;
                                    Global._isAttack01 = false;
                                    Global._isAttack02 = true;
                                    Global._isAttack03 = false;
                                    Global.inv_r3_gun.SetActive(true);
                                    Global.r3_gun.SetActive(true);
                                    Global.inv_r4_gun.SetActive(false);
                                    Global.r4_gun.SetActive(false);
                                }
                                if (Global.someDropableObject["thingname"] as string == "thing_r4_gun")
                                {
                                    Global._isR3Gun = false;
                                    Global._isR4Gun = true;
                                    Global._system_distanceAttack = 10;
                                    Global._isAttack01 = false;
                                    Global._isAttack02 = false;
                                    Global._isAttack03 = true;
                                    Global.inv_r3_gun.SetActive(false);
                                    Global.r3_gun.SetActive(false);
                                    Global.inv_r4_gun.SetActive(true);
                                    Global.r4_gun.SetActive(true);
                                }
                                if (Global.someDropableObject["thingname"] as string == "thing_r4_body")
                                {
                                    Global._isR3Body = false;
                                    Global._isR4Body = true;
                                    Global.inv_r3_body.SetActive(false);
                                    Global.inv_r4_body.SetActive(true);
                                    Global.r3_body.SetActive(false);
                                    Global.r4_body.SetActive(true);
                                }
                                if (Global.someDropableObject["thingname"] as string == "thing_r4_hand")
                                {
                                    Global._isR3Hand = false;
                                    Global._isR4Hand = true;
                                    Global.inv_r3_hand.SetActive(false);
                                    Global.inv_r4_hand.SetActive(true);
                                    Global.r3_hand.SetActive(false);
                                    Global.r4_hand.SetActive(true);
                                }
                                if (Global.someDropableObject["thingname"] as string == "thing_r4_leg")
                                {
                                    Global._isR3Leg = false;
                                    Global._isR4Leg = true;
                                    Global.inv_r3_leg.SetActive(false);
                                    Global.inv_r4_leg.SetActive(true);
                                    Global.r3_leg.SetActive(false);
                                    Global.r4_leg.SetActive(true);
                                }
                                Global._system_CharacterParams["armor"] = ((int) (((int) Global._system_CharacterParams["armor"]) - removeArmor)) + addArmor;
                                Global._userMaxHealth = (Global._userMaxHealth - removeHealth) + addHealth;
                                if (Global._userCurrentHealth > Global._userMaxHealth)
                                {
                                    Global._userCurrentHealth = Global._userMaxHealth;
                                }
                                Global._userCurrentHealth = Global._userMaxHealth - minusHealth;
                                System.Collections.Generic.List<Hashtable> ThingsInvArrayTemp = Global.globalInventoryThingsArr;
                                int ThingsInvObjIndex = ThingsInvArrayTemp.IndexOf((Hashtable) Global.someDropableObject["object"]);
                                Global.globalInventoryThingsArr.Remove(Global.globalInventoryThingsArr[ThingsInvObjIndex]);
                                Global._isDropStart = false;
                                Global._isWeCanDragAndDrop = false;
                                Global.isMouseHold = false;
                                Global.someDropableObject = null;
                                this.c_GameController_Base_command_SortThings();
                            }
                        }
                    }
                }
                else
                {
                    if (Global._isDummyThing)
                    {
                        if ((!((Global.someDropableObject["object"] as Hashtable)["armor"] == null)
                            && !((Global.someDropableObject["object"] as Hashtable)["armor"] as string == "")) 
                            && !((Global.someDropableObject["object"] as Hashtable)["armor"] as string == "0"))
                        {
                            removeArmor = int.Parse((Global.someDropableObject["object"] as Hashtable)["armor"]as string);
                        }
                        if ((!((Global.someDropableObject["object"] as Hashtable)["health"] == null) 
                            && !((Global.someDropableObject["object"] as Hashtable)["health"] as string == "")) 
                            && !((Global.someDropableObject["object"] as Hashtable)["health"] as string == "0"))
                        {
                            removeHealth = int.Parse((Global.someDropableObject["object"] as Hashtable)["health"] as string);
                        }
                        if (((Global._isR3Backpack || Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 24)) || ((!Global._isR3Backpack || !Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 12)))
                        {
                            (Global.someDropableObject["object"] as Hashtable)["level"] = "1";
                            Global.globalInventoryThingsArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "inventory" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"armor", (Global.someDropableObject["object"] as Hashtable)["armor"] },  {"health", (Global.someDropableObject["object"] as Hashtable)["health"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                            if (Global.someDropableObject["thingname"] as string == "thing_r3_backpack")
                            {
                                Global._isR3Backpack = false;
                                Global.inv_r3_backpack.SetActive(false);
                                Global.r3_backpack.SetActive(false);
                            }
                            if (Global.someDropableObject["thingname"] as string == "thing_r5_backpack")
                            {
                                Global._isR5Backpack = false;
                                Global.inv_r5_backpack.SetActive(false);
                                Global.r5_backpack.SetActive(false);
                            }
                            if (Global.someDropableObject["thingname"] as string == "thing_r3_gun")
                            {
                                Global._isR3Gun = false;
                                Global._system_distanceAttack = 3;
                                Global._isAttack01 = true;
                                Global._isAttack02 = false;
                                Global.inv_r3_gun.SetActive(false);
                                Global.r3_gun.SetActive(false);
                            }
                            if (Global.someDropableObject["thingname"] as string == "thing_r4_gun")
                            {
                                Global._isR4Gun = false;
                                Global._system_distanceAttack = 3;
                                Global._isAttack01 = true;
                                Global._isAttack03 = false;
                                Global.inv_r4_gun.SetActive(false);
                                Global.r4_gun.SetActive(false);
                            }
                            if (Global.someDropableObject["thingname"] as string == "thing_r4_body")
                            {
                                Global._isR3Body = true;
                                Global._isR4Body = false;
                                Global.inv_r3_body.SetActive(true);
                                Global.inv_r4_body.SetActive(false);
                                Global.r3_body.SetActive(true);
                                Global.r4_body.SetActive(false);
                            }
                            if (Global.someDropableObject["thingname"] as string == "thing_r4_hand")
                            {
                                Global._isR3Hand = true;
                                Global._isR4Hand = false;
                                Global.inv_r3_hand.SetActive(true);
                                Global.inv_r4_hand.SetActive(false);
                                Global.r3_hand.SetActive(true);
                                Global.r4_hand.SetActive(false);
                            }
                            if (Global.someDropableObject["thingname"] as string == "thing_r4_leg")
                            {
                                Global._isR3Leg = true;
                                Global._isR4Leg = false;
                                Global.inv_r3_leg.SetActive(true);
                                Global.inv_r4_leg.SetActive(false);
                                Global.r3_leg.SetActive(true);
                                Global.r4_leg.SetActive(false);
                            }
                            Global._system_CharacterParams["armor"] = ((int) Global._system_CharacterParams["armor"]) - removeArmor;
                            Global._userMaxHealth = Global._userMaxHealth - removeHealth;
                            if (Global._userCurrentHealth > Global._userMaxHealth)
                            {
                                Global._userCurrentHealth = Global._userMaxHealth;
                            }
                            Global._userCurrentHealth = Global._userMaxHealth - minusHealth;
                            Global.system_dummy.Remove(Global.someDropableObject["type"]);
                            Global._isDropStart = false;
                            Global._isWeCanDragAndDrop = false;
                            Global.isMouseHold = false;
                            Global.someDropableObject = null;
                            this.c_GameController_Base_command_SortThings();
                        }
                        else
                        {
                            Global._gui_AddInterface("InventoryFullPopUp");
                        }
                    }
                }
            }
            if (GUI.Button(new Rect(883 * Global.guiRatio, 688 * Global.guiRatio, 94 * Global.guiRatio, 95 * Global.guiRatio), "", this.gs_common.gui_inventory_button_trashbin))
            {
            }
        }
         //Выбросить предмет
        if (Global._isInventoryThing)
        {
            if (!(Global.someDropableObject == null))
            {
                if ((Global.someDropableObject["type"] as string == "food") 
                    || ((Global.someDropableObject["type"] as string == "loot")
                    && (Global.someDropableObject["thingname"] as string == "food_milk")))
                {
                    GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string096, this.gs_font.font_28daysletter_60_cb_blue);
                }
                else
                {
                    GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string094, this.gs_font.font_28daysletter_60_cb_blue);
                }
            }
            else
            {
                GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string097, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        else
        {
            if (Global._isDummyThing)
            {
                GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string095, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        //GUI.Label(Rect(Screen.width/2 - 493*Global.guiRatio, Screen.height/2 + 290*Global.guiRatio, 411*Global.guiRatio, 50*Global.guiRatio), Strings.string014, gs_font.font_arial_47_cb_white);
        GUI.EndGroup();
    }

    private bool isPointInRect(Rect place, Vector2 mv)
    {
        if (place.Contains(mv))
        {
            return true;
        }
        return false;
    }

    private Hashtable getDropHashtableFor(Hashtable typeDropObj)
    {
        Hashtable resHash = null;
        if (typeDropObj["droptype"] as string == "thing")
        {
            if (Global._isR3Backpack || Global._isR5Backpack)
            {
                resHash = new Hashtable(new Hashtable() { {"drops", new Hashtable(new Hashtable() { {"inventory", new Rect[] {new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) - (71 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) + (99 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} }, }) },  {"dropshover", new Hashtable(new Hashtable() { {"wear", true }, }) },  {"fromdrag", "" }, });
            }
            else
            {
                resHash = new Hashtable(new Hashtable() { {"drops", new Hashtable(new Hashtable() { {"inventory", new Rect[] {new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (745 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (575 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (405 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (235 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (65 * Global.guiRatio), (Screen.height / 2) - (241 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} }, }) },  {"dropshover", new Hashtable(new Hashtable() { {"wear", true }, }) },  {"fromdrag", "" }, });
            }
            (resHash["drops"] as Hashtable).Add("wear", new Hashtable());
            if (typeDropObj["type"] as string == "ring")
            {
                ((resHash["drops"] as Hashtable)["wear"] as Hashtable).Add("ring", Global._someWearHashPlace_StrplaceToRect["ring"]);
                ((resHash["drops"] as Hashtable)["wear"] as Hashtable).Add("ring2", Global._someWearHashPlace_StrplaceToRect["ring2"]);
            }
            else
            {
                if ((typeDropObj["type"] as string == "weapon")
                    && ((typeDropObj["weapontype"] as string == "bow") 
                    || (typeDropObj["weapontype"] as string == "magic")))
                {
                    ((resHash["drops"] as Hashtable)["wear"] as Hashtable).Add("weapon", Global._someWearHashPlace_StrplaceToRect["weapon"]);
                    ((resHash["drops"] as Hashtable)["wear"] as Hashtable).Add("shield", Global._someWearHashPlace_StrplaceToRect["shield"]);
                }
                else
                {
                    ((resHash["drops"] as Hashtable)["wear"] as Hashtable).Add(typeDropObj["type"], Global._someWearHashPlace_StrplaceToRect[typeDropObj["type"]]);
                }
            }
        }
        resHash["object"] = typeDropObj;
        resHash["type"] = typeDropObj["type"];
        resHash["droptype"] = typeDropObj["droptype"];
        resHash["thingname"] = typeDropObj["thingname"];
        resHash["icon"] = typeDropObj["icon"];
        resHash["fromdrag"] = typeDropObj["fromdrag"];
        resHash["isdropable"] = typeDropObj["isdropable"];
        resHash["vid"] = typeDropObj["vid"];
        resHash["x"] = typeDropObj["x"];
        resHash["y"] = typeDropObj["y"];
        resHash["uniqueID"] = typeDropObj["uniqueID"];
        resHash["name"] = typeDropObj["name"];
        resHash["costtype1"] = typeDropObj["costtype1"];
        resHash["costamount1"] = typeDropObj["costamount1"];
        resHash["costicon1"] = typeDropObj["costicon1"];
        resHash["costtype2"] = typeDropObj["costtype2"];
        resHash["costamount2"] = typeDropObj["costamount2"];
        resHash["costicon2"] = typeDropObj["costicon2"];
        resHash["costtype3"] = typeDropObj["costtype3"];
        resHash["costamount3"] = typeDropObj["costamount3"];
        resHash["costicon3"] = typeDropObj["costicon3"];
        resHash["costtype4"] = typeDropObj["costtype4"];
        resHash["costamount4"] = typeDropObj["costamount4"];
        resHash["costicon4"] = typeDropObj["costicon4"];
        if (resHash["type"] as string == "food")
        {
            resHash["addhealth"] = typeDropObj["addhealth"];
            resHash["val"] = typeDropObj["val"];
        }
        else
        {
            if (resHash["type"] as string == "loot")
            {
                resHash["val"] = typeDropObj["val"];
            }
            else
            {
                resHash["armor"] = typeDropObj["armor"];
                resHash["health"] = typeDropObj["health"];
            }
        }
        return resHash;
    }

    private Hashtable getDropHashtableForStorage(Hashtable typeDropObj)
    {
        Hashtable resHash = null;
        if (!Global._isStorageFaraway)
        {
            if (typeDropObj["droptype"] as string == "thing")
            {
                if (Global._isR3Backpack || Global._isR5Backpack)
                {
                    resHash = new Hashtable(new Hashtable() { {"drops", new Hashtable(new Hashtable() { {"storage_inv", new Rect[] {new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} },  {"storage", new Rect[] {new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} }, }) },  {"dropshover", new Hashtable(new Hashtable() { {"wear", true }, }) },  {"fromdrag", "" }, });
                }
                else
                {
                    resHash = new Hashtable(new Hashtable() { {"drops", new Hashtable(new Hashtable() { {"storage_inv", new Rect[] {new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} },  {"storage", new Rect[] {new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} }, }) },  {"dropshover", new Hashtable(new Hashtable() { {"wear", true }, }) },  {"fromdrag", "" }, });
                }
                (resHash["drops"] as Hashtable).Add("wear", new Hashtable());
            }
            else
            {
                if ((typeDropObj["droptype"] as string == "food") || (typeDropObj["droptype"] as string == "loot"))
                {
                    if (Global._isR3Backpack || Global._isR5Backpack)
                    {
                        resHash = new Hashtable(new Hashtable() { {"drops", new Hashtable(new Hashtable() { {"storage_inv", new Rect[] {new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} },  {"storage", new Rect[] {new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} }, }) },  {"dropshover", new Hashtable(new Hashtable() {}) },  {"fromdrag", "" }, });
                    }
                    else
                    {
                        resHash = new Hashtable(new Hashtable() { {"drops", new Hashtable(new Hashtable() { {"storage_inv", new Rect[] {new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} },  {"storage", new Rect[] {new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (3 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (173 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (343 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} }, }) },  {"dropshover", new Hashtable(new Hashtable() {}) },  {"fromdrag", "" }, });
                    }
                }
            }
        }
        else
        {
            if (typeDropObj["droptype"] as string == "thing")
            {
                resHash = new Hashtable(new Hashtable() { {"drops", new Hashtable(new Hashtable() { {"storage_inv", new Rect[] {new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} },  {"storage", new object[] {} }, }) },  {"dropshover", new Hashtable(new Hashtable() { {"wear", true }, }) },  {"fromdrag", "" }, });
                (resHash["drops"] as Hashtable).Add("wear", new Hashtable());
            }
            else
            {
                if ((typeDropObj["droptype"] as string == "food") || (typeDropObj["droptype"] as string == "loot"))
                {
                    resHash = new Hashtable(new Hashtable() { {"drops", new Hashtable(new Hashtable() { {"storage_inv", new Rect[] {new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (202 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) - (32 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (866 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (696 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (526 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), new Rect((Screen.width / 2) - (356 * Global.guiRatio), (Screen.height / 2) + (138 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio)} },  {"storage", new object[] {} }, }) },  {"dropshover", new Hashtable(new Hashtable() {}) },  {"fromdrag", "" }, });
                }
            }
        }
        resHash["object"] = typeDropObj;
        resHash["type"] = typeDropObj["type"];
        resHash["droptype"] = typeDropObj["droptype"];
        resHash["thingname"] = typeDropObj["thingname"];
        resHash["icon"] = typeDropObj["icon"];
        resHash["fromdrag"] = typeDropObj["fromdrag"];
        resHash["isdropable"] = typeDropObj["isdropable"];
        resHash["vid"] = typeDropObj["vid"];
        resHash["x"] = typeDropObj["x"];
        resHash["y"] = typeDropObj["y"];
        resHash["uniqueID"] = typeDropObj["uniqueID"];
        resHash["name"] = typeDropObj["name"];
        resHash["costtype1"] = typeDropObj["costtype1"];
        resHash["costamount1"] = typeDropObj["costamount1"];
        resHash["costicon1"] = typeDropObj["costicon1"];
        resHash["costtype2"] = typeDropObj["costtype2"];
        resHash["costamount2"] = typeDropObj["costamount2"];
        resHash["costicon2"] = typeDropObj["costicon2"];
        resHash["costtype3"] = typeDropObj["costtype3"];
        resHash["costamount3"] = typeDropObj["costamount3"];
        resHash["costicon3"] = typeDropObj["costicon3"];
        resHash["costtype4"] = typeDropObj["costtype4"];
        resHash["costamount4"] = typeDropObj["costamount4"];
        resHash["costicon4"] = typeDropObj["costicon4"];
        if (resHash["type"] as string == "food")
        {
            resHash["addhealth"] = typeDropObj["addhealth"];
            resHash["val"] = typeDropObj["val"];
        }
        else
        {
            if (resHash["type"] as string == "loot")
            {
                resHash["val"] = typeDropObj["val"];
            }
            else
            {
                resHash["armor"] = typeDropObj["armor"];
                resHash["health"] = typeDropObj["health"];
            }
        }
        return resHash;
    }

    private void drawUserDummyThings()
    {
        foreach (DictionaryEntry oneEntry in Global.system_dummy)
        {
            Rect iconThingRect = new Rect();
            if ((oneEntry.Value as Hashtable).ContainsKey("position"))
            {
                if (Global._someWearHashPlace_StrplaceToRect.ContainsKey((oneEntry.Value as Hashtable)["position"]))
                {
                    iconThingRect = (Rect) Global._someWearHashPlace_StrplaceToRect[(oneEntry.Value as Hashtable)["position"]];
                }
            }
            else
            {
            }
             //nothing
            if ((Global.someDropableObject == null) || (!(Global.someDropableObject == null) && !(Global.someDropableObject["uniqueID"] == (oneEntry.Value as Hashtable)["vid"])))
            {
                GUI.BeginGroup(new Rect(iconThingRect.x, iconThingRect.y, iconThingRect.height, iconThingRect.width));
                if (!(Global.someDropableObject == null))
                {
                    if (Global.someDropableObject["uniqueID"] == (oneEntry.Value as Hashtable)["uniqueID"])
                    {
                        if (!Global.isMouseHold)
                        {
                            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (oneEntry.Value as Hashtable)["icon"]);
                        }
                    }
                    else
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (oneEntry.Value as Hashtable)["icon"]);
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (oneEntry.Value as Hashtable)["icon"]);
                }
                GUI.EndGroup();
            }
            if (Global.someDropableObject == null)
            {
                if (this.isPointInRect(iconThingRect, Global.gmPos))
                {
                    if (Input.GetMouseButtonDown(0))
                    {
                        if (Input.GetMouseButtonDown(0) && !Global._isWeCanDragAndDrop)
                        {
                            Global._isDummyThing = true;
                            Global._isInventoryThing = false;
                            Hashtable someDropableObjectHash = this.getDropHashtableFor((Hashtable) oneEntry.Value);
                            if (!(someDropableObjectHash["type"] as string == "loot"))
                            {
                                someDropableObjectHash["fromdrag"] = "wear";
                            }
                            if (!Global._isFaceCharacterInventoryThings)
                            {
                                ((someDropableObjectHash["drops"] as Hashtable)["inventory"] as Stack<object>).Clear();
                            }
                            Global.someDropableObject = someDropableObjectHash;
                            Global._isWeCanDragAndDrop = true;
                            this.iconDummyThingRect = (Rect) Global._someWearHashPlace_StrplaceToRect[Global.someDropableObject["type"]];
                            Global.lastMouseDownObjectForDrag = Time.realtimeSinceStartup;
                        }
                        else
                        {
                            if ((Input.GetMouseButton(0) && Global._isWeCanDragAndDrop) && ((Time.realtimeSinceStartup - Global.lastMouseDownObjectForDrag) > 0.2f))
                            {
                                Global.isMouseHold = true;
                            }
                        }
                        if (Input.GetMouseButtonUp(0) && Global._isWeCanDragAndDrop)
                        {
                            Global.isMouseHold = false;
                        }
                    }
                }
            }
            if (!(Global.someDropableObject == null))
            {
                if (Global._isDummyThing)
                {
                    GUI.Box(new Rect(this.iconDummyThingRect.x, this.iconDummyThingRect.y, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                if (this.isPointInRect(iconThingRect, Global.gmPos))
                {
                    if (Input.GetMouseButtonDown(0) && !Global._isWeCanDragAndDrop)
                    {
                        Global._isDummyThing = true;
                        Global._isInventoryThing = false;
                        someDropableObjectHash = this.getDropHashtableFor((Hashtable) oneEntry.Value);
                        if (!(someDropableObjectHash["type"] == "loot"))
                        {
                            someDropableObjectHash["fromdrag"] = "wear";
                        }
                        if (!Global._isFaceCharacterInventoryThings)
                        {
                            ((someDropableObjectHash["drops"] as Hashtable)["inventory"] as Stack<object>).Clear();
                        }
                        Global.someDropableObject = someDropableObjectHash;
                        Global._isWeCanDragAndDrop = true;
                        this.iconDummyThingRect = (Rect) Global._someWearHashPlace_StrplaceToRect[Global.someDropableObject["type"]];
                        Global.lastMouseDownObjectForDrag = Time.realtimeSinceStartup;
                    }
                    else
                    {
                        if ((Input.GetMouseButton(0) && Global._isWeCanDragAndDrop) && ((Time.realtimeSinceStartup - Global.lastMouseDownObjectForDrag) > 0.2f))
                        {
                            Global.isMouseHold = true;
                        }
                    }
                    if (Input.GetMouseButtonUp(0) && Global._isWeCanDragAndDrop)
                    {
                        Global._isWeCanDragAndDrop = false;
                        Global.isMouseHold = false;
                    }
                }
            }
        }
    }

    public virtual void gui_StoreScreen() //Экран магазина
    {
        GUI.BeginGroup(new Rect(0, 0, 1920 * Global.guiRatio, 1080 * Global.guiRatio));
        GUI.BeginGroup(new Rect(0, Screen.height - (145 * Global.guiRatio), 1920 * Global.guiRatio, 145 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 145 * Global.guiRatio), "", this.gs_common.gui_worldmap_background);
        if (GUI.Button(new Rect(1138 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        if (GUI.Button(new Rect(1295 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_ship))
        {
             //Экран корабля
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        if (GUI.Button(new Rect(1451 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_character))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1607 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_shop))
        {
             //Экран магазина
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("StoreScreen");
        }
        if (GUI.Button(new Rect(1763 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 0, 1920 * Global.guiRatio, 935 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 935 * Global.guiRatio), "", this.gs_common.gui_test_background);
        GUI.Label(new Rect(0, 46 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Strings.string005, this.gs_font.font_arial_72_c_white);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_PierScreen() //Экран причала
    {
        GUI.BeginGroup(new Rect(0, 0, 1920 * Global.guiRatio, 1080 * Global.guiRatio));
        GUI.BeginGroup(new Rect(0, Screen.height - (145 * Global.guiRatio), 1920 * Global.guiRatio, 145 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 145 * Global.guiRatio), "", this.gs_common.gui_worldmap_background);
        if (GUI.Button(new Rect(1138 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        if (GUI.Button(new Rect(1295 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_ship))
        {
             //Экран корабля
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        if (GUI.Button(new Rect(1451 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_character))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1607 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_shop))
        {
             //Экран магазина
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("StoreScreen");
        }
        if (GUI.Button(new Rect(1763 * Global.guiRatio, 10 * Global.guiRatio, 128 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 0, 1920 * Global.guiRatio, 935 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 935 * Global.guiRatio), "", this.gs_common.gui_test_background);
        if (Global._isSea)
        {
            GUI.Label(new Rect(0, 46 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Strings.string009, this.gs_font.font_arial_72_c_white);
            GUI.Box(new Rect(0, 145 * Global.guiRatio, 1920 * Global.guiRatio, 395 * Global.guiRatio), "", this.gs_common.gui_test_island);
            GUI.Label(new Rect(0, 572 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Strings.string010, this.gs_font.font_arial_72_c_white);
        }
        else
        {
            if (Global._isIsland)
            {
                GUI.Label(new Rect(0, 46 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Strings.string011, this.gs_font.font_arial_72_c_white);
                GUI.Box(new Rect(0, 145 * Global.guiRatio, 1920 * Global.guiRatio, 395 * Global.guiRatio), "", this.gs_common.gui_test_sea);
                GUI.Label(new Rect(0, 572 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Strings.string012, this.gs_font.font_arial_72_c_white);
            }
        }
        if (GUI.Button(new Rect(611 * Global.guiRatio, 708 * Global.guiRatio, 256 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_test_button))
        {
             //Загрузить остров
            Global.globalBus.gameObject.SendMessage("c_GameController_LoadZone");
        }
        GUI.Label(new Rect(611 * Global.guiRatio, 741 * Global.guiRatio, 256 * Global.guiRatio, 60 * Global.guiRatio), Strings.string007, this.gs_font.font_arial_72_c_white);
        if (GUI.Button(new Rect(1053 * Global.guiRatio, 708 * Global.guiRatio, 256 * Global.guiRatio, 128 * Global.guiRatio), "", this.gs_common.gui_test_button))
        {
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            //Global._isWorldMap = true;
            Global.UFOShowEntry = true;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.Label(new Rect(1053 * Global.guiRatio, 741 * Global.guiRatio, 256 * Global.guiRatio, 60 * Global.guiRatio), Strings.string008, this.gs_font.font_arial_72_c_white);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_DialogueScreen() //Диалог с NPC
    {
        if (Global._dlgSpeakerName == "hero:")
        {
            Global._dlgSpeakerName = Global._paramHeroName;
        }
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        if (Global._dlgType == "normal")
        {
            GUI.Box(new Rect((Screen.width / 2) - (450 * Global.guiRatio), Screen.height - (1061 * Global.guiRatio), 995 * Global.guiRatio, 1061 * Global.guiRatio), "", Global._dlgSpeakerImage);
            GUI.BeginGroup(new Rect(0, Screen.height - (272 * Global.guiRatio), 1920 * Global.guiRatio, 272 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 272 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
            Global.GUILabelStroke(new Rect(22 * Global.guiRatio, 12 * Global.guiRatio, 533 * Global.guiRatio, 60 * Global.guiRatio), Global._dlgSpeakerName, this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_blue);
            GUI.Label(new Rect(220 * Global.guiRatio, 96 * Global.guiRatio, 1488 * Global.guiRatio, 177 * Global.guiRatio), Global._dlgText, this.gs_font.font_calibri_54_cb_white);
            if ((Global._dlgCurrent == 0) && (Global._dlgLength > 1))
            {
                if (GUI.Button(new Rect(1740 * Global.guiRatio, 109 * Global.guiRatio, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
                {
                    Global._dlgCurrent++;
                    Global._dlgID = Global._dlgCurrent;
                }
            }
            if ((Global._dlgCurrent < (Global._dlgLength - 1)) && (Global._dlgCurrent > 0))
            {
                if (GUI.Button(new Rect(1740 * Global.guiRatio, 109 * Global.guiRatio, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
                {
                    Global._dlgCurrent++;
                    Global._dlgID = Global._dlgCurrent;
                }
                if (GUI.Button(new Rect(52 * Global.guiRatio, 109 * Global.guiRatio, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_left))
                {
                    Global._dlgCurrent--;
                    Global._dlgID = Global._dlgCurrent;
                }
            }
            if ((Global._dlgCurrent >= (Global._dlgLength - 1)) || (Global._dlgLength <= 1))
            {
                if (GUI.Button(new Rect(1740 * Global.guiRatio, 109 * Global.guiRatio, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_close))
                {
                    Global._isClickDlg = true;
                    Global._dlgID = 0;
                    Global._dlgCurrent = 0;
                    //Global._system_isHeroDead = false;
                    //Global.dlgCurrent.Clear();
                    Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
                    Global._isPopUpOpen = false;
                    //Global._isWorldMap = true;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    Global._gui_SetInterface("WorldMap");
                    Global._dlgRun = false;
                }
            }
            if ((Global._dlgCurrent >= (Global._dlgLength - 1)) && (Global._dlgLength > 1))
            {
                if (GUI.Button(new Rect(1740 * Global.guiRatio, 109 * Global.guiRatio, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_close))
                {
                    Global._isClickDlg = true;
                    Global._dlgID = 0;
                    Global._dlgCurrent = 0;
                    //Global._system_isHeroDead = false;
                    //Global.dlgCurrent.Clear();
                    Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
                    Global._isPopUpOpen = false;
                    //Global._isWorldMap = true;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    Global._gui_SetInterface("WorldMap");
                    Global._dlgRun = false;
                }
                if (GUI.Button(new Rect(52 * Global.guiRatio, 109 * Global.guiRatio, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_left))
                {
                    Global._dlgCurrent--;
                    Global._dlgID = Global._dlgCurrent;
                }
            }
            GUI.EndGroup();
        }
        else
        {
            if (Global._dlgType == "choice")
            {
                GUI.Box(new Rect((Screen.width / 2) - (450 * Global.guiRatio), Screen.height - (1061 * Global.guiRatio), 995 * Global.guiRatio, 1061 * Global.guiRatio), "", Global._dlgSpeakerImage);
                GUI.BeginGroup(new Rect(0, Screen.height - (382 * Global.guiRatio), 1920 * Global.guiRatio, 382 * Global.guiRatio));
                GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 272 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
                GUI.Box(new Rect(0, 272 * Global.guiRatio, 1920 * Global.guiRatio, 110 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_add);
                Global.GUILabelStroke(new Rect(22 * Global.guiRatio, 12 * Global.guiRatio, 533 * Global.guiRatio, 60 * Global.guiRatio), Global._dlgSpeakerName, this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_blue);
                GUI.Label(new Rect(220 * Global.guiRatio, 96 * Global.guiRatio, 1488 * Global.guiRatio, 177 * Global.guiRatio), Global._dlgText, this.gs_font.font_calibri_54_cb_white);
                if (GUI.Button(new Rect(611 * Global.guiRatio, 254 * Global.guiRatio, 345 * Global.guiRatio, 109 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
                {
                    Global._isClickDlg = true;
                    Global._dlgID = 0;
                    Global._dlgCurrent = 0;
                    Global._isPopUpOpen = true;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                    if (Global._dlgSpeaker == "npc_girl")
                    {
                        this.generateMushrooms();
                        Global._gui_SetInterface("MushroomGameScreen");
                    }
                    if (Global._dlgSpeaker == "npc_ded")
                    {
                        Global._gui_SetInterface("FishingGameScreen");
                    }
                    Global._dlgRun = false;
                }
                GUI.Label(new Rect(611 * Global.guiRatio, 280 * Global.guiRatio, 345 * Global.guiRatio, 60 * Global.guiRatio), Strings.string007, this.gs_font.font_calibri_54_cb_white);
                if (GUI.Button(new Rect(961 * Global.guiRatio, 254 * Global.guiRatio, 343 * Global.guiRatio, 109 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_no))
                {
                    Global._isClickDlg = true;
                    Global._dlgID = 0;
                    Global._dlgCurrent = 0;
                    //Global._system_isHeroDead = false;
                    //Global.dlgCurrent.Clear();
                    Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
                    Global._isPopUpOpen = false;
                    //Global._isWorldMap = true;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    Global._gui_SetInterface("WorldMap");
                    Global._dlgRun = false;
                }
                GUI.Label(new Rect(961 * Global.guiRatio, 280 * Global.guiRatio, 343 * Global.guiRatio, 60 * Global.guiRatio), Strings.string008, this.gs_font.font_calibri_54_cb_white);
                GUI.EndGroup();
            }
        }
        GUI.EndGroup();
    }

    public virtual void gui_BattleScreen()
    {
    }

    /*GUI.BeginGroup(Rect(0, 0, Screen.width, Screen.height));

        GUI.Box(Rect(0, 0, 1920*Global.guiRatio, 1080*Global.guiRatio), "", gs_common.gui_fishing_frame);

        if (GUI.Button(Rect(Screen.width - 168*Global.guiRatio, Screen.height/2 - 504*Global.guiRatio, 129*Global.guiRatio, 129*Global.guiRatio), "", gs_common.gui_dialogue_button_close))
        {
            Global._gui_CloseAllInterfaces();
            Global._walkerCameraPhoto.GetComponent(s_BlurEffect).enabled = false;
            Global._hero_dolly.GetComponent.<UnityEngine.AI.NavMeshAgent>().enabled = true;
            Global._isPopUpOpen = false;
            Global._isWorldMap = true;
            Global._isUFOScreen = false;
            Global._isRecipeSelect = false;
            Global._gui_SetInterface("WorldMap");
        }

        GUI.BeginGroup(Rect(Screen.width/2 - 733*Global.guiRatio, Screen.height/2 - 468*Global.guiRatio, 765*Global.guiRatio, 90*Global.guiRatio));
            if (Global._isTabCraftSelect)
            {
                GUI.Box(Rect(0, 0, 376*Global.guiRatio, 90*Global.guiRatio), "", gs_common.gui_craftscreen_tab_active);

                if (GUI.Button(Rect(389*Global.guiRatio, 0, 376*Global.guiRatio, 90*Global.guiRatio), "", gs_common.gui_craftscreen_tab_inactive))
                {
                    Global._isTabCraftSelect = false;
                    Global._isTabMakeoutSelect = true;
                }
            }
            else if (Global._isTabMakeoutSelect)
            {
                if (GUI.Button(Rect(0, 0, 376*Global.guiRatio, 90*Global.guiRatio), "", gs_common.gui_craftscreen_tab_inactive))
                {
                    Global._isTabCraftSelect = true;
                    Global._isTabMakeoutSelect = false;
                }

                GUI.Box(Rect(389*Global.guiRatio, 0, 376*Global.guiRatio, 90*Global.guiRatio), "", gs_common.gui_craftscreen_tab_active);
            }
            GUI.Label(Rect(0, 25*Global.guiRatio, 376*Global.guiRatio, 90*Global.guiRatio), Strings.string031, gs_font.font_calibri_54_cb_white);
            GUI.Label(Rect(389*Global.guiRatio, 25*Global.guiRatio, 376*Global.guiRatio, 90*Global.guiRatio), Strings.string040, gs_font.font_calibri_54_cb_white);
        GUI.EndGroup();

        if (Global._isTabCraftSelect)
        {
            GUI.BeginGroup(Rect(Screen.width/2 - 733*Global.guiRatio, Screen.height/2 - 356*Global.guiRatio, 733*Global.guiRatio, 690*Global.guiRatio));
                GUI.Box(Rect(0, 0, 733*Global.guiRatio, 690*Global.guiRatio), "", gs_common.gui_craftscreen_panel_background);

                for (var y:int = 0; y < Global._recipeTest.length; y++)
                {
                    GUI.BeginGroup(Rect(10*Global.guiRatio, (y * (160*Global.guiRatio + 10*Global.guiRatio)) + 10*Global.guiRatio, 703*Global.guiRatio, 160*Global.guiRatio));
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", (Global._recipeTest[y])["icon"]);
                        GUI.Label(Rect(180*Global.guiRatio, 55*Global.guiRatio, 543*Global.guiRatio, 60*Global.guiRatio), ((Global._recipeTest[y])["name"]), gs_font.font_calibri_54_lb_white);
                        if (GUI.Button(Rect(0, 0, 703*Global.guiRatio, 160*Global.guiRatio), "", gs_common.emptystyle))
                        {
                            Global._isRecipeSelect = true;
                            Global._currentRecipeName = (Global._recipeTest[y])["name"];
                            Global._currentRecipeDroptype = (Global._recipeTest[y])["droptype"];
                            Global._currentRecipeType = (Global._recipeTest[y])["type"];
                            Global._currentRecipeIcon = (Global._recipeTest[y])["icon"];
                            Global._currentRecipeUniqueID = "tool_" + (Random.Range(1111, 9999)).ToString() + "_" + (Random.Range(1411, 9599)).ToString() + (Random.Range(1171, 9991)).ToString();
                            Global._currentRecipeDescription = (Global._recipeTest[y])["description"];

                            Global._currentRecipeIndex = y;

                            Global._currentRecipeCostType1 = (Global._recipeTest[y])["costtype1"];
                            Global._currentRecipeCostAmount1 = (Global._recipeTest[y])["costamount1"];
                            Global._currentRecipeCostType2 = (Global._recipeTest[y])["costtype2"];
                            Global._currentRecipeCostAmount2 = (Global._recipeTest[y])["costamount2"];
                            Global._currentRecipeCostType3 = (Global._recipeTest[y])["costtype3"];
                            Global._currentRecipeCostAmount3 = (Global._recipeTest[y])["costamount3"];
                        }
                    GUI.EndGroup();
                }
                if (Global._isRecipeSelect)
                {
                    GUI.Box(Rect(10*Global.guiRatio, (Global._currentRecipeIndex * (160*Global.guiRatio + 10*Global.guiRatio)) + 10*Global.guiRatio, 703*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_selection);
                }

            GUI.EndGroup();

            GUI.BeginGroup(Rect(Screen.width/2 + 10*Global.guiRatio, Screen.height/2 - 356*Global.guiRatio, 733*Global.guiRatio, 690*Global.guiRatio));
                GUI.Box(Rect(0, 0, 733*Global.guiRatio, 690*Global.guiRatio), "", gs_common.gui_craftscreen_panel_background);

                if (Global._isRecipeSelect)
                {
                    GUI.Box(Rect(10*Global.guiRatio, 10*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                    GUI.Box(Rect(10*Global.guiRatio, 10*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio), "", Global._currentRecipeIcon);
                    GUI.Label(Rect(180*Global.guiRatio, 32*Global.guiRatio, 543*Global.guiRatio, 60*Global.guiRatio), Global._currentRecipeName, gs_font.font_calibri_54_lb_white);
                    GUI.Label(Rect(180*Global.guiRatio, 85*Global.guiRatio, 543*Global.guiRatio, 60*Global.guiRatio), Global._currentRecipeDescription, gs_font.font_arial_36_l_white);

                    GUI.Label(Rect(0, 207*Global.guiRatio, 733*Global.guiRatio, 60*Global.guiRatio), Strings.string030, gs_font.font_calibri_54_cb_white);

                    GUI.BeginGroup(Rect(112*Global.guiRatio, 350*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio));
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                        if (Global._currentRecipeCostType1 != "")
                        {
                            GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", "icons_" + Global._currentRecipeCostType1);
                            if (int.Parse(Global._currentRecipeCostAmount1) <= int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType1])["amount"]))
                            {
                                GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentRecipeCostAmount1, gs_font.font_arial_36_cb_green);
                            }
                            else
                            {
                                GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentRecipeCostAmount1, gs_font.font_arial_36_cb_red);
                            }
                        }
                    GUI.EndGroup();

                    GUI.BeginGroup(Rect(282*Global.guiRatio, 350*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio));
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                        if (Global._currentRecipeCostType2 != "")
                        {
                            GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", "icons_" + Global._currentRecipeCostType2);
                            if (int.Parse(Global._currentRecipeCostAmount2) <= int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType2])["amount"]))
                            {
                                GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentRecipeCostAmount2, gs_font.font_arial_36_cb_green);
                            }
                            else
                            {
                                GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentRecipeCostAmount2, gs_font.font_arial_36_cb_red);
                            }
                        }
                    GUI.EndGroup();

                    GUI.BeginGroup(Rect(452*Global.guiRatio, 350*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio));
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                        if (Global._currentRecipeCostType3 != "")
                        {
                            GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", "icons_" + Global._currentRecipeCostType3);
                            if (int.Parse(Global._currentRecipeCostAmount3) <= int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType3])["amount"]))
                            {
                                GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentRecipeCostAmount3, gs_font.font_arial_36_cb_green);
                            }
                            else
                            {
                                GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentRecipeCostAmount3, gs_font.font_arial_36_cb_red);
                            }
                        }
                    GUI.EndGroup();

                    GUI.BeginGroup(Rect(156*Global.guiRatio, 546*Global.guiRatio, 411*Global.guiRatio, 109*Global.guiRatio));
                        if (GUI.Button(Rect(0, 0, 411*Global.guiRatio, 109*Global.guiRatio), "", gs_common.gui_inventory_button_use))
                        {
                            if ((Global.globalInventoryThingsArr.length < 25)&&(Global._currentRecipeDroptype == "thing"))
                            {
                                if ((Global._currentRecipeCostType1 != "")&&((int.Parse(Global._currentRecipeCostAmount1) <= int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType1])["amount"])))&&
                                    (Global._currentRecipeCostType2 != "")&&((int.Parse(Global._currentRecipeCostAmount2) <= int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType2])["amount"])))&&
                                    (Global._currentRecipeCostType3 != "")&&((int.Parse(Global._currentRecipeCostAmount3) <= int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType3])["amount"])))&&
                                    (Global._currentRecipeDroptype == "thing"))
                                {
                                    (Global._userResourcesCraft[Global._currentRecipeCostType1])["amount"] = (int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType1])["amount"]) - int.Parse(Global._currentRecipeCostAmount1)).ToString();
                                    (Global._userResourcesCraft[Global._currentRecipeCostType2])["amount"] = (int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType2])["amount"]) - int.Parse(Global._currentRecipeCostAmount2)).ToString();
                                    (Global._userResourcesCraft[Global._currentRecipeCostType3])["amount"] = (int.Parse((Global._userResourcesCraft[Global._currentRecipeCostType3])["amount"]) - int.Parse(Global._currentRecipeCostAmount3)).ToString();

                                    Global.globalBus.SendMessage("c_GameController_Base_command_CreateItem");
                                    Global._gui_AddInterface("ObjCreatedPopUp");
                                }
                            }
                        }
                        GUI.Label(Rect(0, 28*Global.guiRatio, 411*Global.guiRatio, 60*Global.guiRatio), Strings.string031, gs_font.font_calibri_54_cb_white);
                    GUI.EndGroup();
                }

            GUI.EndGroup();
        }
        else if (Global._isTabMakeoutSelect)
        {
            GUI.BeginGroup(Rect(Screen.width/2 - 733*Global.guiRatio, Screen.height/2 - 356*Global.guiRatio, 733*Global.guiRatio, 690*Global.guiRatio));
                GUI.Box(Rect(0, 0, 733*Global.guiRatio, 690*Global.guiRatio), "", gs_common.gui_craftscreen_panel_background);

                for (var j:int = 0; j < Global._Loot.length; j++)
                {
                    GUI.BeginGroup(Rect(10*Global.guiRatio, (j * (160*Global.guiRatio + 10*Global.guiRatio)) + 10*Global.guiRatio, 703*Global.guiRatio, 160*Global.guiRatio));
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", (Global._Loot[j])["icon"]);
                        GUI.Label(Rect(180*Global.guiRatio, 55*Global.guiRatio, 543*Global.guiRatio, 60*Global.guiRatio), ((Global._Loot[j])["name"]), gs_font.font_calibri_54_lb_white);
                        if (GUI.Button(Rect(0, 0, 703*Global.guiRatio, 160*Global.guiRatio), "", gs_common.emptystyle))
                        {
                            Global._isLootSelect = true;

                            Global._currentLootLootName = (Global._Loot[j])["loot_name"];
                            Global._currentLootName = (Global._Loot[j])["name"];
                            Global._currentLootDroptype = (Global._Loot[j])["droptype"];
                            Global._currentLootType = (Global._Loot[j])["type"];
                            Global._currentLootIcon = (Global._Loot[j])["icon"];
                            Global._currentLootUniqueID = "loot_" + (Random.Range(1111, 9999)).ToString() + "_" + (Random.Range(1411, 9599)).ToString() + (Random.Range(1171, 9991)).ToString();
                            Global._currentLootDescription = (Global._Loot[j])["description"];

                            Global._currentLootIndex = j;

                            Global._currentLootType1 = (Global._Loot[j])["loottype1"];
                            Global._currentLootAmount1 = (Global._Loot[j])["lootamount1"];
                            Global._currentLootType2 = (Global._Loot[j])["loottype2"];
                            Global._currentLootAmount2 = (Global._Loot[j])["lootamount2"];
                            Global._currentLootType3 = (Global._Loot[j])["loottype3"];
                            Global._currentLootAmount3 = (Global._Loot[j])["lootamount3"];
                        }
                    GUI.EndGroup();
                }
                if (Global._isLootSelect)
                {
                    GUI.Box(Rect(10*Global.guiRatio, (Global._currentLootIndex * (160*Global.guiRatio + 10*Global.guiRatio)) + 10*Global.guiRatio, 703*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_selection);
                }

            GUI.EndGroup();

            GUI.BeginGroup(Rect(Screen.width/2 + 10*Global.guiRatio, Screen.height/2 - 356*Global.guiRatio, 733*Global.guiRatio, 690*Global.guiRatio));
                GUI.Box(Rect(0, 0, 733*Global.guiRatio, 690*Global.guiRatio), "", gs_common.gui_craftscreen_panel_background);

                if (Global._isLootSelect)
                {
                    GUI.Box(Rect(10*Global.guiRatio, 10*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                    GUI.Box(Rect(10*Global.guiRatio, 10*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio), "", Global._currentLootIcon);
                    GUI.Label(Rect(180*Global.guiRatio, 32*Global.guiRatio, 543*Global.guiRatio, 60*Global.guiRatio), Global._currentLootName, gs_font.font_calibri_54_lb_white);
                    GUI.Label(Rect(180*Global.guiRatio, 85*Global.guiRatio, 543*Global.guiRatio, 60*Global.guiRatio), Global._currentLootDescription, gs_font.font_arial_36_l_white);

                    GUI.Label(Rect(0, 207*Global.guiRatio, 733*Global.guiRatio, 60*Global.guiRatio), Strings.string039, gs_font.font_calibri_54_cb_white);

                    GUI.BeginGroup(Rect(112*Global.guiRatio, 350*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio));
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                        if (Global._currentLootType1 != "")
                        {
                            GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", "icons_" + Global._currentLootType1);
                            GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentLootAmount1, gs_font.font_arial_36_cb_green);
                        }
                    GUI.EndGroup();

                    GUI.BeginGroup(Rect(282*Global.guiRatio, 350*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio));
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                        if (Global._currentLootType2 != "")
                        {
                            GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", "icons_" + Global._currentLootType2);
                            GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentLootAmount2, gs_font.font_arial_36_cb_green);
                        }
                    GUI.EndGroup();

                    GUI.BeginGroup(Rect(452*Global.guiRatio, 350*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio));
                        GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
                        if (Global._currentLootType3 != "")
                        {
                            GUI.Box(Rect(0, 0, 160*Global.guiRatio, 160*Global.guiRatio), "", "icons_" + Global._currentLootType3);
                            GUI.Label(Rect(132*Global.guiRatio, 5*Global.guiRatio, 28*Global.guiRatio, 27*Global.guiRatio), Global._currentLootAmount3, gs_font.font_arial_36_cb_green);
                        }
                    GUI.EndGroup();

                    GUI.BeginGroup(Rect(156*Global.guiRatio, 546*Global.guiRatio, 411*Global.guiRatio, 109*Global.guiRatio));
                        if (GUI.Button(Rect(0, 0, 411*Global.guiRatio, 109*Global.guiRatio), "", gs_common.gui_inventory_button_use))
                        {
                            if ((Global._currentLootType1 != "")&&(Global._currentLootType2 != "")&&(Global._currentLootType3 != ""))
                            {
                                (Global._userResourcesCraft[Global._currentLootType1])["amount"] = (int.Parse((Global._userResourcesCraft[Global._currentLootType1])["amount"]) + int.Parse(Global._currentLootAmount1)).ToString();
                                (Global._userResourcesCraft[Global._currentLootType2])["amount"] = (int.Parse((Global._userResourcesCraft[Global._currentLootType2])["amount"]) + int.Parse(Global._currentLootAmount2)).ToString();
                                (Global._userResourcesCraft[Global._currentLootType3])["amount"] = (int.Parse((Global._userResourcesCraft[Global._currentLootType3])["amount"]) + int.Parse(Global._currentLootAmount3)).ToString();

                                Global._Loot.RemoveAt(Global._currentLootIndex);

                                if (Global._Loot.length > 0)
                                {
                                    if (Global._currentLootIndex > 0)
                                    {
                                        if ((Global._Loot[Global._currentLootIndex-1])["loot_name"] != "")
                                        {
                                            Global._currentLootLootName = (Global._Loot[Global._currentLootIndex-1])["loot_name"];
                                            Global._currentLootName = (Global._Loot[Global._currentLootIndex-1])["name"];
                                            Global._currentLootDroptype = (Global._Loot[Global._currentLootIndex-1])["droptype"];
                                            Global._currentLootType = (Global._Loot[Global._currentLootIndex-1])["type"];
                                            Global._currentLootIcon = (Global._Loot[Global._currentLootIndex-1])["icon"];
                                            Global._currentLootUniqueID = "loot_" + (Random.Range(1111, 9999)).ToString() + "_" + (Random.Range(1411, 9599)).ToString() + (Random.Range(1171, 9991)).ToString();
                                            Global._currentLootDescription = (Global._Loot[Global._currentLootIndex-1])["description"];

                                            Global._currentLootType1 = (Global._Loot[Global._currentLootIndex-1])["loottype1"];
                                            Global._currentLootAmount1 = (Global._Loot[Global._currentLootIndex-1])["lootamount1"];
                                            Global._currentLootType2 = (Global._Loot[Global._currentLootIndex-1])["loottype2"];
                                            Global._currentLootAmount2 = (Global._Loot[Global._currentLootIndex-1])["lootamount2"];
                                            Global._currentLootType3 = (Global._Loot[Global._currentLootIndex-1])["loottype3"];
                                            Global._currentLootAmount3 = (Global._Loot[Global._currentLootIndex-1])["lootamount3"];

                                            Global._currentLootIndex = Global._currentLootIndex-1;
                                        }
                                    }
                                    else
                                    {
                                        if ((Global._Loot[0])["loot_name"] != "")
                                        {
                                            Global._currentLootLootName = (Global._Loot[0])["loot_name"];
                                            Global._currentLootName = (Global._Loot[0])["name"];
                                            Global._currentLootDroptype = (Global._Loot[0])["droptype"];
                                            Global._currentLootType = (Global._Loot[0])["type"];
                                            Global._currentLootIcon = (Global._Loot[0])["icon"];
                                            Global._currentLootUniqueID = "loot_" + (Random.Range(1111, 9999)).ToString() + "_" + (Random.Range(1411, 9599)).ToString() + (Random.Range(1171, 9991)).ToString();
                                            Global._currentLootDescription = (Global._Loot[0])["description"];

                                            Global._currentLootType1 = (Global._Loot[0])["loottype1"];
                                            Global._currentLootAmount1 = (Global._Loot[0])["lootamount1"];
                                            Global._currentLootType2 = (Global._Loot[0])["loottype2"];
                                            Global._currentLootAmount2 = (Global._Loot[0])["lootamount2"];
                                            Global._currentLootType3 = (Global._Loot[0])["loottype3"];
                                            Global._currentLootAmount3 = (Global._Loot[0])["lootamount3"];

                                            Global._currentLootIndex = 0;
                                        }
                                    }
                                }
                                else
                                {
                                    Global._isLootSelect = false;
                                }
                            }
                        }
                        GUI.Label(Rect(0, 28*Global.guiRatio, 411*Global.guiRatio, 60*Global.guiRatio), Strings.string040, gs_font.font_calibri_54_cb_white);
                    GUI.EndGroup();
                }

            GUI.EndGroup();
        }

    GUI.EndGroup();*/    public virtual void gui_CraftScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 288 * Global.guiRatio, 89 * Global.guiRatio));
        if (Global._isTabCraftSelect)
        {
            GUI.Box(new Rect(0, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_craft_active);
            if (GUI.Button(new Rect(144 * Global.guiRatio, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_makeout_inactive))
            {
                Global._isTabCraftSelect = false;
                Global._isTabMakeoutSelect = true;
                if (Global.InventoryItemsArr.Count > 0)
                {
                    Global.InventoryItemsArr.Clear();
                }
                int j = 0;
                while (j < Global.globalInventoryThingsArr.Count)
                {
                    if (((((Global.globalInventoryThingsArr[j]["type"] as string == "boots") 
                        || (Global.globalInventoryThingsArr[j]["type"] as string == "gloves"))
                        || (Global.globalInventoryThingsArr[j]["type"] as string == "armor")) 
                        || (Global.globalInventoryThingsArr[j]["type"] as string == "weapon")) 
                        || (Global.globalInventoryThingsArr[j]["type"] as string == "backpack"))
                    {
                        Global.InventoryItemsArr.Add(new Hashtable(new Hashtable() { {"droptype", Global.globalInventoryThingsArr[j]["droptype"] },  {"type", Global.globalInventoryThingsArr[j]["type"] },  {"thingname", Global.globalInventoryThingsArr[j]["thingname"] },  {"icon", Global.globalInventoryThingsArr[j]["icon"] },  {"name", Global.globalInventoryThingsArr[j]["name"] },  {"costtype1", Global.globalInventoryThingsArr[j]["costtype1"] },  {"costamount1", Global.globalInventoryThingsArr[j]["costamount1"] },  {"costicon1", Global.globalInventoryThingsArr[j]["costicon1"] },  {"costtype2", Global.globalInventoryThingsArr[j]["costtype2"] },  {"costamount2", Global.globalInventoryThingsArr[j]["costamount2"] },  {"costicon2", Global.globalInventoryThingsArr[j]["costicon2"] },  {"costtype3", Global.globalInventoryThingsArr[j]["costtype3"] },  {"costamount3", Global.globalInventoryThingsArr[j]["costamount3"] },  {"costicon3", Global.globalInventoryThingsArr[j]["costicon3"] },  {"costtype4", Global.globalInventoryThingsArr[j]["costtype4"] },  {"costamount4", Global.globalInventoryThingsArr[j]["costamount4"] },  {"costicon4", Global.globalInventoryThingsArr[j]["costicon4"] }, }));
                    }
                    j++;
                }
                Global._isRecipeSelect = false;
                Global._currentRecipeType = "";
                Global._currentRecipeName = "";
                Global._currentRecipeThingName = "";
                Global._currentRecipeDescription = "";
                Global._currentRecipeIcon = "";
                Global._currentRecipeAddSlots = "";
                Global._currentRecipeAddAbility = "";
                Global._currentRecipeAddDamage = "";
                Global._currentRecipeUniqueID = "";
                Global._currentRecipeCostType1 = "";
                Global._currentRecipeCostType2 = "";
                Global._currentRecipeCostType3 = "";
                Global._currentRecipeCostType4 = "";
                Global._currentRecipeCostAmount1 = "";
                Global._currentRecipeCostAmount2 = "";
                Global._currentRecipeCostAmount3 = "";
                Global._currentRecipeCostAmount4 = "";
            }
        }
        else
        {
            if (Global._isTabMakeoutSelect)
            {
                if (GUI.Button(new Rect(0, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_craft_inactive))
                {
                    Global._isTabCraftSelect = true;
                    Global._isTabMakeoutSelect = false;
                    Global._isRecipeSelect = false;
                    Global._currentRecipeType = "";
                    Global._currentRecipeName = "";
                    Global._currentRecipeThingName = "";
                    Global._currentRecipeDescription = "";
                    Global._currentRecipeIcon = "";
                    Global._currentRecipeAddSlots = "";
                    Global._currentRecipeAddAbility = "";
                    Global._currentRecipeAddDamage = "";
                    Global._currentRecipeUniqueID = "";
                    Global._currentRecipeCostType1 = "";
                    Global._currentRecipeCostType2 = "";
                    Global._currentRecipeCostType3 = "";
                    Global._currentRecipeCostType4 = "";
                    Global._currentRecipeCostAmount1 = "";
                    Global._currentRecipeCostAmount2 = "";
                    Global._currentRecipeCostAmount3 = "";
                    Global._currentRecipeCostAmount4 = "";
                }
                GUI.Box(new Rect(144 * Global.guiRatio, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_makeout_active);
            }
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseAllInterfaces();
            Global._isRecipeFoodSelect = false;
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        if (Global._isTabCraftSelect)
        {
            GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 860 * Global.guiRatio, 670 * Global.guiRatio));
            //scrollPositionKitchen = GUI.BeginScrollView (Rect (0, 0, 860*Global.guiRatio, 670*Global.guiRatio), scrollPositionKitchen, Rect (0, 0, 810*Global.guiRatio, Global._recipeItems.Count * (170*Global.guiRatio)), false, true);
            this.scrollPositionKitchen = GUI.BeginScrollView(new Rect(0, 0, 900 * Global.guiRatio, 670 * Global.guiRatio), this.scrollPositionKitchen, new Rect(0, 0, 840 * Global.guiRatio, Global._recipeItems.Count * (170 * Global.guiRatio)), false, true, this.gs_common.emptystyle, this.gs_common.emptystyle);
            int i = 0;
            while (i < Global._recipeItems.Count)
            {
                GUI.BeginGroup(new Rect(0, (i * 170) * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
                GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
                GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[i]["icon"]);
                GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[i]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
                if (Global._recipeItems[i]["available"] as string == "true")
                {
                    if (GUI.Button(new Rect(170 * Global.guiRatio, 0, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                    {
                        Global._isRecipeSelect = true;
                        Global._currentRecipeType = (string) Global._recipeItems[i]["type"];
                        if (Global._currentRecipeType == "backpack")
                        {
                            Global._currentRecipeAddSlots = (string) Global._recipeItems[i]["addslots"];
                        }
                        else
                        {
                            if (Global._currentRecipeType == "feature")
                            {
                                Global._currentRecipeAddAbility = (string) Global._recipeItems[i]["addability"];
                            }
                            else
                            {
                                if (Global._currentRecipeType == "weapon")
                                {
                                    Global._currentRecipeAddDamage = (string) Global._recipeItems[i]["adddamage"];
                                }
                            }
                        }
                        Global._currentRecipeThingName = (string) Global._recipeItems[i]["thingname"];
                        Global._currentRecipeName = (string) Global._recipeItems[i]["name"];
                        Global._currentRecipeDescription = (string) Global._recipeItems[i]["description"];
                        Global._currentRecipeIcon = (GUIStyle) Global._recipeItems[i]["icon"];
                        Global._currentRecipeCostType1 = (string) Global._recipeItems[i]["costtype1"];
                        Global._currentRecipeCostType2 = (string) Global._recipeItems[i]["costtype2"];
                        Global._currentRecipeCostType3 = (string) Global._recipeItems[i]["costtype3"];
                        Global._currentRecipeCostType4 = (string) Global._recipeItems[i]["costtype4"];
                        Global._currentRecipeCostAmount1 = (string) Global._recipeItems[i]["costamount1"];
                        Global._currentRecipeCostAmount2 = (string) Global._recipeItems[i]["costamount2"];
                        Global._currentRecipeCostAmount3 = (string) Global._recipeItems[i]["costamount3"];
                        Global._currentRecipeCostAmount4 = (string) Global._recipeItems[i]["costamount4"];
                        if (Global._currentRecipeCostType1 != "none")
                        {
                            Global._currentRecipeCostName1 = (string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["name"];
                        }
                        if (Global._currentRecipeCostType2 != "none")
                        {
                            Global._currentRecipeCostName2 = (string) (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["name"];
                        }
                        if (Global._currentRecipeCostType3 != "none")
                        {
                            Global._currentRecipeCostName3 = (string) (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["name"];
                        }
                        if (Global._currentRecipeCostType4 != "none")
                        {
                            Global._currentRecipeCostName4 = (string) (Global._userResourcesCraft[Global._currentRecipeCostType4] as Hashtable)["name"];
                        }
                        Global._currentRecipeCostIcon1 = (GUIStyle) Global._recipeItems[i]["costicon1"];
                        Global._currentRecipeCostIcon2 = (GUIStyle) Global._recipeItems[i]["costicon2"];
                        Global._currentRecipeCostIcon3 = (GUIStyle) Global._recipeItems[i]["costicon3"];
                        Global._currentRecipeCostIcon4 = (GUIStyle) Global._recipeItems[i]["costicon4"];
                        Global.currentRecipeY = (i * 170) * Global.guiRatio;
                    }
                }
                else
                {
                    if (Global._recipeItems[i]["available"] as string == "false")
                    {
                        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
                    }
                }
                GUI.EndGroup();
                i++;
            }
            if (Global._isRecipeSelect)
            {
                GUI.Label(new Rect(170 * Global.guiRatio, Global.currentRecipeY + (70 * Global.guiRatio), 670 * Global.guiRatio, 50 * Global.guiRatio), Global._currentRecipeName, this.gs_font.font_b52_48_c_white);
                GUI.Box(new Rect(0, Global.currentRecipeY, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
            }
            GUI.EndScrollView();
            GUI.EndGroup();
            if (Global._isRecipeSelect)
            {
                GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Global._currentRecipeName, this.gs_font.font_b52_60_cb_white);
            }
            GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
            GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
            if (!Global._isRecipeSelect)
            {
                GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
            }
            else
            {
                GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", Global._currentRecipeIcon);
                GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 60 * Global.guiRatio), Global._currentRecipeDescription, this.gs_font.font_century_24_lb_blue);
                GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
                if (Global._currentRecipeCostType1 != "none")
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeCostIcon1);
                    if (int.Parse(Global._currentRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"]))
                    {
                        GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount1, this.gs_font.font_century_30_cb_green);
                    }
                    else
                    {
                        GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount1, this.gs_font.font_century_30_cb_red);
                    }
                    if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                    {
                        Global.currentLootIcon = Global._currentRecipeCostIcon1;
                        Global.currentLootName = Global._currentRecipeCostName1;
                        Global._isPopUpOpen = true;
                        Global._gui_AddInterface("LootInfoPopUp");
                    }
                }
                if (Global._currentRecipeCostType2 != "none")
                {
                    GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeCostIcon2);
                    if (int.Parse(Global._currentRecipeCostAmount2) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["amount"]))
                    {
                        GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount2, this.gs_font.font_century_30_cb_green);
                    }
                    else
                    {
                        GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount2, this.gs_font.font_century_30_cb_red);
                    }
                    if (GUI.Button(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                    {
                        Global.currentLootIcon = Global._currentRecipeCostIcon2;
                        Global.currentLootName = Global._currentRecipeCostName2;
                        Global._isPopUpOpen = true;
                        Global._gui_AddInterface("LootInfoPopUp");
                    }
                }
                if (Global._currentRecipeCostType3 != "none")
                {
                    GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeCostIcon3);
                    if (int.Parse(Global._currentRecipeCostAmount3) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["amount"]))
                    {
                        GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount3, this.gs_font.font_century_30_cb_green);
                    }
                    else
                    {
                        GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount3, this.gs_font.font_century_30_cb_red);
                    }
                    if (GUI.Button(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                    {
                        Global.currentLootIcon = Global._currentRecipeCostIcon3;
                        Global.currentLootName = Global._currentRecipeCostName3;
                        Global._isPopUpOpen = true;
                        Global._gui_AddInterface("LootInfoPopUp");
                    }
                }
                if (Global._currentRecipeCostType4 != "none")
                {
                    GUI.Box(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeCostIcon4);
                    if (int.Parse(Global._currentRecipeCostAmount4) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType4] as Hashtable)["amount"]))
                    {
                        GUI.Label(new Rect(644 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount4, this.gs_font.font_century_30_cb_green);
                    }
                    else
                    {
                        GUI.Label(new Rect(644 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount4, this.gs_font.font_century_30_cb_red);
                    }
                    if (GUI.Button(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                    {
                        Global.currentLootIcon = Global._currentRecipeCostIcon4;
                        Global.currentLootName = Global._currentRecipeCostName4;
                        Global._isPopUpOpen = true;
                        Global._gui_AddInterface("LootInfoPopUp");
                    }
                }
                GUI.EndGroup();
                if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                {
                    if (((Global._isR3Backpack || Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 24)) || ((!Global._isR3Backpack || !Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 12)))
                    {
                        if ((((((((Global._currentRecipeCostType1 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"]))) 
                            && ((Global._currentRecipeCostType2 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount2) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["amount"])))) 
                            && ((Global._currentRecipeCostType3 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount3) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["amount"])))) 
                            && ((Global._currentRecipeCostType4 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount4) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType4] as Hashtable)["amount"])))) 
                            || (((((Global._currentRecipeCostType1 != "none")
                            && (int.Parse(Global._currentRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"]))) 
                            && ((Global._currentRecipeCostType2 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount2) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["amount"])))) 
                            && ((Global._currentRecipeCostType3 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount3) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["amount"])))) 
                            && (Global._currentRecipeCostType4 == "none"))) || (((((Global._currentRecipeCostType1 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"]))) 
                            && ((Global._currentRecipeCostType2 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount2) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["amount"])))) 
                            && (Global._currentRecipeCostType3 == "none")) 
                            && (Global._currentRecipeCostType4 == "none"))) || (((((Global._currentRecipeCostType1 != "none") 
                            && (int.Parse(Global._currentRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"])))
                            && (Global._currentRecipeCostType2 == "none")) 
                            && (Global._currentRecipeCostType3 == "none")) && (Global._currentRecipeCostType4 == "none")))
                        {
                            if (Global._currentRecipeCostType1 != "none")
                            {
                                (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"]) - int.Parse(Global._currentRecipeCostAmount1)).ToString();
                            }
                            if (Global._currentRecipeCostType2 != "none")
                            {
                                (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["amount"]) - int.Parse(Global._currentRecipeCostAmount2)).ToString();
                            }
                            if (Global._currentRecipeCostType3 != "none")
                            {
                                (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["amount"]) - int.Parse(Global._currentRecipeCostAmount3)).ToString();
                            }
                            if (Global._currentRecipeCostType4 != "none")
                            {
                                (Global._userResourcesCraft[Global._currentRecipeCostType4] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType4] as Hashtable)["amount"]) - int.Parse(Global._currentRecipeCostAmount4)).ToString();
                            }
                            Global._currentRecipeUniqueID = ((("item_" + Random.Range(1111, 9999).ToString()) + "_") + Random.Range(1411, 9599).ToString()) + Random.Range(1171, 9991).ToString();
                            Global.globalBus.gameObject.SendMessage("c_GameController_CheckConsumables");
                            Global._gui_AddInterface("ItemCreatedPopUp");
                        }
                        else
                        {
                            Global._gui_AddInterface("NoResourcesCraftPopUp");
                        }
                    }
                    else
                    {
                        Global._gui_AddInterface("InventoryFullPopUp");
                    }
                }
            }
            GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        }
        else
        {
            if (Global._isTabMakeoutSelect)
            {
                GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 860 * Global.guiRatio, 670 * Global.guiRatio));
                this.scrollPositionKitchen = GUI.BeginScrollView(new Rect(0, 0, 900 * Global.guiRatio, 670 * Global.guiRatio), this.scrollPositionKitchen, new Rect(0, 0, 840 * Global.guiRatio, Global.InventoryItemsArr.Count * (170 * Global.guiRatio)), false, true, this.gs_common.emptystyle, this.gs_common.emptystyle);
                int a = 0;
                while (a < Global.InventoryItemsArr.Count)
                {
                    GUI.BeginGroup(new Rect(0, (a * 170) * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
                    GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global.InventoryItemsArr[a]["icon"]);
                    GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global.InventoryItemsArr[a]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
                    if (GUI.Button(new Rect(170 * Global.guiRatio, 0, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                    {
                        Global._isRecipeSelect = true;
                        Global._currentRecipeType = (string) Global.InventoryItemsArr[a]["type"];
                        Global._currentRecipeThingName = (string) Global.InventoryItemsArr[a]["thingname"];
                        Global._currentRecipeName = (string) Global.InventoryItemsArr[a]["name"];
                        Global._currentRecipeIcon = (GUIStyle) Global.InventoryItemsArr[a]["icon"];
                        Global._currentRecipeCostType1 = (string) Global.InventoryItemsArr[a]["costtype1"];
                        Global._currentRecipeCostType2 = (string) Global.InventoryItemsArr[a]["costtype2"];
                        Global._currentRecipeCostType3 = (string) Global.InventoryItemsArr[a]["costtype3"];
                        Global._currentRecipeCostType4 = (string) Global.InventoryItemsArr[a]["costtype4"];
                        Global._currentRecipeCostAmount1 = (string) Global.InventoryItemsArr[a]["costamount1"];
                        Global._currentRecipeCostAmount2 = (string) Global.InventoryItemsArr[a]["costamount2"];
                        Global._currentRecipeCostAmount3 = (string) Global.InventoryItemsArr[a]["costamount3"];
                        Global._currentRecipeCostAmount4 = (string) Global.InventoryItemsArr[a]["costamount4"];
                        if (Global._currentRecipeCostType1 != "none")
                        {
                            Global._currentRecipeCostName1 = (string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["name"];
                        }
                        if (Global._currentRecipeCostType2 != "none")
                        {
                            Global._currentRecipeCostName2 = (string) (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["name"];
                        }
                        if (Global._currentRecipeCostType3 != "none")
                        {
                            Global._currentRecipeCostName3 = (string) (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["name"];
                        }
                        if (Global._currentRecipeCostType4 != "none")
                        {
                            Global._currentRecipeCostName4 = (string) (Global._userResourcesCraft[Global._currentRecipeCostType4] as Hashtable)["name"];
                        }
                        //CostIcon1
                        if (Global._currentRecipeCostType1 == "loot_metal")
                        {
                            Global._currentRecipeCostIcon1 = this.gs_common.gui_icons_loot_metal;
                        }
                        else
                        {
                            if (Global._currentRecipeCostType1 == "loot_plastic")
                            {
                                Global._currentRecipeCostIcon1 = this.gs_common.gui_icons_loot_plastic;
                            }
                            else
                            {
                                if (Global._currentRecipeCostType1 == "loot_cobweb")
                                {
                                    Global._currentRecipeCostIcon1 = this.gs_common.gui_icons_loot_cobweb;
                                }
                                else
                                {
                                    if (Global._currentRecipeCostType1 == "loot_deadspider")
                                    {
                                        Global._currentRecipeCostIcon1 = this.gs_common.gui_icons_loot_deadspider;
                                    }
                                    else
                                    {
                                        if (Global._currentRecipeCostType1 == "loot_eballon")
                                        {
                                            Global._currentRecipeCostIcon1 = this.gs_common.gui_icons_loot_eballon;
                                        }
                                        else
                                        {
                                            if (Global._currentRecipeCostType1 == "loot_cactus")
                                            {
                                                Global._currentRecipeCostIcon1 = this.gs_common.gui_icons_loot_cactus;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        //CostIcon2
                        if (Global._currentRecipeCostType2 == "loot_metal")
                        {
                            Global._currentRecipeCostIcon2 = this.gs_common.gui_icons_loot_metal;
                        }
                        else
                        {
                            if (Global._currentRecipeCostType2 == "loot_plastic")
                            {
                                Global._currentRecipeCostIcon2 = this.gs_common.gui_icons_loot_plastic;
                            }
                            else
                            {
                                if (Global._currentRecipeCostType2 == "loot_cobweb")
                                {
                                    Global._currentRecipeCostIcon2 = this.gs_common.gui_icons_loot_cobweb;
                                }
                                else
                                {
                                    if (Global._currentRecipeCostType2 == "loot_deadspider")
                                    {
                                        Global._currentRecipeCostIcon2 = this.gs_common.gui_icons_loot_deadspider;
                                    }
                                    else
                                    {
                                        if (Global._currentRecipeCostType2 == "loot_eballon")
                                        {
                                            Global._currentRecipeCostIcon2 = this.gs_common.gui_icons_loot_eballon;
                                        }
                                        else
                                        {
                                            if (Global._currentRecipeCostType2 == "loot_cactus")
                                            {
                                                Global._currentRecipeCostIcon2 = this.gs_common.gui_icons_loot_cactus;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        //CostIcon3
                        if (Global._currentRecipeCostType3 == "loot_metal")
                        {
                            Global._currentRecipeCostIcon3 = this.gs_common.gui_icons_loot_metal;
                        }
                        else
                        {
                            if (Global._currentRecipeCostType3 == "loot_plastic")
                            {
                                Global._currentRecipeCostIcon3 = this.gs_common.gui_icons_loot_plastic;
                            }
                            else
                            {
                                if (Global._currentRecipeCostType3 == "loot_cobweb")
                                {
                                    Global._currentRecipeCostIcon3 = this.gs_common.gui_icons_loot_cobweb;
                                }
                                else
                                {
                                    if (Global._currentRecipeCostType3 == "loot_deadspider")
                                    {
                                        Global._currentRecipeCostIcon3 = this.gs_common.gui_icons_loot_deadspider;
                                    }
                                    else
                                    {
                                        if (Global._currentRecipeCostType3 == "loot_eballon")
                                        {
                                            Global._currentRecipeCostIcon3 = this.gs_common.gui_icons_loot_eballon;
                                        }
                                        else
                                        {
                                            if (Global._currentRecipeCostType3 == "loot_cactus")
                                            {
                                                Global._currentRecipeCostIcon3 = this.gs_common.gui_icons_loot_cactus;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        //CostIcon4
                        if (Global._currentRecipeCostType4 == "loot_metal")
                        {
                            Global._currentRecipeCostIcon4 = this.gs_common.gui_icons_loot_metal;
                        }
                        else
                        {
                            if (Global._currentRecipeCostType4 == "loot_plastic")
                            {
                                Global._currentRecipeCostIcon4 = this.gs_common.gui_icons_loot_plastic;
                            }
                            else
                            {
                                if (Global._currentRecipeCostType4 == "loot_cobweb")
                                {
                                    Global._currentRecipeCostIcon4 = this.gs_common.gui_icons_loot_cobweb;
                                }
                                else
                                {
                                    if (Global._currentRecipeCostType4 == "loot_deadspider")
                                    {
                                        Global._currentRecipeCostIcon4 = this.gs_common.gui_icons_loot_deadspider;
                                    }
                                    else
                                    {
                                        if (Global._currentRecipeCostType4 == "loot_eballon")
                                        {
                                            Global._currentRecipeCostIcon4 = this.gs_common.gui_icons_loot_eballon;
                                        }
                                        else
                                        {
                                            if (Global._currentRecipeCostType4 == "loot_cactus")
                                            {
                                                Global._currentRecipeCostIcon4 = this.gs_common.gui_icons_loot_cactus;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        Global.currentRecipeY = (a * 170) * Global.guiRatio;
                    }
                    GUI.EndGroup();
                    a++;
                }
                if (Global._isRecipeSelect)
                {
                    GUI.Label(new Rect(170 * Global.guiRatio, Global.currentRecipeY + (70 * Global.guiRatio), 670 * Global.guiRatio, 50 * Global.guiRatio), Global._currentRecipeName, this.gs_font.font_b52_48_c_white);
                    GUI.Box(new Rect(0, Global.currentRecipeY, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
                }
                GUI.EndScrollView();
                GUI.EndGroup();
                if (Global._isRecipeSelect)
                {
                    GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Global._currentRecipeName, this.gs_font.font_b52_60_cb_white);
                }
                GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string039, this.gs_font.font_b52_48_c_blue);
                GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
                if (!Global._isRecipeSelect)
                {
                    GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
                }
                else
                {
                    GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", Global._currentRecipeIcon);
                    //GUI.Label(Rect(1192*Global.guiRatio, 190*Global.guiRatio, 449*Global.guiRatio, 60*Global.guiRatio), Global._currentRecipeDescription, gs_font.font_century_24_lb_blue);
                    GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
                    if (Global._currentRecipeCostType1 != "none")
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeCostIcon1);
                        GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount1, this.gs_font.font_century_30_cb_green);
                        if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                        {
                            Global.currentLootIcon = Global._currentRecipeCostIcon1;
                            Global.currentLootName = Global._currentRecipeCostName1;
                            Global._isPopUpOpen = true;
                            Global._gui_AddInterface("LootInfoPopUp");
                        }
                    }
                    if (Global._currentRecipeCostType2 != "none")
                    {
                        GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeCostIcon2);
                        GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount2, this.gs_font.font_century_30_cb_green);
                        if (GUI.Button(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                        {
                            Global.currentLootIcon = Global._currentRecipeCostIcon2;
                            Global.currentLootName = Global._currentRecipeCostName2;
                            Global._isPopUpOpen = true;
                            Global._gui_AddInterface("LootInfoPopUp");
                        }
                    }
                    if (Global._currentRecipeCostType3 != "none")
                    {
                        GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeCostIcon3);
                        GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount3, this.gs_font.font_century_30_cb_green);
                        if (GUI.Button(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                        {
                            Global.currentLootIcon = Global._currentRecipeCostIcon3;
                            Global.currentLootName = Global._currentRecipeCostName3;
                            Global._isPopUpOpen = true;
                            Global._gui_AddInterface("LootInfoPopUp");
                        }
                    }
                    if (Global._currentRecipeCostType4 != "none")
                    {
                        GUI.Box(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeCostIcon4);
                        GUI.Label(new Rect(644 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._currentRecipeCostAmount4, this.gs_font.font_century_30_cb_green);
                        if (GUI.Button(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                        {
                            Global.currentLootIcon = Global._currentRecipeCostIcon4;
                            Global.currentLootName = Global._currentRecipeCostName4;
                            Global._isPopUpOpen = true;
                            Global._gui_AddInterface("LootInfoPopUp");
                        }
                    }
                    GUI.EndGroup();
                    if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                    {
                        if (((Global._isR3Backpack || Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 24)) || ((!Global._isR3Backpack || !Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 12)))
                        {
                            if (Global._currentRecipeCostType1 != "none")
                            {
                                (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType1] as Hashtable)["amount"]) + int.Parse(Global._currentRecipeCostAmount1)).ToString();
                            }
                            if (Global._currentRecipeCostType2 != "none")
                            {
                                (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType2] as Hashtable)["amount"]) + int.Parse(Global._currentRecipeCostAmount2)).ToString();
                            }
                            if (Global._currentRecipeCostType3 != "none")
                            {
                                (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType3] as Hashtable)["amount"]) + int.Parse(Global._currentRecipeCostAmount3)).ToString();
                            }
                            if (Global._currentRecipeCostType4 != "none")
                            {
                                (Global._userResourcesCraft[Global._currentRecipeCostType4] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[Global._currentRecipeCostType4] as Hashtable)["amount"]) + int.Parse(Global._currentRecipeCostAmount4)).ToString();
                            }
                            Global.globalBus.gameObject.SendMessage("c_GameController_CheckConsumables");
                            int b = 0;
                            while (b < Global.globalInventoryThingsArr.Count)
                            {
                                if (Global.globalInventoryThingsArr[b]["thingname"] == Global._currentRecipeThingName)
                                {
                                    Global.globalInventoryThingsArr.Remove(Global.globalInventoryThingsArr[b]);
                                    break;
                                }
                                b++;
                            }
                            this.c_GameController_Base_command_SortThings();
                            if (Global.InventoryItemsArr.Count > 0)
                            {
                                Global.InventoryItemsArr.Clear();
                            }
                            int c = 0;
                            while (c < Global.globalInventoryThingsArr.Count)
                            {
                                if (((((Global.globalInventoryThingsArr[c]["type"] == "boots") || (Global.globalInventoryThingsArr[c]["type"] == "gloves")) || (Global.globalInventoryThingsArr[c]["type"] == "armor")) || (Global.globalInventoryThingsArr[c]["type"] == "weapon")) || (Global.globalInventoryThingsArr[c]["type"] == "backpack"))
                                {
                                    Global.InventoryItemsArr.Add(new Hashtable(new Hashtable() { {"droptype", Global.globalInventoryThingsArr[c]["droptype"] },  {"type", Global.globalInventoryThingsArr[c]["type"] },  {"thingname", Global.globalInventoryThingsArr[c]["thingname"] },  {"icon", Global.globalInventoryThingsArr[c]["icon"] },  {"name", Global.globalInventoryThingsArr[c]["name"] },  {"costtype1", Global.globalInventoryThingsArr[c]["costtype1"] },  {"costamount1", Global.globalInventoryThingsArr[c]["costamount1"] },  {"costicon1", Global.globalInventoryThingsArr[c]["costicon1"] },  {"costtype2", Global.globalInventoryThingsArr[c]["costtype2"] },  {"costamount2", Global.globalInventoryThingsArr[c]["costamount2"] },  {"costicon2", Global.globalInventoryThingsArr[c]["costicon2"] },  {"costtype3", Global.globalInventoryThingsArr[c]["costtype3"] },  {"costamount3", Global.globalInventoryThingsArr[c]["costamount3"] },  {"costicon3", Global.globalInventoryThingsArr[c]["costicon3"] },  {"costtype4", Global.globalInventoryThingsArr[c]["costtype4"] },  {"costamount4", Global.globalInventoryThingsArr[c]["costamount4"] },  {"costicon4", Global.globalInventoryThingsArr[c]["costicon4"] }, }));
                                }
                                c++;
                            }
                            Global._isRecipeSelect = false;
                            Global._currentRecipeType = "";
                            Global._currentRecipeName = "";
                            Global._currentRecipeThingName = "";
                            Global._currentRecipeDescription = "";
                            Global._currentRecipeIcon = "";
                            Global._currentRecipeAddSlots = "";
                            Global._currentRecipeAddAbility = "";
                            Global._currentRecipeAddDamage = "";
                            Global._currentRecipeUniqueID = "";
                            Global._currentRecipeCostType1 = "";
                            Global._currentRecipeCostType2 = "";
                            Global._currentRecipeCostType3 = "";
                            Global._currentRecipeCostType4 = "";
                            Global._currentRecipeCostAmount1 = "";
                            Global._currentRecipeCostAmount2 = "";
                            Global._currentRecipeCostAmount3 = "";
                            Global._currentRecipeCostAmount4 = "";
                        }
                        else
                        {
                            Global._gui_AddInterface("InventoryFullPopUp");
                        }
                    }
                }
                GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string040, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_workroom_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string125, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_LibraryScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_library_background);
        if (Global._isLibraryHealthSelect)
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string034, this.gs_font.font_b52_60_cb_white);
            GUI.Box(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_s);
            if (GUI.Button(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n))
            {
                Global._isLibraryHealthSelect = false;
                Global._isLibraryGeoSelect = true;
                (Global._userBooksHealth["library_book01"] as Hashtable)["select"] = "false";
            }
            if (GUI.Button(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_n))
            {
                Global._isLibraryHealthSelect = false;
                Global._isLibraryTechSelect = true;
                (Global._userBooksHealth["library_book01"] as Hashtable)["select"] = "false";
            }
            if (GUI.Button(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n))
            {
                Global._isLibraryHealthSelect = false;
                Global._isLibraryHistorySelect = true;
                (Global._userBooksHealth["library_book01"] as Hashtable)["select"] = "false";
            }
            if (GUI.Button(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_n))
            {
                Global._isLibraryHealthSelect = false;
                Global._isLibraryBiologySelect = true;
                (Global._userBooksHealth["library_book01"] as Hashtable)["select"] = "false";
            }
        }
        if (Global._isLibraryGeoSelect)
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string086, this.gs_font.font_b52_60_cb_white);
            if (GUI.Button(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_n))
            {
                Global._isLibraryHealthSelect = true;
                Global._isLibraryGeoSelect = false;
            }
            GUI.Box(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_s);
            if (GUI.Button(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_n))
            {
                Global._isLibraryGeoSelect = false;
                Global._isLibraryTechSelect = true;
            }
            if (GUI.Button(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n))
            {
                Global._isLibraryGeoSelect = false;
                Global._isLibraryHistorySelect = true;
            }
            if (GUI.Button(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_n))
            {
                Global._isLibraryGeoSelect = false;
                Global._isLibraryBiologySelect = true;
            }
        }
        if (Global._isLibraryTechSelect)
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string036, this.gs_font.font_b52_60_cb_white);
            if (GUI.Button(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_n))
            {
                Global._isLibraryHealthSelect = true;
                Global._isLibraryTechSelect = false;
                (Global._userBooksTech["library_book01"] as Hashtable)["select"] = "false";
            }
            if (GUI.Button(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n))
            {
                Global._isLibraryTechSelect = false;
                Global._isLibraryGeoSelect = true;
                (Global._userBooksTech["library_book01"] as Hashtable)["select"] = "false";
            }
            GUI.Box(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_s);
            if (GUI.Button(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n))
            {
                Global._isLibraryTechSelect = false;
                Global._isLibraryHistorySelect = true;
                (Global._userBooksTech["library_book01"] as Hashtable)["select"] = "false";
            }
            if (GUI.Button(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_n))
            {
                Global._isLibraryTechSelect = false;
                Global._isLibraryBiologySelect = true;
                (Global._userBooksTech["library_book01"] as Hashtable)["select"] = "false";
            }
        }
        if (Global._isLibraryHistorySelect)
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string087, this.gs_font.font_b52_60_cb_white);
            if (GUI.Button(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_n))
            {
                Global._isLibraryHealthSelect = true;
                Global._isLibraryHistorySelect = false;
            }
            if (GUI.Button(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n))
            {
                Global._isLibraryHistorySelect = false;
                Global._isLibraryGeoSelect = true;
            }
            if (GUI.Button(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_n))
            {
                Global._isLibraryHistorySelect = false;
                Global._isLibraryTechSelect = true;
            }
            GUI.Box(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_s);
            if (GUI.Button(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_n))
            {
                Global._isLibraryHistorySelect = false;
                Global._isLibraryBiologySelect = true;
            }
        }
        if (Global._isLibraryBiologySelect)
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string035, this.gs_font.font_b52_60_cb_white);
            if (GUI.Button(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_n))
            {
                Global._isLibraryHealthSelect = true;
                Global._isLibraryBiologySelect = false;
                (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
                (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
                (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
            }
            if (GUI.Button(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n))
            {
                Global._isLibraryBiologySelect = false;
                Global._isLibraryGeoSelect = true;
                (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
                (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
                (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
            }
            if (GUI.Button(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_n))
            {
                Global._isLibraryBiologySelect = false;
                Global._isLibraryTechSelect = true;
                (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
                (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
                (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
            }
            if (GUI.Button(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n))
            {
                Global._isLibraryBiologySelect = false;
                Global._isLibraryHistorySelect = true;
                (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
                (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
                (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
            }
            GUI.Box(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_s);
        }
        if (GUI.Button(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            (Global._userBooksHealth["library_book01"] as Hashtable)["select"] = "false";
            (Global._userBooksTech["library_book01"] as Hashtable)["select"] = "false";
            (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
            (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
            (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
            Global._isLibraryHealthSelect = true;
            Global._isLibraryBiologySelect = false;
            Global._isLibraryGeoSelect = false;
            Global._isLibraryTechSelect = false;
            Global._isLibraryHistorySelect = false;
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        if (Global._isLibraryHealthSelect)
        {
             //Книга 1
            if ((Global._userBooksHealth["library_book01"] as Hashtable)["teach"] as string == "false")
            {
                if ((Global._userBooksHealth["library_book01"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_food_off);
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_food_off))
                    {
                        (Global._userBooksHealth["library_book01"] as Hashtable)["select"] = "true";
                    }
                }
            }
            else
            {
                if ((Global._userBooksHealth["library_book01"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_food_on);
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_food_on))
                    {
                        (Global._userBooksHealth["library_book01"] as Hashtable)["select"] = "true";
                    }
                }
            }
        }
        if (Global._isLibraryTechSelect)
        {
             //Книга 1
            if ((Global._userBooksTech["library_book01"] as Hashtable)["teach"] as string == "false")
            {
                if ((Global._userBooksTech["library_book01"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_skaf_off);
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_skaf_off))
                    {
                        (Global._userBooksTech["library_book01"] as Hashtable)["select"] = "true";
                    }
                }
            }
            else
            {
                if ((Global._userBooksTech["library_book01"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_skaf_on);
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_skaf_on))
                    {
                        (Global._userBooksTech["library_book01"] as Hashtable)["select"] = "true";
                    }
                }
            }
        }
        if (Global._isLibraryBiologySelect)
        {
             //Книга 1
            if ((Global._userBooksBiology["library_book01"] as Hashtable)["teach"] as string == "false")
            {
                if ((Global._userBooksBiology["library_book01"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_vegetables_off);
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_vegetables_off))
                    {
                        (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "true";
                        (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
                        (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
                    }
                }
            }
            else
            {
                if ((Global._userBooksBiology["library_book01"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_vegetables_on);
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_vegetables_on))
                    {
                        (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "true";
                        (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
                        (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
                    }
                }
            }
            //Книга 2
            if ((Global._userBooksBiology["library_book02"] as Hashtable)["teach"] as string == "false")
            {
                if ((Global._userBooksBiology["library_book02"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_mushrooms_off);
                    GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_mushrooms_off))
                    {
                        (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
                        (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "true";
                        (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
                    }
                }
            }
            else
            {
                if ((Global._userBooksBiology["library_book02"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_mushrooms_on);
                    GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_mushrooms_on))
                    {
                        (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
                        (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "true";
                        (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "false";
                    }
                }
            }
            //Книга 3
            if ((Global._userBooksBiology["library_book03"] as Hashtable)["teach"] as string == "false")
            {
                if ((Global._userBooksBiology["library_book03"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(344 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_spiders_off);
                    GUI.Box(new Rect(344 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(344 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_spiders_off))
                    {
                        (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
                        (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
                        (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "true";
                    }
                }
            }
            else
            {
                if ((Global._userBooksBiology["library_book03"] as Hashtable)["select"] as string == "true")
                {
                    GUI.Box(new Rect(344 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_spiders_on);
                    GUI.Box(new Rect(344 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                else
                {
                    if (GUI.Button(new Rect(344 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_spiders_on))
                    {
                        (Global._userBooksBiology["library_book01"] as Hashtable)["select"] = "false";
                        (Global._userBooksBiology["library_book02"] as Hashtable)["select"] = "false";
                        (Global._userBooksBiology["library_book03"] as Hashtable)["select"] = "true";
                    }
                }
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(943 * Global.guiRatio, 133 * Global.guiRatio, 733 * Global.guiRatio, 668 * Global.guiRatio));
        if (Global._isLibraryHealthSelect)
        {
             //Книга 1
            if (((Global._userBooksHealth["library_book01"] as Hashtable)["select"] as string == "true") 
                && ((Global._userBooksHealth["library_book01"] as Hashtable)["teach"] as string == "true"))
            {
                GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userBooksHealth["library_book01"] as Hashtable)["titleimage"]);
                GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userBooksHealth["library_book01"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
                GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userBooksHealth["library_book01"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                {
                    Global._isViewFromLibrary = true;
                    Global.videoPlayer.SendMessage("_PlayVideo", "ED_CAT_FOOD_(RUS).ogv");
                }
                GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string074, this.gs_font.font_28daysletter_60_cb_blue);
            }
            else
            {
                if (((Global._userBooksHealth["library_book01"] as Hashtable)["select"] as string == "true") 
                    && ((Global._userBooksHealth["library_book01"] as Hashtable)["teach"] as string == "false"))
                {
                    GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), Strings.string088, this.gs_font.font_b52_36_c_white);
                }
            }
        }
        if (Global._isLibraryTechSelect)
        {
             //Книга 1
            if (((Global._userBooksTech["library_book01"] as Hashtable)["select"] as string == "true") 
                && ((Global._userBooksTech["library_book01"] as Hashtable)["teach"] as string == "true"))
            {
                GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userBooksTech["library_book01"] as Hashtable)["titleimage"]);
                GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userBooksTech["library_book01"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
                GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userBooksTech["library_book01"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                {
                    Global._isViewFromLibrary = true;
                    Global.videoPlayer.SendMessage("_PlayVideo", "ED_CAT_SCYFINDER_rus.ogv");
                }
                GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string074, this.gs_font.font_28daysletter_60_cb_blue);
            }
            else
            {
                if (((Global._userBooksTech["library_book01"] as Hashtable)["select"] as string == "true")
                    && ((Global._userBooksTech["library_book01"] as Hashtable)["teach"] as string == "false"))
                {
                    GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), Strings.string088, this.gs_font.font_b52_36_c_white);
                }
            }
        }
        if (Global._isLibraryBiologySelect)
        {
             //Книга 1
            if (((Global._userBooksBiology["library_book01"] as Hashtable)["select"] as string == "true") 
                && ((Global._userBooksBiology["library_book01"] as Hashtable)["teach"] as string == "true"))
            {
                GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userBooksBiology["library_book01"] as Hashtable)["titleimage"]);
                GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userBooksBiology["library_book01"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
                GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userBooksBiology["library_book01"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                {
                    Global._isViewFromLibrary = true;
                    Global.videoPlayer.SendMessage("_PlayVideo", "NGS.ogv");
                }
                GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string074, this.gs_font.font_28daysletter_60_cb_blue);
            }
            else
            {
                if (((Global._userBooksBiology["library_book01"] as Hashtable)["select"] as string == "true") 
                    && ((Global._userBooksBiology["library_book01"] as Hashtable)["teach"] as string == "false"))
                {
                    GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), Strings.string088, this.gs_font.font_b52_36_c_white);
                }
            }
            //Книга 2
            if (((Global._userBooksBiology["library_book02"] as Hashtable)["select"] as string == "true")
                && ((Global._userBooksBiology["library_book02"] as Hashtable)["teach"] as string == "true"))
            {
                GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userBooksBiology["library_book02"] as Hashtable)["titleimage"]);
                GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userBooksBiology["library_book02"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
                GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userBooksBiology["library_book02"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                {
                    Global._isViewFromLibrary = true;
                    Global.videoPlayer.SendMessage("_PlayVideo", "ED_CAT_MUSHROOM_rus.ogv");
                }
                GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string074, this.gs_font.font_28daysletter_60_cb_blue);
            }
            else
            {
                if (((Global._userBooksBiology["library_book02"] as Hashtable)["select"] as string == "true") 
                    && ((Global._userBooksBiology["library_book02"] as Hashtable)["teach"] as string == "false"))
                {
                    GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), Strings.string088, this.gs_font.font_b52_36_c_white);
                }
            }
            //Книга 3
            if (((Global._userBooksBiology["library_book03"] as Hashtable)["select"] as string == "true") 
                && ((Global._userBooksBiology["library_book03"] as Hashtable)["teach"] as string == "true"))
            {
                GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userBooksBiology["library_book03"] as Hashtable)["titleimage"]);
                GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userBooksBiology["library_book03"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
                GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userBooksBiology["library_book03"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                {
                    Global._isViewFromLibrary = true;
                    Global.videoPlayer.SendMessage("_PlayVideo", "NGS.ogv");
                }
                GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string074, this.gs_font.font_28daysletter_60_cb_blue);
            }
            else
            {
                if (((Global._userBooksBiology["library_book03"] as Hashtable)["select"] as string == "true") 
                    && ((Global._userBooksBiology["library_book03"] as Hashtable)["teach"] as string == "false"))
                {
                    GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), Strings.string088, this.gs_font.font_b52_36_c_white);
                }
            }
        }
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_library_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string071, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_KitchenScreen() //Интерфейс кухни
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        if (GUI.Button(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseAllInterfaces();
            Global._isRecipeFoodSelect = false;
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 860 * Global.guiRatio, 670 * Global.guiRatio));
        this.scrollPositionKitchen = GUI.BeginScrollView(new Rect(0, 0, 860 * Global.guiRatio, 670 * Global.guiRatio), this.scrollPositionKitchen, new Rect(0, 0, 810 * Global.guiRatio, Global._recipeFood.Count * (170 * Global.guiRatio)), false, true);
        //scrollPositionKitchen = GUI.BeginScrollView (Rect (0, 0, 840*Global.guiRatio, 670*Global.guiRatio), scrollPositionKitchen, Rect (0, 0, 900*Global.guiRatio, Global._recipeFood.Count * (170*Global.guiRatio)), false, true, gs_common.emptystyle, gs_common.emptystyle);
        int i = 0;
        while (i < Global._recipeFood.Count)
        {
            GUI.BeginGroup(new Rect(0, (i * 170) * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[i]["icon"]);
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeFood[i]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
            if (Global._recipeFood[i]["available"] as string == "true")
            {
                if (GUI.Button(new Rect(170 * Global.guiRatio, 0, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                {
                    Global._isRecipeFoodSelect = true;
                    Global._currentRecipeThingName = (string) Global._recipeFood[i]["thingname"];
                    Global.currentFoodRecipeName = (string) Global._recipeFood[i]["name"];
                    Global.currentFoodRecipeDescription = (string) Global._recipeFood[i]["description"];
                    Global.currentFoodRecipeIcon = (GUIStyle) Global._recipeFood[i]["icon"];
                    Global.currentFoodRecipeCostType1 = (string) Global._recipeFood[i]["costtype1"];
                    Global.currentFoodRecipeCostType2 = (string) Global._recipeFood[i]["costtype2"];
                    Global.currentFoodRecipeCostType3 = (string) Global._recipeFood[i]["costtype3"];
                    Global.currentFoodRecipeCostType4 = (string) Global._recipeFood[i]["costtype4"];
                    Global.currentFoodRecipeCostAmount1 = (string) Global._recipeFood[i]["costamount1"];
                    Global.currentFoodRecipeCostAmount2 = (string) Global._recipeFood[i]["costamount2"];
                    Global.currentFoodRecipeCostAmount3 = (string) Global._recipeFood[i]["costamount3"];
                    Global.currentFoodRecipeCostAmount4 = (string) Global._recipeFood[i]["costamount4"];
                    if (Global.currentFoodRecipeCostType1 != "none")
                    {
                        Global.currentFoodRecipeCostName1 = (string) (Global._userResourcesFood[Global.currentFoodRecipeCostType1] as Hashtable)["name"];
                    }
                    if (Global.currentFoodRecipeCostType2 != "none")
                    {
                        Global.currentFoodRecipeCostName2 = (string) (Global._userResourcesFood[Global.currentFoodRecipeCostType2] as Hashtable)["name"];
                    }
                    if (Global.currentFoodRecipeCostType3 != "none")
                    {
                        Global.currentFoodRecipeCostName3 = (string) (Global._userResourcesFood[Global.currentFoodRecipeCostType3] as Hashtable)["name"];
                    }
                    if (Global.currentFoodRecipeCostType4 != "none")
                    {
                        Global.currentFoodRecipeCostName4 = (string) (Global._userResourcesFood[Global.currentFoodRecipeCostType4] as Hashtable)["name"];
                    }
                    Global.currentFoodRecipeCostIcon1 = (GUIStyle) Global._recipeFood[i]["costicon1"];
                    Global.currentFoodRecipeCostIcon2 = (GUIStyle) Global._recipeFood[i]["costicon2"];
                    Global.currentFoodRecipeCostIcon3 = (GUIStyle) Global._recipeFood[i]["costicon3"];
                    Global.currentFoodRecipeCostIcon4 = (GUIStyle) Global._recipeFood[i]["costicon4"];
                    Global.currentFoodRecipeAddHealth = (string) Global._recipeFood[i]["addhealth"];
                    Global.currentRecipeY = (i * 170) * Global.guiRatio;
                }
            }
            else
            {
                if (Global._recipeFood[i]["available"] as string == "false")
                {
                    GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
                }
            }
            GUI.EndGroup();
            i++;
        }
        if (Global._isRecipeFoodSelect)
        {
            GUI.Label(new Rect(170 * Global.guiRatio, Global.currentRecipeY + (70 * Global.guiRatio), 670 * Global.guiRatio, 50 * Global.guiRatio), Global.currentFoodRecipeName, this.gs_font.font_b52_48_c_white);
            GUI.Box(new Rect(0, Global.currentRecipeY, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        }
        GUI.EndScrollView();
        GUI.EndGroup();
        if (Global._isRecipeFoodSelect)
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Global.currentFoodRecipeName, this.gs_font.font_b52_60_cb_white);
        }
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        if (!Global._isRecipeFoodSelect)
        {
            GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
        }
        else
        {
            GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", Global.currentFoodRecipeIcon);
            GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 60 * Global.guiRatio), Global.currentFoodRecipeDescription, this.gs_font.font_century_24_lb_blue);
            GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
            if (Global.currentFoodRecipeCostType1 != "none")
            {
                GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.currentFoodRecipeCostIcon1);
                if (int.Parse(Global.currentFoodRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType1] as Hashtable)["amount"]))
                {
                    GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global.currentFoodRecipeCostAmount1, this.gs_font.font_century_30_cb_green);
                }
                else
                {
                    GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global.currentFoodRecipeCostAmount1, this.gs_font.font_century_30_cb_red);
                }
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                {
                    Global.currentLootIcon = Global.currentFoodRecipeCostIcon1;
                    Global.currentLootName = Global.currentFoodRecipeCostName1;
                    Global._isPopUpOpen = true;
                    Global._gui_AddInterface("LootInfoPopUp");
                }
            }
            if (Global.currentFoodRecipeCostType2 != "none")
            {
                GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.currentFoodRecipeCostIcon2);
                if (int.Parse(Global.currentFoodRecipeCostAmount2) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType2] as Hashtable)["amount"]))
                {
                    GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global.currentFoodRecipeCostAmount2, this.gs_font.font_century_30_cb_green);
                }
                else
                {
                    GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global.currentFoodRecipeCostAmount2, this.gs_font.font_century_30_cb_red);
                }
                if (GUI.Button(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                {
                    Global.currentLootIcon = Global.currentFoodRecipeCostIcon2;
                    Global.currentLootName = Global.currentFoodRecipeCostName2;
                    Global._isPopUpOpen = true;
                    Global._gui_AddInterface("LootInfoPopUp");
                }
            }
            if (Global.currentFoodRecipeCostType3 != "none")
            {
                GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.currentFoodRecipeCostIcon3);
                if (int.Parse(Global.currentFoodRecipeCostAmount3) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType3] as Hashtable)["amount"]))
                {
                    GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global.currentFoodRecipeCostAmount3, this.gs_font.font_century_30_cb_green);
                }
                else
                {
                    GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global.currentFoodRecipeCostAmount3, this.gs_font.font_century_30_cb_red);
                }
                if (GUI.Button(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                {
                    Global.currentLootIcon = Global.currentFoodRecipeCostIcon3;
                    Global.currentLootName = Global.currentFoodRecipeCostName3;
                    Global._isPopUpOpen = true;
                    Global._gui_AddInterface("LootInfoPopUp");
                }
            }
            if (Global.currentFoodRecipeCostType4 != "none")
            {
                GUI.Box(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.currentFoodRecipeCostIcon4);
                if (int.Parse(Global.currentFoodRecipeCostAmount4) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType4] as Hashtable)["amount"]))
                {
                    GUI.Label(new Rect(644 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global.currentFoodRecipeCostAmount4, this.gs_font.font_century_30_cb_green);
                }
                else
                {
                    GUI.Label(new Rect(644 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global.currentFoodRecipeCostAmount4, this.gs_font.font_century_30_cb_red);
                }
                if (GUI.Button(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                {
                    Global.currentLootIcon = Global.currentFoodRecipeCostIcon4;
                    Global.currentLootName = Global.currentFoodRecipeCostName4;
                    Global._isPopUpOpen = true;
                    Global._gui_AddInterface("LootInfoPopUp");
                }
            }
            GUI.EndGroup();
            if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                if (((Global._isR3Backpack || Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 24)) || ((!Global._isR3Backpack || !Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 12)))
                {
                    if ((((((((Global.currentFoodRecipeCostType1 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType1] as Hashtable)["amount"]))) && ((Global.currentFoodRecipeCostType2 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount2) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType2] as Hashtable)["amount"])))) && ((Global.currentFoodRecipeCostType3 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount3) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType3] as Hashtable)["amount"])))) && ((Global.currentFoodRecipeCostType4 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount4) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType4] as Hashtable)["amount"])))) || (((((Global.currentFoodRecipeCostType1 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType1] as Hashtable)["amount"]))) && ((Global.currentFoodRecipeCostType2 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount2) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType2] as Hashtable)["amount"])))) && ((Global.currentFoodRecipeCostType3 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount3) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType3] as Hashtable)["amount"])))) && (Global.currentFoodRecipeCostType4 == "none"))) || (((((Global.currentFoodRecipeCostType1 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType1] as Hashtable)["amount"]))) && ((Global.currentFoodRecipeCostType2 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount2) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType2] as Hashtable)["amount"])))) && (Global.currentFoodRecipeCostType3 == "none")) && (Global.currentFoodRecipeCostType4 == "none"))) || (((((Global.currentFoodRecipeCostType1 != "none") && (int.Parse(Global.currentFoodRecipeCostAmount1) <= int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType1] as Hashtable)["amount"]))) && (Global.currentFoodRecipeCostType2 == "none")) && (Global.currentFoodRecipeCostType3 == "none")) && (Global.currentFoodRecipeCostType4 == "none")))
                    {
                        if (Global.currentFoodRecipeCostType1 != "none")
                        {
                            (Global._userResourcesFood[Global.currentFoodRecipeCostType1] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType1] as Hashtable)["amount"]) - int.Parse(Global.currentFoodRecipeCostAmount1)).ToString();
                        }
                        if (Global.currentFoodRecipeCostType2 != "none")
                        {
                            (Global._userResourcesFood[Global.currentFoodRecipeCostType2] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType2] as Hashtable)["amount"]) - int.Parse(Global.currentFoodRecipeCostAmount2)).ToString();
                        }
                        if (Global.currentFoodRecipeCostType3 != "none")
                        {
                            (Global._userResourcesFood[Global.currentFoodRecipeCostType3] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType3] as Hashtable)["amount"]) - int.Parse(Global.currentFoodRecipeCostAmount3)).ToString();
                        }
                        if (Global.currentFoodRecipeCostType4 != "none")
                        {
                            (Global._userResourcesFood[Global.currentFoodRecipeCostType4] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesFood[Global.currentFoodRecipeCostType4] as Hashtable)["amount"]) - int.Parse(Global.currentFoodRecipeCostAmount4)).ToString();
                        }
                        Global._currentRecipeUniqueID = ((("food_" + Random.Range(1111, 9999).ToString()) + "_") + Random.Range(1411, 9599).ToString()) + Random.Range(1171, 9991).ToString();
                        Global._gui_AddInterface("FoodCreatedPopUp");
                    }
                    else
                    {
                        Global._gui_AddInterface("NoResourcesFoodPopUp");
                    }
                }
                else
                {
                    Global._gui_AddInterface("InventoryFullPopUp");
                }
            }
        }
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_kitchen_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string064, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_StorageFarawayScreen() //Интерфейс склада вдали от НЛО
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        if (Global._isR3Backpack || Global._isR5Backpack)
        {
            GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_storage_faraway_background);
        }
        else
        {
            GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_storage_faraway_background_no_backpack);
        }
        GUI.Label(new Rect(0, 18 * Global.guiRatio, 858 * Global.guiRatio, 60 * Global.guiRatio), Strings.string093, this.gs_font.font_b52_60_cb_white);
        GUI.Label(new Rect(866 * Global.guiRatio, 18 * Global.guiRatio, 858 * Global.guiRatio, 60 * Global.guiRatio), Strings.string098, this.gs_font.font_b52_60_cb_white);
        GUI.Label(new Rect(959 * Global.guiRatio, 310 * Global.guiRatio, 671 * Global.guiRatio, 120 * Global.guiRatio), Strings.string141, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(1651 * Global.guiRatio, 18 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseAllInterfaces();
            Global._isRecipeFoodSelect = false;
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_storage_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string098, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        this.drawStorageInventory(Global.StorageInventoryArr, true);
        //this.drawStorage(Global.StorageArr, true);
        if (!(Global.someDropableObject == null) && Global.isMouseHold)
        {
            GUI.BeginGroup(new Rect(Global.gmPos.x - (80 * Global.guiRatio), Global.gmPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global.someDropableObject["object"] as Hashtable)["icon"]);
            GUI.EndGroup();
        }
        GUI.EndGroup();
    }

    public virtual void gui_StorageScreen() //Интерфейс склада
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        if (Global._isR3Backpack || Global._isR5Backpack)
        {
            GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_storage_background);
        }
        else
        {
            GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_storage_background_no_backpack);
        }
        GUI.Label(new Rect(0, 18 * Global.guiRatio, 858 * Global.guiRatio, 60 * Global.guiRatio), Strings.string093, this.gs_font.font_b52_60_cb_white);
        GUI.Label(new Rect(866 * Global.guiRatio, 18 * Global.guiRatio, 858 * Global.guiRatio, 60 * Global.guiRatio), Strings.string098, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseAllInterfaces();
            Global._isRecipeFoodSelect = false;
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_storage_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string098, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        this.drawStorageInventory(Global.StorageInventoryArr, true);
        this.drawStorage(Global.StorageArr, true);
        if (!(Global.someDropableObject == null) && Global.isMouseHold)
        {
            GUI.BeginGroup(new Rect(Global.gmPos.x - (80 * Global.guiRatio), Global.gmPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global.someDropableObject["object"] as Hashtable)["icon"]);
            GUI.EndGroup();
        }
        GUI.EndGroup();
    }

    private void drawStorageInventory(System.Collections.Generic.List<Hashtable> inArr, bool isThings)
    {
        int TempIndex = 0;
        bool addFood = false;
        int addFoodIndex = 0;
        bool addNewFood = false;
        bool addLoot = false;
        int addLootIndex = 0;
        bool addNewLoot = false;
        GUI.BeginGroup(new Rect((Screen.width / 2) - (767 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 670 * Global.guiRatio, 670 * Global.guiRatio));
        foreach (Hashtable oneThingInv in inArr)
        {
            Rect iconThingRect = new Rect((int.Parse((string) oneThingInv["x"]) * 170) * Global.guiRatio, (int.Parse((string) oneThingInv["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio);
            if ((Global.someDropableObject == null) || (!(Global.someDropableObject == null) && !(Global.someDropableObject["uniqueID"] == oneThingInv["vid"])))
            {
                GUI.BeginGroup(iconThingRect);
                if (!(Global.someDropableObject == null))
                {
                    if (Global.someDropableObject["uniqueID"] == oneThingInv["uniqueID"])
                    {
                        if (!Global.isMouseHold)
                        {
                            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        }
                    }
                    else
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                        {
                            GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                        }
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                    {
                        GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                    }
                }
                GUI.EndGroup();
            }
            if (Global.someDropableObject == null)
            {
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) - (767 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (372 * Global.guiRatio));
                if (this.isPointInRect(iconThingRect, Global.gmPos))
                {
                    if (Input.GetMouseButtonDown(0) && !Global._isWeCanDragAndDrop)
                    {
                        Global._isWeCanDragAndDrop = true;
                        Global.lastMouseDownObjectForDrag = Time.realtimeSinceStartup;
                    }
                    else
                    {
                        if (Input.GetMouseButton(0) && Global._isWeCanDragAndDrop)
                        {
                            Global._isStorageThing = false;
                            Global._isInventoryThing = true;
                            Hashtable someDropableObjectHash = this.getDropHashtableForStorage(oneThingInv);
                            someDropableObjectHash["fromdrag"] = "storage_inv";
                            Global.someDropableObject = someDropableObjectHash;
                        }
                    }
                    if (Input.GetMouseButtonUp(0) && Global._isWeCanDragAndDrop)
                    {
                        Global.isMouseHold = false;
                    }
                }
            }
            if (!(Global.someDropableObject == null))
            {
                if (Global._isInventoryThing)
                {
                    GUI.Box(new Rect((int.Parse((string) Global.someDropableObject["x"]) * 170) * Global.guiRatio, (int.Parse((string) Global.someDropableObject["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) - (767 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (372 * Global.guiRatio));
                if (this.isPointInRect(iconThingRect, Global.gmPos))
                {
                    if (Input.GetMouseButtonDown(0) && !Global._isWeCanDragAndDrop)
                    {
                        Global._isStorageThing = false;
                        Global._isInventoryThing = true;
                        someDropableObjectHash = this.getDropHashtableForStorage(oneThingInv);
                        Global.someDropableObject = someDropableObjectHash;
                        Global._isWeCanDragAndDrop = true;
                        Global.lastMouseDownObjectForDrag = Time.realtimeSinceStartup;
                    }
                    else
                    {
                        if ((Input.GetMouseButton(0) && Global._isWeCanDragAndDrop) && ((Time.realtimeSinceStartup - Global.lastMouseDownObjectForDrag) > 0.2f))
                        {
                            Global.isMouseHold = true;
                        }
                    }
                    if (Input.GetMouseButtonUp(0) && Global._isWeCanDragAndDrop)
                    {
                        Global._isWeCanDragAndDrop = false;
                        Global.isMouseHold = false;
                    }
                }
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1830 * Global.guiRatio, 783 * Global.guiRatio));
        if ((Global.someDropableObject == null) || Global._isStorageFaraway)
        {
            GUI.Box(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
        }
        if (!(Global.someDropableObject == null) && !Global._isStorageFaraway)
        {
            if (GUI.Button(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                if (Global._isInventoryThing)
                {
                    if ((Global.someDropableObject["object"] as Hashtable)["type"] as string == "food")
                    {
                        if (Global.StorageArr.Count > 0)
                        {
                            int i = 0;
                            while (i < Global.StorageArr.Count)
                            {
                                if (Global.StorageArr[i]["thingname"] == (Global.someDropableObject["object"] as Hashtable)["thingname"])
                                {
                                    Global.StorageArr[i]["val"] = (int.Parse((string) Global.StorageArr[i]["val"]) + int.Parse((string) (Global.someDropableObject["object"] as Hashtable)["val"])).ToString();
                                    break;
                                }
                                else
                                {
                                    if (i == (Global.StorageArr.Count - 1))
                                    {
                                        Global.StorageArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"addhealth", (Global.someDropableObject["object"] as Hashtable)["addhealth"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                        break;
                                    }
                                }
                                i++;
                            }
                        }
                        else
                        {
                            Global.StorageArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"addhealth", (Global.someDropableObject["object"] as Hashtable)["addhealth"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                        }
                    }
                    else
                    {
                        if ((Global.someDropableObject["object"] as Hashtable)["type"] as string == "loot")
                        {
                            if (Global.StorageArr.Count > 0)
                            {
                                int k = 0;
                                while (k < Global.StorageArr.Count)
                                {
                                    if (Global.StorageArr[k]["thingname"] == (Global.someDropableObject["object"] as Hashtable)["thingname"])
                                    {
                                        Global.StorageArr[k]["val"] = (int.Parse((string) Global.StorageArr[k]["val"]) + int.Parse((string) (Global.someDropableObject["object"] as Hashtable)["val"])).ToString();
                                        break;
                                    }
                                    else
                                    {
                                        if (k == (Global.StorageArr.Count - 1))
                                        {
                                            Global.StorageArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" }, }));
                                            break;
                                        }
                                    }
                                    k++;
                                }
                            }
                            else
                            {
                                Global.StorageArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" }, }));
                            }
                            if (Global._userResourcesFood.ContainsKey((Global.someDropableObject["object"] as Hashtable)["thingname"]))
                            {
                                (Global._userResourcesFood[(Global.someDropableObject["object"] as Hashtable)["thingname"]] as Hashtable)["amount"] = "0";
                            }
                            if (Global._userResourcesCraft.ContainsKey((Global.someDropableObject["object"] as Hashtable)["thingname"]))
                            {
                                (Global._userResourcesCraft[(Global.someDropableObject["object"] as Hashtable)["thingname"]] as Hashtable)["amount"] = "0";
                            }
                            Global.globalBus.gameObject.SendMessage("c_GameController_CheckConsumables");
                        }
                        else
                        {
                            Global.StorageArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                        }
                    }
                    System.Collections.Generic.List<Hashtable> ThingsArrayTemp = Global.StorageInventoryArr;
                    int ThingsObjIndex = ThingsArrayTemp.IndexOf((Hashtable) Global.someDropableObject["object"]);
                    if (ThingsObjIndex < (Global.globalInventoryThingsArr.Count - 1))
                    {
                        TempIndex = ThingsObjIndex + 1;
                    }
                    else
                    {
                        TempIndex = ThingsObjIndex;
                    }
                    Global.StorageInventoryArr.Remove(Global.StorageInventoryArr[ThingsObjIndex]);
                    Global.globalInventoryThingsArr.Remove(Global.globalInventoryThingsArr[TempIndex]);
                    Global._isDropStart = false;
                    Global._isWeCanDragAndDrop = false;
                    Global.isMouseHold = false;
                    Global.someDropableObject = null;
                    this.c_GameController_Base_command_SortStorageInventory();
                }
                else
                {
                    if (Global._isStorageThing) //Взять со склада
                    {
                        if (((Global._isR3Backpack || Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 24)) || ((!Global._isR3Backpack || !Global._isR5Backpack) && (Global.globalInventoryThingsArr.Count < 12)))
                        {
                            if ((Global.someDropableObject["object"] as Hashtable)["type"] as string == "food")
                            {
                                if (Global.StorageInventoryArr.Count > 0)
                                {
                                    int j = 0;
                                    while (j < Global.StorageInventoryArr.Count)
                                    {
                                        if (Global.StorageInventoryArr[j]["thingname"] == (Global.someDropableObject["object"] as Hashtable)["thingname"])
                                        {
                                            Global.StorageInventoryArr[j]["val"] = (int.Parse((string) Global.StorageInventoryArr[j]["val"]) + int.Parse((string) (Global.someDropableObject["object"] as Hashtable)["val"])).ToString();
                                            break;
                                        }
                                        if (Global.StorageInventoryArr[j]["thingname"] == (Global.someDropableObject["object"] as Hashtable)["thingname"])
                                        {
                                            addFoodIndex = j + 1;
                                            addFood = true;
                                            break;
                                        }
                                        else
                                        {
                                            if (j == (Global.StorageInventoryArr.Count - 1))
                                            {
                                                Global.StorageInventoryArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage_inv" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"addhealth", (Global.someDropableObject["object"] as Hashtable)["addhealth"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                                addNewFood = true;
                                                break;
                                            }
                                        }
                                        j++;
                                    }
                                    if (addFood)
                                    {
                                        addFood = false;
                                        Global.globalInventoryThingsArr[addFoodIndex]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[addFoodIndex]["val"]) + int.Parse((string) (Global.someDropableObject["object"] as Hashtable)["val"])).ToString();
                                    }
                                    if (addNewFood)
                                    {
                                        Global.globalInventoryThingsArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "inventory" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"addhealth", (Global.someDropableObject["object"] as Hashtable)["addhealth"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                        addNewFood = false;
                                    }
                                }
                                else
                                {
                                    Global.StorageInventoryArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage_inv" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"addhealth", (Global.someDropableObject["object"] as Hashtable)["addhealth"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                    Global.globalInventoryThingsArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "inventory" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"addhealth", (Global.someDropableObject["object"] as Hashtable)["addhealth"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                }
                            }
                            else
                            {
                                if ((Global.someDropableObject["object"] as Hashtable)["type"] as string == "loot")
                                {
                                    if (Global.StorageInventoryArr.Count > 0)
                                    {
                                        int q = 0;
                                        while (q < Global.StorageInventoryArr.Count)
                                        {
                                            if (Global.StorageInventoryArr[q]["thingname"] == (Global.someDropableObject["object"] as Hashtable)["thingname"])
                                            {
                                                Global.StorageInventoryArr[q]["val"] = (int.Parse((string) Global.StorageInventoryArr[q]["val"]) + int.Parse((string) (Global.someDropableObject["object"] as Hashtable)["val"])).ToString();
                                                if (Global._userResourcesFood.ContainsKey((Global.someDropableObject["object"] as Hashtable)["thingname"]))
                                                {
                                                    (Global._userResourcesFood[(Global.someDropableObject["object"] as Hashtable)["thingname"]] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesFood[(Global.someDropableObject["object"] as Hashtable)["thingname"]] as Hashtable)["amount"]) + int.Parse((string) (Global.someDropableObject["object"] as Hashtable)["val"])).ToString();
                                                }
                                                if (Global._userResourcesCraft.ContainsKey((Global.someDropableObject["object"] as Hashtable)["thingname"]))
                                                {
                                                    (Global._userResourcesCraft[(Global.someDropableObject["object"] as Hashtable)["thingname"]] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesCraft[(Global.someDropableObject["object"] as Hashtable)["thingname"]] as Hashtable)["amount"]) + int.Parse((string) (Global.someDropableObject["object"] as Hashtable)["val"])).ToString();
                                                }
                                                break;
                                            }
                                            if (Global.StorageInventoryArr[q]["thingname"] == (Global.someDropableObject["object"] as Hashtable)["thingname"])
                                            {
                                                addLootIndex = q + 1;
                                                addLoot = true;
                                                break;
                                            }
                                            else
                                            {
                                                if (q == (Global.StorageInventoryArr.Count - 1))
                                                {
                                                    Global.StorageInventoryArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage_inv" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                                    addNewLoot = true;
                                                    break;
                                                }
                                            }
                                            q++;
                                        }
                                        if (addLoot)
                                        {
                                            addLoot = false;
                                            Global.globalInventoryThingsArr[addLootIndex]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[addLootIndex]["val"]) + int.Parse((string) (Global.someDropableObject["object"] as Hashtable)["val"])).ToString();
                                        }
                                        if (addNewLoot)
                                        {
                                            Global.globalInventoryThingsArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "inventory" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                            if (Global._userResourcesFood.ContainsKey((Global.someDropableObject["object"] as Hashtable)["thingname"]))
                                            {
                                                (Global._userResourcesFood[(Global.someDropableObject["object"] as Hashtable)["thingname"]] as Hashtable)["amount"] = (Global.someDropableObject["object"] as Hashtable)["val"];
                                            }
                                            if (Global._userResourcesCraft.ContainsKey((Global.someDropableObject["object"] as Hashtable)["thingname"]))
                                            {
                                                (Global._userResourcesCraft[(Global.someDropableObject["object"] as Hashtable)["thingname"]] as Hashtable)["amount"] = (Global.someDropableObject["object"] as Hashtable)["val"];
                                            }
                                            addNewLoot = false;
                                        }
                                        Global.globalBus.gameObject.SendMessage("c_GameController_CheckConsumables");
                                    }
                                    else
                                    {
                                        Global.StorageInventoryArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage_inv" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"addhealth", (Global.someDropableObject["object"] as Hashtable)["addhealth"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                        Global.globalInventoryThingsArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "inventory" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"val", (Global.someDropableObject["object"] as Hashtable)["val"] },  {"addhealth", (Global.someDropableObject["object"] as Hashtable)["addhealth"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                    }
                                }
                                else
                                {
                                    Global.globalInventoryThingsArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "inventory" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                    Global.StorageInventoryArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage_inv" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
                                }
                            }
                            System.Collections.Generic.List<Hashtable> StorageArrayTemp = Global.StorageArr;
                            int StorageObjIndex = StorageArrayTemp.IndexOf((Hashtable) Global.someDropableObject["object"]);
                            Global.StorageArr.Remove(Global.StorageArr[StorageObjIndex]);
                            Global._isDropStart = false;
                            Global._isWeCanDragAndDrop = false;
                            Global.isMouseHold = false;
                            Global.someDropableObject = null;
                            this.c_GameController_Base_command_SortStorageInventory();
                        }
                        else
                        {
                            Global._gui_AddInterface("InventoryFullPopUp");
                        }
                    }
                }
            }
        }
        if (Global._isInventoryThing)
        {
            if (!(Global.someDropableObject == null))
            {
                if ((Global.someDropableObject["type"] as string == "food") 
                    || ((Global.someDropableObject["type"] as string == "loot") 
                    && (Global.someDropableObject["thingname"] as string == "food_milk")))
                {
                    GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string202, this.gs_font.font_28daysletter_60_cb_blue);
                }
                else
                {
                    GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string202, this.gs_font.font_28daysletter_60_cb_blue);
                }
            }
            else
            {
                GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string202, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        else
        {
            if (Global._isDummyThing)
            {
                GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string202, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        GUI.EndGroup();
    }

    private void drawStorage(System.Collections.Generic.List<Hashtable> inArr, bool isThings)
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) + (102 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 670 * Global.guiRatio, 670 * Global.guiRatio));
        foreach (Hashtable oneThingInv in inArr)
        {
            Rect iconThingRect = new Rect((int.Parse((string) oneThingInv["x"]) * 170) * Global.guiRatio, (int.Parse((string) oneThingInv["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio);
            if ((Global.someDropableObject == null) || (!(Global.someDropableObject == null) && !(Global.someDropableObject["uniqueID"] == oneThingInv["vid"])))
            {
                GUI.BeginGroup(iconThingRect);
                if (!(Global.someDropableObject == null))
                {
                    if (Global.someDropableObject["uniqueID"] == oneThingInv["uniqueID"])
                    {
                        if (!Global.isMouseHold)
                        {
                            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        }
                    }
                    else
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                        {
                            GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                        }
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                    {
                        GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                    }
                }
                GUI.EndGroup();
            }
            if (Global.someDropableObject == null)
            {
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) + (102 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (372 * Global.guiRatio));
                if (this.isPointInRect(iconThingRect, Global.gmPos))
                {
                    if (Input.GetMouseButtonDown(0) && !Global._isWeCanDragAndDrop)
                    {
                        Global._isWeCanDragAndDrop = true;
                        Global.lastMouseDownObjectForDrag = Time.realtimeSinceStartup;
                    }
                    else
                    {
                        if (Input.GetMouseButton(0) && Global._isWeCanDragAndDrop)
                        {
                            Global._isStorageThing = true;
                            Global._isInventoryThing = false;
                            Hashtable someDropableObjectHash = this.getDropHashtableForStorage(oneThingInv);
                            someDropableObjectHash["fromdrag"] = "storage";
                            Global.someDropableObject = someDropableObjectHash;
                        }
                    }
                    if (Input.GetMouseButtonUp(0) && Global._isWeCanDragAndDrop)
                    {
                        Global.isMouseHold = false;
                    }
                }
            }
            if (!(Global.someDropableObject == null))
            {
                if (Global._isStorageThing)
                {
                    GUI.Box(new Rect((int.Parse((string) Global.someDropableObject["x"]) * 170) * Global.guiRatio, (int.Parse((string) Global.someDropableObject["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) + (102 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (372 * Global.guiRatio));
                if (this.isPointInRect(iconThingRect, Global.gmPos))
                {
                    if (Input.GetMouseButtonDown(0) && !Global._isWeCanDragAndDrop)
                    {
                        Global._isStorageThing = true;
                        Global._isInventoryThing = false;
                        someDropableObjectHash = this.getDropHashtableForStorage(oneThingInv);
                        Global.someDropableObject = someDropableObjectHash;
                        Global._isWeCanDragAndDrop = true;
                        Global.lastMouseDownObjectForDrag = Time.realtimeSinceStartup;
                    }
                    else
                    {
                        if ((Input.GetMouseButton(0) && Global._isWeCanDragAndDrop) && ((Time.realtimeSinceStartup - Global.lastMouseDownObjectForDrag) > 0.2f))
                        {
                            Global.isMouseHold = true;
                        }
                    }
                    if (Input.GetMouseButtonUp(0) && Global._isWeCanDragAndDrop)
                    {
                        Global._isWeCanDragAndDrop = false;
                        Global.isMouseHold = false;
                    }
                }
            }
        }
        GUI.EndGroup();
    }

    public virtual void gui_VillaScreen() //Интерфейс виллы
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_villa_background);
        if (!Global._isHOG1Complete)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (71 * Global.guiRatio), (Screen.height / 2) - (144 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
            {
                Global._gui_SetInterface("HOG1GameScreen");
            }
        }
        if (!Global._isHOG2Complete)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (281 * Global.guiRatio), (Screen.height / 2) - (144 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
            {
                Global._gui_SetInterface("HOG2GameScreen");
            }
        }
        if (!Global._isHOG3Complete)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (676 * Global.guiRatio), (Screen.height / 2) - (197 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
            {
                Global._gui_SetInterface("HOG3GameScreen");
            }
        }
        if (GUI.Button(new Rect((Screen.width / 2) - (351 * Global.guiRatio), (Screen.height / 2) - (304 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
        {
            Global._gui_AddInterface("NoWayPopUp");
        }
        if (GUI.Button(new Rect((Screen.width / 2) + (89 * Global.guiRatio), (Screen.height / 2) - (421 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
        {
            Global._gui_AddInterface("NoWayPopUp");
        }
        if (GUI.Button(new Rect((Screen.width / 2) - (569 * Global.guiRatio), (Screen.height / 2) + (29 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
        {
            Global._gui_AddInterface("NoWayPopUp");
        }
        if (GUI.Button(new Rect((Screen.width / 2) - (288 * Global.guiRatio), (Screen.height / 2) - (51 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
        {
            Global._gui_AddInterface("NoWayPopUp");
        }
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_villa_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string132, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        if (GUI.Button(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo))
        {
            Global._gui_CloseAllInterfaces();
            Global._isRecipeFoodSelect = false;
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_MuseumScreen() //Музей
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_library_background);
        if (GUI.Button(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isUFOScreen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("ShipScreen");
        }
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        //Экспонат 1
        if ((Global._userMuseum["museum_exhibit01"] as Hashtable)["teach"] as string == "false")
        {
            if ((Global._userMuseum["museum_exhibit01"] as Hashtable)["select"] as string == "true")
            {
                GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_museum_unknown);
                GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
            }
            else
            {
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_museum_unknown))
                {
                    (Global._userMuseum["museum_exhibit01"] as Hashtable)["select"] = "true";
                    (Global._userMuseum["museum_exhibit02"] as Hashtable)["select"] = "false";
                }
            }
        }
        else
        {
            if ((Global._userMuseum["museum_exhibit01"] as Hashtable)["select"] as string == "true")
            {
                GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_museum_icon_virt);
                GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
            }
            else
            {
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_museum_icon_virt))
                {
                    (Global._userMuseum["museum_exhibit01"] as Hashtable)["select"] = "true";
                    (Global._userMuseum["museum_exhibit02"] as Hashtable)["select"] = "false";
                }
            }
        }
        //Экспонат 2
        if ((Global._userMuseum["museum_exhibit02"] as Hashtable)["teach"] as string == "false")
        {
            if ((Global._userMuseum["museum_exhibit02"] as Hashtable)["select"] as string == "true")
            {
                GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_museum_unknown);
                GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
            }
            else
            {
                if (GUI.Button(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_museum_unknown))
                {
                    (Global._userMuseum["museum_exhibit01"] as Hashtable)["select"] = "false";
                    (Global._userMuseum["museum_exhibit02"] as Hashtable)["select"] = "true";
                }
            }
        }
        else
        {
            if ((Global._userMuseum["museum_exhibit02"] as Hashtable)["select"] as string == "true")
            {
                GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_museum_icon_ammonit);
                GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
            }
            else
            {
                if (GUI.Button(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_museum_icon_ammonit))
                {
                    (Global._userMuseum["museum_exhibit01"] as Hashtable)["select"] = "false";
                    (Global._userMuseum["museum_exhibit02"] as Hashtable)["select"] = "true";
                }
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(943 * Global.guiRatio, 133 * Global.guiRatio, 733 * Global.guiRatio, 668 * Global.guiRatio));
        //Экспонат 1
        if (((Global._userMuseum["museum_exhibit01"] as Hashtable)["select"] as string == "true")
            && ((Global._userMuseum["museum_exhibit01"] as Hashtable)["teach"] as string == "true"))
        {
            GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userMuseum["museum_exhibit01"] as Hashtable)["titleimage"]);
            GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userMuseum["museum_exhibit01"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
            GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userMuseum["museum_exhibit01"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
            if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                if (!Global._isLearnZoeStory)
                {
                    Global.speakerGO = GameObject.Find("_zoeSpeaker");
                    Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
                    Global._playDialogue(Global.audio_player.zoe_dlg_008);
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("GirlDialogue15");
                }
                else
                {
                    Global.speakerGO = GameObject.Find("_zoeSpeaker");
                    Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
                    Global._playDialogue(Global.audio_player.zoe_dlg_011);
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("GirlDialogue16");
                }
            }
            GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string175, this.gs_font.font_28daysletter_60_cb_blue);
        }
        else
        {
            if (((Global._userMuseum["museum_exhibit01"] as Hashtable)["select"] as string == "true")
                && ((Global._userMuseum["museum_exhibit01"] as Hashtable)["teach"] as string == "false"))
            {
                GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), Strings.string136, this.gs_font.font_b52_36_c_white);
            }
        }
        //Экспонат 2
        if (((Global._userMuseum["museum_exhibit02"] as Hashtable)["select"] as string == "true")
            && ((Global._userMuseum["museum_exhibit02"] as Hashtable)["teach"] as string == "true"))
        {
            GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userMuseum["museum_exhibit02"] as Hashtable)["titleimage"]);
            GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userMuseum["museum_exhibit02"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
            GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userMuseum["museum_exhibit02"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
        }
        else
        {
            if (((Global._userMuseum["museum_exhibit02"] as Hashtable)["select"] as string == "true")
                && ((Global._userMuseum["museum_exhibit02"] as Hashtable)["teach"] as string == "false"))
            {
                GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), Strings.string136, this.gs_font.font_b52_36_c_white);
            }
        }
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_museum_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string137, this.gs_font.font_28daysletter_79_lb_blue);
        if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map))
        {
             //Карта мира
            if (Global._isTutorial22 && !Global._isTutorial25)
            {
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            else
            {
                if (Global._isTutorialUFOStorageComplete && !Global._isTutorialGoToGreenHouseAgain)
                {
                    Global._stopSoundDialogue();
                    this.StopCoroutine("DialogueEnd");
                    this.StopDialogue();
                    Global._isClickDialogue = true;
                    Global._playDialogue(Global.audio_player.sectoid_dlg_026);
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("TutorialDialogue27");
                }
                else
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = false;
                    Global.UFOShowEntry = true;
                    Global._isUFOScreen = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                    Global._gui_SetInterface("WorldMap");
                }
            }
        }
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory))
        {
             //Экран персонажа
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global._isInventoryOpen = true;
            //Global._isWorldMap = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            Global._gui_SetInterface("CharacterScreen");
            this.c_GameController_Base_command_SortThings();
        }
        if (GUI.Button(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit))
        {
             //Выход
            Global._isPopUpOpen = true;
            Global._gui_AddInterface("MenuPopUp");
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    // === mini games ===
    public virtual void gui_MushroomGameScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_minigame_background);
        Global.GUILabelStroke2(new Rect(0, 50 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Strings.string016, this.gs_font.font_calibri_95_cb_s, this.gs_font.font_calibri_95_cb_blue);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (904 * Global.guiRatio), (Screen.height / 2) - (300 * Global.guiRatio), 1808 * Global.guiRatio, 576 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_slot);
        GUI.Box(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_slot);
        GUI.Box(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_slot);
        GUI.Box(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_slot);
        if (this.mushroom1_index == 1)
        {
            if (GUI.Button(new Rect(0, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
            {
                Global._gui_AddInterface("MushroomGameWinPopUp");
            }
            if (this.mushroom2_index == 2)
            {
                if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                {
                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                    this.poisonMushroomName = Strings.string020;
                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                }
                if (this.mushroom3_index == 3)
                {
                    if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                    {
                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                        this.poisonMushroomName = Strings.string021;
                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                    }
                    if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                    {
                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                        this.poisonMushroomName = Strings.string022;
                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                    }
                }
                else
                {
                    if (this.mushroom3_index == 4)
                    {
                        if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                            this.poisonMushroomName = Strings.string022;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                        if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                            this.poisonMushroomName = Strings.string021;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                    }
                }
            }
            else
            {
                if (this.mushroom2_index == 3)
                {
                    if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                    {
                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                        this.poisonMushroomName = Strings.string021;
                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                    }
                    if (this.mushroom3_index == 2)
                    {
                        if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                            this.poisonMushroomName = Strings.string020;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                        if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                            this.poisonMushroomName = Strings.string022;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                    }
                    else
                    {
                        if (this.mushroom3_index == 4)
                        {
                            if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                this.poisonMushroomName = Strings.string022;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                            if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                this.poisonMushroomName = Strings.string020;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                        }
                    }
                }
                else
                {
                    if (this.mushroom2_index == 4)
                    {
                        if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                            this.poisonMushroomName = Strings.string022;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                        if (this.mushroom3_index == 2)
                        {
                            if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                this.poisonMushroomName = Strings.string020;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                            if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                this.poisonMushroomName = Strings.string021;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                        }
                        else
                        {
                            if (this.mushroom3_index == 3)
                            {
                                if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                    this.poisonMushroomName = Strings.string021;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                                if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                    this.poisonMushroomName = Strings.string020;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                            }
                        }
                    }
                }
            }
        }
        else
        {
            //**********************
            if (this.mushroom1_index == 2)
            {
                if (GUI.Button(new Rect(0, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                {
                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                    this.poisonMushroomName = Strings.string020;
                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                }
                if (this.mushroom2_index == 1)
                {
                    if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                    {
                        Global._gui_AddInterface("MushroomGameWinPopUp");
                    }
                    if (this.mushroom3_index == 3)
                    {
                        if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                            this.poisonMushroomName = Strings.string021;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                        if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                            this.poisonMushroomName = Strings.string022;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                    }
                    else
                    {
                        if (this.mushroom3_index == 4)
                        {
                            if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                this.poisonMushroomName = Strings.string022;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                            if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                this.poisonMushroomName = Strings.string021;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                        }
                    }
                }
                else
                {
                    if (this.mushroom2_index == 3)
                    {
                        if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                            this.poisonMushroomName = Strings.string021;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                        if (this.mushroom3_index == 1)
                        {
                            if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                            {
                                Global._gui_AddInterface("MushroomGameWinPopUp");
                            }
                            if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                this.poisonMushroomName = Strings.string022;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                        }
                        else
                        {
                            if (this.mushroom3_index == 4)
                            {
                                if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                    this.poisonMushroomName = Strings.string022;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                                if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                {
                                    Global._gui_AddInterface("MushroomGameWinPopUp");
                                }
                            }
                        }
                    }
                    else
                    {
                        if (this.mushroom2_index == 4)
                        {
                            if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                this.poisonMushroomName = Strings.string022;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                            if (this.mushroom3_index == 1)
                            {
                                if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                {
                                    Global._gui_AddInterface("MushroomGameWinPopUp");
                                }
                                if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                    this.poisonMushroomName = Strings.string021;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                            }
                            else
                            {
                                if (this.mushroom3_index == 3)
                                {
                                    if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                                    {
                                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                        this.poisonMushroomName = Strings.string021;
                                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                                    }
                                    if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                    {
                                        Global._gui_AddInterface("MushroomGameWinPopUp");
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                //**********************
                if (this.mushroom1_index == 3)
                {
                    if (GUI.Button(new Rect(0, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                    {
                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                        this.poisonMushroomName = Strings.string021;
                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                    }
                    if (this.mushroom2_index == 1)
                    {
                        if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                        {
                            Global._gui_AddInterface("MushroomGameWinPopUp");
                        }
                        if (this.mushroom3_index == 2)
                        {
                            if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                this.poisonMushroomName = Strings.string020;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                            if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                this.poisonMushroomName = Strings.string022;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                        }
                        else
                        {
                            if (this.mushroom3_index == 4)
                            {
                                if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                    this.poisonMushroomName = Strings.string022;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                                if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                    this.poisonMushroomName = Strings.string020;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                            }
                        }
                    }
                    else
                    {
                        if (this.mushroom2_index == 2)
                        {
                            if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                            {
                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                this.poisonMushroomName = Strings.string020;
                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                            }
                            if (this.mushroom3_index == 1)
                            {
                                if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                {
                                    Global._gui_AddInterface("MushroomGameWinPopUp");
                                }
                                if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                    this.poisonMushroomName = Strings.string022;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                            }
                            else
                            {
                                if (this.mushroom3_index == 4)
                                {
                                    if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                                    {
                                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                        this.poisonMushroomName = Strings.string022;
                                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                                    }
                                    if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                    {
                                        Global._gui_AddInterface("MushroomGameWinPopUp");
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (this.mushroom2_index == 4)
                            {
                                if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                                    this.poisonMushroomName = Strings.string022;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                                if (this.mushroom3_index == 1)
                                {
                                    if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                    {
                                        Global._gui_AddInterface("MushroomGameWinPopUp");
                                    }
                                    if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                    {
                                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                        this.poisonMushroomName = Strings.string020;
                                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                                    }
                                }
                                else
                                {
                                    if (this.mushroom3_index == 2)
                                    {
                                        if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                        {
                                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                            this.poisonMushroomName = Strings.string020;
                                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                                        }
                                        if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                        {
                                            Global._gui_AddInterface("MushroomGameWinPopUp");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    //**********************
                    if (this.mushroom1_index == 4)
                    {
                        if (GUI.Button(new Rect(0, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_04))
                        {
                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_04_icon;
                            this.poisonMushroomName = Strings.string022;
                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                        }
                        if (this.mushroom2_index == 1)
                        {
                            if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                            {
                                Global._gui_AddInterface("MushroomGameWinPopUp");
                            }
                            if (this.mushroom3_index == 2)
                            {
                                if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                    this.poisonMushroomName = Strings.string020;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                                if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                    this.poisonMushroomName = Strings.string021;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                            }
                            else
                            {
                                if (this.mushroom3_index == 3)
                                {
                                    if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                                    {
                                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                        this.poisonMushroomName = Strings.string021;
                                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                                    }
                                    if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                    {
                                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                        this.poisonMushroomName = Strings.string020;
                                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (this.mushroom2_index == 2)
                            {
                                if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                {
                                    this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                    this.poisonMushroomName = Strings.string020;
                                    Global._gui_AddInterface("MushroomGameLoosePopUp");
                                }
                                if (this.mushroom3_index == 1)
                                {
                                    if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                    {
                                        Global._gui_AddInterface("MushroomGameWinPopUp");
                                    }
                                    if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                                    {
                                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                        this.poisonMushroomName = Strings.string021;
                                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                                    }
                                }
                                else
                                {
                                    if (this.mushroom3_index == 3)
                                    {
                                        if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                                        {
                                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                            this.poisonMushroomName = Strings.string021;
                                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                                        }
                                        if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                        {
                                            Global._gui_AddInterface("MushroomGameWinPopUp");
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (this.mushroom2_index == 3)
                                {
                                    if (GUI.Button(new Rect(452 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_03))
                                    {
                                        this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_03_icon;
                                        this.poisonMushroomName = Strings.string021;
                                        Global._gui_AddInterface("MushroomGameLoosePopUp");
                                    }
                                    if (this.mushroom3_index == 1)
                                    {
                                        if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                        {
                                            Global._gui_AddInterface("MushroomGameWinPopUp");
                                        }
                                        if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                        {
                                            this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                            this.poisonMushroomName = Strings.string020;
                                            Global._gui_AddInterface("MushroomGameLoosePopUp");
                                        }
                                    }
                                    else
                                    {
                                        if (this.mushroom3_index == 2)
                                        {
                                            if (GUI.Button(new Rect(902 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_02))
                                            {
                                                this.poisonMushroomIcon = this.gs_common.gui_minigame_mushroom_02_icon;
                                                this.poisonMushroomName = Strings.string020;
                                                Global._gui_AddInterface("MushroomGameLoosePopUp");
                                            }
                                            if (GUI.Button(new Rect(1354 * Global.guiRatio, 0, 454 * Global.guiRatio, 576 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01))
                                            {
                                                Global._gui_AddInterface("MushroomGameWinPopUp");
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void generateMushrooms()
    {
        if (this.mushroom1_index == 0)
        {
            this.mushroom1_index = Random.Range(1, 4);
        }
        if (!this._isMushroomGenerate)
        {
            this._isMushroomGenerate = true;
            if (this.mushroom1_index == 1)
            {
                this.validChoices = new int[] {2, 3, 4};
                this.mushroom2_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                if (this.mushroom2_index == 2)
                {
                    this.validChoices = new int[] {3, 4};
                    this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                    if (this.mushroom3_index == 3)
                    {
                        this.mushroom4_index = 4;
                    }
                    else
                    {
                        if (this.mushroom3_index == 4)
                        {
                            this.mushroom4_index = 3;
                        }
                    }
                }
                else
                {
                    if (this.mushroom2_index == 3)
                    {
                        this.validChoices = new int[] {2, 4};
                        this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                        if (this.mushroom3_index == 2)
                        {
                            this.mushroom4_index = 4;
                        }
                        else
                        {
                            if (this.mushroom3_index == 4)
                            {
                                this.mushroom4_index = 2;
                            }
                        }
                    }
                    else
                    {
                        if (this.mushroom2_index == 4)
                        {
                            this.validChoices = new int[] {2, 3};
                            this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                            if (this.mushroom3_index == 2)
                            {
                                this.mushroom4_index = 3;
                            }
                            else
                            {
                                if (this.mushroom3_index == 3)
                                {
                                    this.mushroom4_index = 2;
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                //**********************
                if (this.mushroom1_index == 2)
                {
                    this.validChoices = new int[] {1, 3, 4};
                    this.mushroom2_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                    if (this.mushroom2_index == 1)
                    {
                        this.validChoices = new int[] {3, 4};
                        this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                        if (this.mushroom3_index == 3)
                        {
                            this.mushroom4_index = 4;
                        }
                        else
                        {
                            if (this.mushroom3_index == 4)
                            {
                                this.mushroom4_index = 3;
                            }
                        }
                    }
                    else
                    {
                        if (this.mushroom2_index == 3)
                        {
                            this.validChoices = new int[] {1, 4};
                            this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                            if (this.mushroom3_index == 1)
                            {
                                this.mushroom4_index = 4;
                            }
                            else
                            {
                                if (this.mushroom3_index == 4)
                                {
                                    this.mushroom4_index = 1;
                                }
                            }
                        }
                        else
                        {
                            if (this.mushroom2_index == 4)
                            {
                                this.validChoices = new int[] {1, 3};
                                this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                                if (this.mushroom3_index == 1)
                                {
                                    this.mushroom4_index = 3;
                                }
                                else
                                {
                                    if (this.mushroom3_index == 3)
                                    {
                                        this.mushroom4_index = 1;
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    //**********************
                    if (this.mushroom1_index == 3)
                    {
                        this.validChoices = new int[] {1, 2, 4};
                        this.mushroom2_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                        if (this.mushroom2_index == 1)
                        {
                            this.validChoices = new int[] {2, 4};
                            this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                            if (this.mushroom3_index == 2)
                            {
                                this.mushroom4_index = 4;
                            }
                            else
                            {
                                if (this.mushroom3_index == 4)
                                {
                                    this.mushroom4_index = 2;
                                }
                            }
                        }
                        else
                        {
                            if (this.mushroom2_index == 2)
                            {
                                this.validChoices = new int[] {1, 4};
                                this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                                if (this.mushroom3_index == 1)
                                {
                                    this.mushroom4_index = 4;
                                }
                                else
                                {
                                    if (this.mushroom3_index == 4)
                                    {
                                        this.mushroom4_index = 1;
                                    }
                                }
                            }
                            else
                            {
                                if (this.mushroom2_index == 4)
                                {
                                    this.validChoices = new int[] {1, 2};
                                    this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                                    if (this.mushroom3_index == 1)
                                    {
                                        this.mushroom4_index = 2;
                                    }
                                    else
                                    {
                                        if (this.mushroom3_index == 2)
                                        {
                                            this.mushroom4_index = 1;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        //**********************
                        if (this.mushroom1_index == 4)
                        {
                            this.validChoices = new int[] {1, 2, 3};
                            this.mushroom2_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                            if (this.mushroom2_index == 1)
                            {
                                this.validChoices = new int[] {2, 3};
                                this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                                if (this.mushroom3_index == 2)
                                {
                                    this.mushroom4_index = 3;
                                }
                                else
                                {
                                    if (this.mushroom3_index == 3)
                                    {
                                        this.mushroom4_index = 2;
                                    }
                                }
                            }
                            else
                            {
                                if (this.mushroom2_index == 2)
                                {
                                    this.validChoices = new int[] {1, 3};
                                    this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                                    if (this.mushroom3_index == 1)
                                    {
                                        this.mushroom4_index = 3;
                                    }
                                    else
                                    {
                                        if (this.mushroom3_index == 3)
                                        {
                                            this.mushroom4_index = 1;
                                        }
                                    }
                                }
                                else
                                {
                                    if (this.mushroom2_index == 3)
                                    {
                                        this.validChoices = new int[] {1, 2};
                                        this.mushroom3_index = this.validChoices[Random.Range(0, this.validChoices.Length)];
                                        if (this.mushroom3_index == 1)
                                        {
                                            this.mushroom4_index = 2;
                                        }
                                        else
                                        {
                                            if (this.mushroom3_index == 2)
                                            {
                                                this.mushroom4_index = 1;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public virtual void gui_FishingGameScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_fishing_background);
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_fishing_frame);
        GUI.Box(new Rect((Screen.width / 2) - (899 * Global.guiRatio), (Screen.height / 2) - (489 * Global.guiRatio), 177 * Global.guiRatio, 91 * Global.guiRatio), "", this.gs_common.gui_fishing_counter);
        GUI.Box(new Rect((Screen.width / 2) - (903 * Global.guiRatio), (Screen.height / 2) - (489 * Global.guiRatio), 73 * Global.guiRatio, 94 * Global.guiRatio), "", this.gs_common.gui_fishing_worm);
        Global.GUILabelStroke(new Rect((Screen.width / 2) - (830 * Global.guiRatio), (Screen.height / 2) - (466 * Global.guiRatio), 99 * Global.guiRatio, 60 * Global.guiRatio), Global._paramHeroWorms.ToString(), this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_white);
        if (this._isRod1Select)
        {
            GUI.Box(new Rect((Screen.width / 2) - (926 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_1_select);
            if (GUI.Button(new Rect((Screen.width / 2) - (708 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_2))
            {
                this.fishRandomChance = this.fishRandomChanceOriginal + Random.Range(0, 10);
                this._isRod1Select = false;
                this._isRod2Select = true;
                this._isRod3Select = false;
            }
            if (GUI.Button(new Rect((Screen.width / 2) - (490 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_3))
            {
                this.fishRandomChance = this.fishRandomChanceOriginal + Random.Range(0, 15);
                this._isRod1Select = false;
                this._isRod2Select = false;
                this._isRod3Select = true;
            }
        }
        if (this._isRod2Select)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (926 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_1))
            {
                this.fishRandomChance = this.fishRandomChanceOriginal + Random.Range(0, 5);
                this._isRod1Select = true;
                this._isRod2Select = false;
                this._isRod3Select = false;
            }
            GUI.Box(new Rect((Screen.width / 2) - (708 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_2_select);
            if (GUI.Button(new Rect((Screen.width / 2) - (490 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_3))
            {
                this.fishRandomChance = this.fishRandomChanceOriginal + Random.Range(0, 15);
                this._isRod1Select = false;
                this._isRod2Select = false;
                this._isRod3Select = true;
            }
        }
        if (this._isRod3Select)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (926 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_1))
            {
                this.fishRandomChance = this.fishRandomChanceOriginal + Random.Range(0, 5);
                this._isRod1Select = true;
                this._isRod2Select = false;
                this._isRod3Select = false;
            }
            if (GUI.Button(new Rect((Screen.width / 2) - (708 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_2))
            {
                this.fishRandomChance = this.fishRandomChanceOriginal + Random.Range(0, 10);
                this._isRod1Select = false;
                this._isRod2Select = true;
                this._isRod3Select = false;
            }
            GUI.Box(new Rect((Screen.width / 2) - (490 * Global.guiRatio), Screen.height - (370 * Global.guiRatio), 215 * Global.guiRatio, 347 * Global.guiRatio), "", this.gs_common.gui_fishing_rod_3_select);
        }
        if (this._isFisherman)
        {
            GUI.BeginGroup(new Rect((Screen.width / 2) - (this.fishRandomX * Global.guiRatio), (Screen.height / 2) - (this.fishRandomY * Global.guiRatio), 256 * Global.guiRatio, 342 * Global.guiRatio));
            if (this.fishRandomIndex == 1)
            {
                if (this._isFisherman1)
                {
                    this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 174 * Global.guiRatio), this.gs_common.gui_fish01_start.normal.background, 9, 2, 0.15f, this.someVectorFish, true);
                }
                if (this._isFisherman2)
                {
                    GUI.Box(new Rect(0, 0, 70 * Global.guiRatio, 168 * Global.guiRatio), "", this.gs_common.gui_fishing_hook);
                    GUI.Label(new Rect(80 * Global.guiRatio, 34 * Global.guiRatio, 175 * Global.guiRatio, 95 * Global.guiRatio), this.fishRandomChance.ToString() + "%", this.gs_font.font_calibri_95_cb_red);
                    this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 174 * Global.guiRatio), this.gs_common.gui_fish01_idle.normal.background, 28, 8, 0.15f, this.someVectorFish, false);
                    if (GUI.Button(new Rect(0, 0, 256 * Global.guiRatio, 342 * Global.guiRatio), "", this.gs_common.emptystyle))
                    {
                        if (Global._paramHeroWorms > 0)
                        {
                            Global._paramHeroWorms = Global._paramHeroWorms - 1;
                            if (this.fishMyChance <= this.fishRandomChance)
                            {
                                Global._gui_AddInterface("FishingGameWinPopUp");
                            }
                            else
                            {
                                Global._gui_AddInterface("FishingGameLoosePopUp");
                            }
                        }
                        else
                        {
                        }
                    }
                }
                 //NO WORMS!
                if (this._isFisherman3)
                {
                    this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 174 * Global.guiRatio), this.gs_common.gui_fish01_end.normal.background, 12, 8, 0.15f, this.someVectorFish, true);
                }
            }
            else
            {
                if (this.fishRandomIndex == 2)
                {
                    if (this._isFisherman1)
                    {
                        this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 161 * Global.guiRatio), this.gs_common.gui_fish02_start.normal.background, 9, 4, 0.15f, this.someVectorFish, true);
                    }
                    if (this._isFisherman2)
                    {
                        GUI.Box(new Rect(0, 0, 70 * Global.guiRatio, 168 * Global.guiRatio), "", this.gs_common.gui_fishing_hook);
                        GUI.Label(new Rect(80 * Global.guiRatio, 34 * Global.guiRatio, 175 * Global.guiRatio, 95 * Global.guiRatio), this.fishRandomChance.ToString() + "%", this.gs_font.font_calibri_95_cb_red);
                        this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 161 * Global.guiRatio), this.gs_common.gui_fish02_idle.normal.background, 28, 8, 0.15f, this.someVectorFish, false);
                        if (GUI.Button(new Rect(0, 0, 256 * Global.guiRatio, 342 * Global.guiRatio), "", this.gs_common.emptystyle))
                        {
                            if (Global._paramHeroWorms > 0)
                            {
                                Global._paramHeroWorms = Global._paramHeroWorms - 1;
                                if (this.fishMyChance <= this.fishRandomChance)
                                {
                                    Global._gui_AddInterface("FishingGameWinPopUp");
                                }
                                else
                                {
                                    Global._gui_AddInterface("FishingGameLoosePopUp");
                                }
                            }
                            else
                            {
                            }
                        }
                    }
                     //NO WORMS!
                    if (this._isFisherman3)
                    {
                        this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 161 * Global.guiRatio), this.gs_common.gui_fish01_end.normal.background, 11, 4, 0.15f, this.someVectorFish, true);
                    }
                }
                else
                {
                    if (this.fishRandomIndex == 3)
                    {
                        if (this._isFisherman1)
                        {
                            this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 154 * Global.guiRatio), this.gs_common.gui_fish03_start.normal.background, 9, 4, 0.15f, this.someVectorFish, true);
                        }
                        if (this._isFisherman2)
                        {
                            GUI.Box(new Rect(0, 0, 70 * Global.guiRatio, 168 * Global.guiRatio), "", this.gs_common.gui_fishing_hook);
                            GUI.Label(new Rect(80 * Global.guiRatio, 34 * Global.guiRatio, 175 * Global.guiRatio, 95 * Global.guiRatio), this.fishRandomChance.ToString() + "%", this.gs_font.font_calibri_95_cb_red);
                            this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 154 * Global.guiRatio), this.gs_common.gui_fish03_idle.normal.background, 28, 8, 0.15f, this.someVectorFish, false);
                            if (GUI.Button(new Rect(0, 0, 256 * Global.guiRatio, 342 * Global.guiRatio), "", this.gs_common.emptystyle))
                            {
                                if (Global._paramHeroWorms > 0)
                                {
                                    Global._paramHeroWorms = Global._paramHeroWorms - 1;
                                    if (this.fishMyChance <= this.fishRandomChance)
                                    {
                                        Global._gui_AddInterface("FishingGameWinPopUp");
                                    }
                                    else
                                    {
                                        Global._gui_AddInterface("FishingGameLoosePopUp");
                                    }
                                }
                                else
                                {
                                }
                            }
                        }
                         //NO WORMS!
                        if (this._isFisherman3)
                        {
                            this.someVectorFish = Global.GUIAniTexture(new Rect(0, 168 * Global.guiRatio, 256 * Global.guiRatio, 154 * Global.guiRatio), this.gs_common.gui_fish03_end.normal.background, 12, 4, 0.15f, this.someVectorFish, true);
                        }
                    }
                }
            }
            GUI.EndGroup();
        }
        else
        {
            this.StartCoroutine(this.generateFish());
        }
        if (GUI.Button(new Rect(Screen.width - (91 * Global.guiRatio), (Screen.height / 2) - (501 * Global.guiRatio), 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseAllInterfaces();
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
            Global._isPopUpOpen = false;
            //Global._isWorldMap = true;
            Global.UFOShowEntry = true;
            Global._isUFOScreen = false;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
    }

    public virtual IEnumerator generateFish()
    {
         //for (var i:float = 0; i < fishCooldown; i++)
         //{
         /*if (_isFisherman)
        {
            GUI.Box(Rect(0, 0, 200*Global.guiRatio, 200*Global.guiRatio), "", gs_common.gui_test_button);
        }*/
        this._isFisherman = true;
        this._isFisherman1 = true;
        yield return new WaitForSeconds(0.63f);
        this._isFisherman1 = false;
        this._isFisherman2 = true;
        yield return new WaitForSeconds(2);
        this._isFisherman2 = false;
        this._isFisherman3 = true;
        yield return new WaitForSeconds(0.63f);
        this._isFisherman3 = false;
        yield return new WaitForSeconds(5);
        this.someVectorFish = new Vector2(0, 0);
        this.fishRandomX = Random.Range(-660, 860);
        this.fishRandomY = Random.Range(0, 322);
        this.fishRandomChanceOriginal = Random.Range(0, 80);
        this.fishRandomChance = this.fishRandomChanceOriginal;
        this.fishMyChance = Random.Range(45, 55);
        this.fishRandomIndex = Random.Range(1, 4);
        this._isFisherman = false;
    }

    // *********************************** ИГРЫ ПРО ОВОЩИ **************************************** //
    public virtual void gui_VegetablesGameScreen()
    {
        if (Global._isVeGame01)
        {
            Global.VeGameTitle = Strings.string104;
            Global.VeGameVegetable_01 = this.gs_common.gui_minigame_vegetable_01;
            Global.VeGameVegetable_01_icon = this.gs_common.gui_minigame_vegetable_01_icon;
            Global.VeGameVegetable_02 = this.gs_common.gui_minigame_vegetable_02;
            Global.VeGameVegetable_02_icon = this.gs_common.gui_minigame_vegetable_02_icon;
            Global.VeGameVegetable_03 = this.gs_common.gui_minigame_vegetable_03;
            Global.VeGameVegetable_03_icon = this.gs_common.gui_minigame_vegetable_03_icon;
        }
        else
        {
            if (Global._isVeGame02)
            {
                Global.VeGameTitle = Strings.string113;
                Global.VeGameVegetable_01 = this.gs_common.gui_minigame_vegetable_04;
                Global.VeGameVegetable_01_icon = this.gs_common.gui_minigame_vegetable_04_icon;
                Global.VeGameVegetable_02 = this.gs_common.gui_minigame_vegetable_05;
                Global.VeGameVegetable_02_icon = this.gs_common.gui_minigame_vegetable_05_icon;
                Global.VeGameVegetable_03 = this.gs_common.gui_minigame_vegetable_06;
                Global.VeGameVegetable_03_icon = this.gs_common.gui_minigame_vegetable_06_icon;
            }
            else
            {
                if (Global._isVeGame03)
                {
                    Global.VeGameTitle = Strings.string114;
                    Global.VeGameVegetable_01 = this.gs_common.gui_minigame_vegetable_06;
                    Global.VeGameVegetable_01_icon = this.gs_common.gui_minigame_vegetable_06_icon;
                    Global.VeGameVegetable_02 = this.gs_common.gui_minigame_vegetable_07;
                    Global.VeGameVegetable_02_icon = this.gs_common.gui_minigame_vegetable_07_icon;
                    Global.VeGameVegetable_03 = this.gs_common.gui_minigame_vegetable_03;
                    Global.VeGameVegetable_03_icon = this.gs_common.gui_minigame_vegetable_03_icon;
                }
                else
                {
                    if (Global._isVeGame04)
                    {
                        Global.VeGameTitle = Strings.string115;
                        Global.VeGameVegetable_01 = this.gs_common.gui_minigame_vegetable_08;
                        Global.VeGameVegetable_01_icon = this.gs_common.gui_minigame_vegetable_08_icon;
                        Global.VeGameVegetable_02 = this.gs_common.gui_minigame_vegetable_09;
                        Global.VeGameVegetable_02_icon = this.gs_common.gui_minigame_vegetable_09_icon;
                        Global.VeGameVegetable_03 = this.gs_common.gui_minigame_vegetable_10;
                        Global.VeGameVegetable_03_icon = this.gs_common.gui_minigame_vegetable_10_icon;
                    }
                    else
                    {
                        if (Global._isVeGame05)
                        {
                            Global.VeGameTitle = Strings.string116;
                            Global.VeGameVegetable_01 = this.gs_common.gui_minigame_vegetable_11;
                            Global.VeGameVegetable_01_icon = this.gs_common.gui_minigame_vegetable_11_icon;
                            Global.VeGameVegetable_02 = this.gs_common.gui_minigame_vegetable_05;
                            Global.VeGameVegetable_02_icon = this.gs_common.gui_minigame_vegetable_05_icon;
                            Global.VeGameVegetable_03 = this.gs_common.gui_minigame_vegetable_02;
                            Global.VeGameVegetable_03_icon = this.gs_common.gui_minigame_vegetable_02_icon;
                        }
                        else
                        {
                            if (Global._isVeGame06)
                            {
                                Global.VeGameTitle = Strings.string117;
                                Global.VeGameVegetable_01 = this.gs_common.gui_minigame_vegetable_09;
                                Global.VeGameVegetable_01_icon = this.gs_common.gui_minigame_vegetable_09_icon;
                                Global.VeGameVegetable_02 = this.gs_common.gui_minigame_vegetable_03;
                                Global.VeGameVegetable_02_icon = this.gs_common.gui_minigame_vegetable_03_icon;
                                Global.VeGameVegetable_03 = this.gs_common.gui_minigame_vegetable_10;
                                Global.VeGameVegetable_03_icon = this.gs_common.gui_minigame_vegetable_10_icon;
                            }
                        }
                    }
                }
            }
        }
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_vegame_background);
        GUI.Label(new Rect(0, 52 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Global.VeGameTitle, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(20 * Global.guiRatio, 20 * Global.guiRatio, 66 * Global.guiRatio, 94 * Global.guiRatio), "", this.gs_common.gui_inventory_premium_icon);
        GUI.Label(new Rect(103 * Global.guiRatio, 35 * Global.guiRatio, 164 * Global.guiRatio, 60 * Global.guiRatio), Global.globalInventoryThingsArr[0]["val"].ToString(), this.gs_font.font_arial_60_l_white);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (702 * Global.guiRatio), (Screen.height / 2) - (290 * Global.guiRatio), 1404 * Global.guiRatio, 558 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1404 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_slots);
        if (this.vegetable1_index == 1)
        {
            if (Global._isShowHint)
            {
                GUI.Box(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
            }
            if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_01))
            {
                Global._isShowHint = false;
                Global.VeGameWinIcon = Global.VeGameVegetable_01_icon;
                Global._gui_AddInterface("VeGameWinPopUp");
            }
            if (this.vegetable2_index == 2)
            {
                if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_02))
                {
                    Global.VeGameLooseIcon = Global.VeGameVegetable_02_icon;
                    this.wrongVegetableName = Strings.string106;
                    Global._gui_AddInterface("VeGameLoosePopUp");
                }
                if (this.vegetable3_index == 3)
                {
                    if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_03))
                    {
                        Global.VeGameLooseIcon = Global.VeGameVegetable_03_icon;
                        this.wrongVegetableName = Strings.string107;
                        Global._gui_AddInterface("VeGameLoosePopUp");
                    }
                }
            }
            else
            {
                if (this.vegetable2_index == 3)
                {
                    if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_03))
                    {
                        Global.VeGameLooseIcon = Global.VeGameVegetable_03_icon;
                        this.wrongVegetableName = Strings.string107;
                        Global._gui_AddInterface("VeGameLoosePopUp");
                    }
                    if (this.vegetable3_index == 2)
                    {
                        if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_02))
                        {
                            Global.VeGameLooseIcon = Global.VeGameVegetable_02_icon;
                            this.wrongVegetableName = Strings.string106;
                            Global._gui_AddInterface("VeGameLoosePopUp");
                        }
                    }
                }
            }
        }
        else
        {
            //**********************
            if (this.vegetable1_index == 2)
            {
                if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_02))
                {
                    Global.VeGameLooseIcon = Global.VeGameVegetable_02_icon;
                    this.wrongVegetableName = Strings.string106;
                    Global._gui_AddInterface("VeGameLoosePopUp");
                }
                if (this.vegetable2_index == 1)
                {
                    if (Global._isShowHint)
                    {
                        GUI.Box(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                    }
                    if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_01))
                    {
                        Global._isShowHint = false;
                        Global.VeGameWinIcon = Global.VeGameVegetable_01_icon;
                        Global._gui_AddInterface("VeGameWinPopUp");
                    }
                    if (this.vegetable3_index == 3)
                    {
                        if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_03))
                        {
                            Global.VeGameLooseIcon = Global.VeGameVegetable_03_icon;
                            this.wrongVegetableName = Strings.string107;
                            Global._gui_AddInterface("VeGameLoosePopUp");
                        }
                    }
                }
                else
                {
                    if (this.vegetable2_index == 3)
                    {
                        if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_03))
                        {
                            Global.VeGameLooseIcon = Global.VeGameVegetable_03_icon;
                            this.wrongVegetableName = Strings.string107;
                            Global._gui_AddInterface("VeGameLoosePopUp");
                        }
                        if (this.vegetable3_index == 1)
                        {
                            if (Global._isShowHint)
                            {
                                GUI.Box(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                            }
                            if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_01))
                            {
                                Global._isShowHint = false;
                                Global.VeGameWinIcon = Global.VeGameVegetable_01_icon;
                                Global._gui_AddInterface("VeGameWinPopUp");
                            }
                        }
                    }
                }
            }
            else
            {
                //**********************
                if (this.vegetable1_index == 3)
                {
                    if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_03))
                    {
                        Global.VeGameLooseIcon = Global.VeGameVegetable_03_icon;
                        this.wrongVegetableName = Strings.string107;
                        Global._gui_AddInterface("VeGameLoosePopUp");
                    }
                    if (this.vegetable2_index == 1)
                    {
                        if (Global._isShowHint)
                        {
                            GUI.Box(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                        }
                        if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_01))
                        {
                            Global._isShowHint = false;
                            Global.VeGameWinIcon = Global.VeGameVegetable_01_icon;
                            Global._gui_AddInterface("VeGameWinPopUp");
                        }
                        if (this.vegetable3_index == 2)
                        {
                            if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_02))
                            {
                                Global.VeGameLooseIcon = Global.VeGameVegetable_02_icon;
                                this.wrongVegetableName = Strings.string106;
                                Global._gui_AddInterface("VeGameLoosePopUp");
                            }
                        }
                    }
                    else
                    {
                        if (this.vegetable2_index == 2)
                        {
                            if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_02))
                            {
                                Global.VeGameLooseIcon = Global.VeGameVegetable_02_icon;
                                this.wrongVegetableName = Strings.string106;
                                Global._gui_AddInterface("VeGameLoosePopUp");
                            }
                            if (this.vegetable3_index == 1)
                            {
                                if (Global._isShowHint)
                                {
                                    GUI.Box(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                                }
                                if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.VeGameVegetable_01))
                                {
                                    Global._isShowHint = false;
                                    Global.VeGameWinIcon = Global.VeGameVegetable_01_icon;
                                    Global._gui_AddInterface("VeGameWinPopUp");
                                }
                            }
                        }
                    }
                }
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (227 * Global.guiRatio), Screen.height - (197 * Global.guiRatio), 454 * Global.guiRatio, 96 * Global.guiRatio));
        if (!Global._isShowHint)
        {
            if (GUI.Button(new Rect(0, 0, 454 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_vegame_button_long))
            {
                Global._isShowHint = true;
                if (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) > 0)
                {
                    Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
                }
            }
            GUI.Box(new Rect(379 * Global.guiRatio, 10 * Global.guiRatio, 49 * Global.guiRatio, 70 * Global.guiRatio), "", this.gs_common.gui_vegame_stone);
        }
        else
        {
            GUI.Box(new Rect(0, 0, 454 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_vegame_button_long_d);
            GUI.Box(new Rect(379 * Global.guiRatio, 10 * Global.guiRatio, 49 * Global.guiRatio, 70 * Global.guiRatio), "", this.gs_common.gui_vegame_stone_d);
        }
        GUI.Label(new Rect(0, 16 * Global.guiRatio, 379 * Global.guiRatio, 60 * Global.guiRatio), Strings.string112, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void generateVegetables()
    {
        if (this.vegetable1_index == 0)
        {
            this.vegetable1_index = Random.Range(1, 3);
        }
        if (!this._isVegetableGenerate)
        {
            this._isVegetableGenerate = true;
            if (this.vegetable1_index == 1)
            {
                this.validVegetables = new int[] {2, 3};
                this.vegetable2_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                if (this.vegetable2_index == 2)
                {
                    this.validVegetables = new int[] {3};
                    this.vegetable3_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                }
                else
                {
                    if (this.vegetable2_index == 3)
                    {
                        this.validVegetables = new int[] {2};
                        this.vegetable3_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                    }
                }
            }
            else
            {
                //**********************
                if (this.vegetable1_index == 2)
                {
                    this.validVegetables = new int[] {1, 3};
                    this.vegetable2_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                    if (this.vegetable2_index == 1)
                    {
                        this.validVegetables = new int[] {3};
                        this.vegetable3_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                    }
                    else
                    {
                        if (this.vegetable2_index == 3)
                        {
                            this.validVegetables = new int[] {1};
                            this.vegetable3_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                        }
                        else
                        {
                            if (this.vegetable2_index == 4)
                            {
                                this.validVegetables = new int[] {1, 3};
                                this.vegetable3_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                                if (this.vegetable3_index == 1)
                                {
                                    this.vegetable4_index = 3;
                                }
                                else
                                {
                                    if (this.vegetable3_index == 3)
                                    {
                                        this.vegetable4_index = 1;
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    //**********************
                    if (this.vegetable1_index == 3)
                    {
                        this.validVegetables = new int[] {1, 2};
                        this.vegetable2_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                        if (this.vegetable2_index == 1)
                        {
                            this.validVegetables = new int[] {2};
                            this.vegetable3_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                        }
                        else
                        {
                            if (this.vegetable2_index == 2)
                            {
                                this.validVegetables = new int[] {1};
                                this.vegetable3_index = this.validVegetables[Random.Range(0, this.validVegetables.Length)];
                            }
                        }
                    }
                }
            }
        }
    }

    // *********************************** ИГРА ПРО ОТКРЫТИЕ ЗАМКА **************************************** //
    public virtual void gui_DoorLockGameScreen()
    {
        if ((Global._isZasov1 && Global._isZasov2) && Global._isZasov3)
        {
            Global._gui_CloseInterface();
            Global.UFOShowEntry = true;
            Global._isPopUpOpen = false;
            Global._isOpenPyramid = true;
            Global.buildingPyramid.gameObject.transform.GetChild(1).gameObject.SetActive(true);
            Global.buildingPyramid.gameObject.transform.GetChild(2).gameObject.SetActive(false);
            Global.globalBus.gameObject.SendMessage("SaveGame");
        }
        GUI.BeginGroup(new Rect((Screen.width / 2) - (336 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 672 * Global.guiRatio, 762 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 672 * Global.guiRatio, 762 * Global.guiRatio), "", this.gs_common.gui_common_minigame_window);
        if (GUI.Button(new Rect(594 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
            Global.UFOShowEntry = true;
            Global._isPopUpOpen = false;
        }
        GUI.BeginGroup(new Rect(33 * Global.guiRatio, 121 * Global.guiRatio, 600 * Global.guiRatio, 600 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 600 * Global.guiRatio, 600 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_background);
        //Запоры
        GUI.Box(new Rect(Global._zasov1X * Global.guiRatio, 75 * Global.guiRatio, 600 * Global.guiRatio, 101 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_zasov1);
        GUI.Box(new Rect(Global._zasov2X * Global.guiRatio, 242 * Global.guiRatio, 600 * Global.guiRatio, 101 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_zasov2);
        GUI.Box(new Rect(Global._zasov3X * Global.guiRatio, 410 * Global.guiRatio, 600 * Global.guiRatio, 101 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_zasov3);
        //Крышка
        GUI.Box(new Rect(0, 0, 600 * Global.guiRatio, 600 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_zasov_verh);
        //Первый замок
        if (!Global._isOpenZasov1)
        {
            if (GUI.Button(new Rect(117 * Global.guiRatio, 58 * Global.guiRatio, 67 * Global.guiRatio, 67 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr1_1))
            {
            }
            if (GUI.Button(new Rect(182 * Global.guiRatio, 58 * Global.guiRatio, 67 * Global.guiRatio, 67 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr1_2))
            {
                Global._isOpenZasov1 = true;
                this.StartCoroutine(this.openZasov1());
            }
            if (GUI.Button(new Rect(182 * Global.guiRatio, 124 * Global.guiRatio, 67 * Global.guiRatio, 66 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr1_3))
            {
            }
            if (GUI.Button(new Rect(117 * Global.guiRatio, 124 * Global.guiRatio, 67 * Global.guiRatio, 66 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr1_4))
            {
            }
        }
        else
        {
            GUI.Box(new Rect(117 * Global.guiRatio, 58 * Global.guiRatio, 132 * Global.guiRatio, 132 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_krug1);
        }
        //Второй замок
        if (!Global._isOpenZasov2)
        {
            if (GUI.Button(new Rect(117 * Global.guiRatio, 225 * Global.guiRatio, 67 * Global.guiRatio, 67 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr2_1))
            {
            }
            if (GUI.Button(new Rect(182 * Global.guiRatio, 225 * Global.guiRatio, 67 * Global.guiRatio, 67 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr2_2))
            {
            }
            if (GUI.Button(new Rect(182 * Global.guiRatio, 291 * Global.guiRatio, 67 * Global.guiRatio, 66 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr2_3))
            {
            }
            if (GUI.Button(new Rect(117 * Global.guiRatio, 291 * Global.guiRatio, 67 * Global.guiRatio, 66 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr2_4))
            {
                Global._isOpenZasov2 = true;
                this.StartCoroutine(this.openZasov2());
            }
        }
        else
        {
            GUI.Box(new Rect(117 * Global.guiRatio, 225 * Global.guiRatio, 132 * Global.guiRatio, 132 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_krug2);
        }
        //Третий замок
        if (!Global._isOpenZasov3)
        {
            if (GUI.Button(new Rect(117 * Global.guiRatio, 393 * Global.guiRatio, 67 * Global.guiRatio, 67 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr3_1))
            {
            }
            if (GUI.Button(new Rect(182 * Global.guiRatio, 393 * Global.guiRatio, 67 * Global.guiRatio, 67 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr3_2))
            {
                Global._isOpenZasov3 = true;
                this.StartCoroutine(this.openZasov3());
            }
            if (GUI.Button(new Rect(182 * Global.guiRatio, 459 * Global.guiRatio, 67 * Global.guiRatio, 66 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr3_3))
            {
            }
            if (GUI.Button(new Rect(117 * Global.guiRatio, 459 * Global.guiRatio, 67 * Global.guiRatio, 66 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_kr3_4))
            {
            }
        }
        else
        {
            GUI.Box(new Rect(117 * Global.guiRatio, 393 * Global.guiRatio, 132 * Global.guiRatio, 132 * Global.guiRatio), "", this.gs_common.gui_minigame_doorlock_krug3);
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    // *********************************** ИГРА ПРО МОЗАИКУ **************************************** //
    public virtual void gui_MosaicGameScreen()
    {
        if (((((Global._Mosaic1Index == 1) && (Global._Mosaic2Index == 2)) && (Global._Mosaic3Index == 3)) && (((Global._Mosaic4Index == 1) && (Global._Mosaic5Index == 2)) && (Global._Mosaic6Index == 3))) && (((Global._Mosaic7Index == 1) && (Global._Mosaic8Index == 2)) && (Global._Mosaic9Index == 3)))
        {
            Global._gui_CloseInterface();
            Global.MosaicComplete = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_047);
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TempleDialogue05");
        }
        GUI.BeginGroup(new Rect((Screen.width / 2) - (336 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 672 * Global.guiRatio, 762 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 672 * Global.guiRatio, 762 * Global.guiRatio), "", this.gs_common.gui_common_minigame_window);
        if (GUI.Button(new Rect(594 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
            Global._isKot = false;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_048);
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TempleDialogue06");
        }
        GUI.BeginGroup(new Rect(33 * Global.guiRatio, 121 * Global.guiRatio, 600 * Global.guiRatio, 600 * Global.guiRatio));
        // ********************************* ПЕРВЫЙ РЯД
        //123
        if (((Global._Mosaic1Index == 1) && (Global._Mosaic2Index == 2)) && (Global._Mosaic3Index == 3))
        {
            if (GUI.Button(new Rect(0, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_01))
            {
                Global._Mosaic1Index = 2;
                Global._Mosaic2Index = 1;
                Global._Mosaic3Index = 3;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_02))
            {
                Global._Mosaic1Index = 1;
                Global._Mosaic2Index = 3;
                Global._Mosaic3Index = 2;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_03))
            {
                Global._Mosaic1Index = 3;
                Global._Mosaic2Index = 2;
                Global._Mosaic3Index = 1;
            }
        }
        //213
        if (((Global._Mosaic1Index == 2) && (Global._Mosaic2Index == 1)) && (Global._Mosaic3Index == 3))
        {
            if (GUI.Button(new Rect(0, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_02))
            {
                Global._Mosaic1Index = 1;
                Global._Mosaic2Index = 2;
                Global._Mosaic3Index = 3;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_01))
            {
                Global._Mosaic1Index = 2;
                Global._Mosaic2Index = 3;
                Global._Mosaic3Index = 1;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_03))
            {
                Global._Mosaic1Index = 3;
                Global._Mosaic2Index = 1;
                Global._Mosaic3Index = 2;
            }
        }
        //132
        if (((Global._Mosaic1Index == 1) && (Global._Mosaic2Index == 3)) && (Global._Mosaic3Index == 2))
        {
            if (GUI.Button(new Rect(0, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_01))
            {
                Global._Mosaic1Index = 3;
                Global._Mosaic2Index = 1;
                Global._Mosaic3Index = 2;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_03))
            {
                Global._Mosaic1Index = 1;
                Global._Mosaic2Index = 2;
                Global._Mosaic3Index = 3;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_02))
            {
                Global._Mosaic1Index = 2;
                Global._Mosaic2Index = 3;
                Global._Mosaic3Index = 1;
            }
        }
        //321
        if (((Global._Mosaic1Index == 3) && (Global._Mosaic2Index == 2)) && (Global._Mosaic3Index == 1))
        {
            if (GUI.Button(new Rect(0, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_03))
            {
                Global._Mosaic1Index = 2;
                Global._Mosaic2Index = 3;
                Global._Mosaic3Index = 1;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_02))
            {
                Global._Mosaic1Index = 3;
                Global._Mosaic2Index = 1;
                Global._Mosaic3Index = 2;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_01))
            {
                Global._Mosaic1Index = 1;
                Global._Mosaic2Index = 2;
                Global._Mosaic3Index = 3;
            }
        }
        //231
        if (((Global._Mosaic1Index == 2) && (Global._Mosaic2Index == 3)) && (Global._Mosaic3Index == 1))
        {
            if (GUI.Button(new Rect(0, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_02))
            {
                Global._Mosaic1Index = 3;
                Global._Mosaic2Index = 2;
                Global._Mosaic3Index = 1;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_03))
            {
                Global._Mosaic1Index = 2;
                Global._Mosaic2Index = 1;
                Global._Mosaic3Index = 3;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_01))
            {
                Global._Mosaic1Index = 1;
                Global._Mosaic2Index = 3;
                Global._Mosaic3Index = 2;
            }
        }
        //312
        if (((Global._Mosaic1Index == 3) && (Global._Mosaic2Index == 1)) && (Global._Mosaic3Index == 2))
        {
            if (GUI.Button(new Rect(0, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_03))
            {
                Global._Mosaic1Index = 1;
                Global._Mosaic2Index = 3;
                Global._Mosaic3Index = 2;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_01))
            {
                Global._Mosaic1Index = 3;
                Global._Mosaic2Index = 2;
                Global._Mosaic3Index = 1;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 0, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_02))
            {
                Global._Mosaic1Index = 2;
                Global._Mosaic2Index = 1;
                Global._Mosaic3Index = 3;
            }
        }
        // ********************************* ВТОРОЙ РЯД
        //456
        if (((Global._Mosaic4Index == 1) && (Global._Mosaic5Index == 2)) && (Global._Mosaic6Index == 3))
        {
            if (GUI.Button(new Rect(0, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_04))
            {
                Global._Mosaic4Index = 2;
                Global._Mosaic5Index = 1;
                Global._Mosaic6Index = 3;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_05))
            {
                Global._Mosaic4Index = 1;
                Global._Mosaic5Index = 3;
                Global._Mosaic6Index = 2;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_06))
            {
                Global._Mosaic4Index = 3;
                Global._Mosaic5Index = 2;
                Global._Mosaic6Index = 1;
            }
        }
        //546
        if (((Global._Mosaic4Index == 2) && (Global._Mosaic5Index == 1)) && (Global._Mosaic6Index == 3))
        {
            if (GUI.Button(new Rect(0, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_05))
            {
                Global._Mosaic4Index = 1;
                Global._Mosaic5Index = 2;
                Global._Mosaic6Index = 3;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_04))
            {
                Global._Mosaic4Index = 2;
                Global._Mosaic5Index = 3;
                Global._Mosaic6Index = 1;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_06))
            {
                Global._Mosaic4Index = 3;
                Global._Mosaic5Index = 1;
                Global._Mosaic6Index = 2;
            }
        }
        //465
        if (((Global._Mosaic4Index == 1) && (Global._Mosaic5Index == 3)) && (Global._Mosaic6Index == 2))
        {
            if (GUI.Button(new Rect(0, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_04))
            {
                Global._Mosaic4Index = 3;
                Global._Mosaic5Index = 1;
                Global._Mosaic6Index = 2;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_06))
            {
                Global._Mosaic4Index = 1;
                Global._Mosaic5Index = 2;
                Global._Mosaic6Index = 3;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_05))
            {
                Global._Mosaic4Index = 2;
                Global._Mosaic5Index = 3;
                Global._Mosaic6Index = 1;
            }
        }
        //654
        if (((Global._Mosaic4Index == 3) && (Global._Mosaic5Index == 2)) && (Global._Mosaic6Index == 1))
        {
            if (GUI.Button(new Rect(0, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_06))
            {
                Global._Mosaic4Index = 2;
                Global._Mosaic5Index = 3;
                Global._Mosaic6Index = 1;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_05))
            {
                Global._Mosaic4Index = 3;
                Global._Mosaic5Index = 1;
                Global._Mosaic6Index = 2;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_04))
            {
                Global._Mosaic4Index = 1;
                Global._Mosaic5Index = 2;
                Global._Mosaic6Index = 3;
            }
        }
        //564
        if (((Global._Mosaic4Index == 2) && (Global._Mosaic5Index == 3)) && (Global._Mosaic6Index == 1))
        {
            if (GUI.Button(new Rect(0, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_05))
            {
                Global._Mosaic4Index = 3;
                Global._Mosaic5Index = 2;
                Global._Mosaic6Index = 1;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_06))
            {
                Global._Mosaic4Index = 2;
                Global._Mosaic5Index = 1;
                Global._Mosaic6Index = 3;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_04))
            {
                Global._Mosaic4Index = 1;
                Global._Mosaic5Index = 3;
                Global._Mosaic6Index = 2;
            }
        }
        //645
        if (((Global._Mosaic4Index == 3) && (Global._Mosaic5Index == 1)) && (Global._Mosaic6Index == 2))
        {
            if (GUI.Button(new Rect(0, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_06))
            {
                Global._Mosaic4Index = 1;
                Global._Mosaic5Index = 3;
                Global._Mosaic6Index = 2;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_04))
            {
                Global._Mosaic4Index = 3;
                Global._Mosaic5Index = 2;
                Global._Mosaic6Index = 1;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_05))
            {
                Global._Mosaic4Index = 2;
                Global._Mosaic5Index = 1;
                Global._Mosaic6Index = 3;
            }
        }
        // ********************************* ТРЕТИЙ РЯД
        //789
        if (((Global._Mosaic7Index == 1) && (Global._Mosaic8Index == 2)) && (Global._Mosaic9Index == 3))
        {
            if (GUI.Button(new Rect(0, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_07))
            {
                Global._Mosaic7Index = 2;
                Global._Mosaic8Index = 1;
                Global._Mosaic9Index = 3;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_08))
            {
                Global._Mosaic7Index = 1;
                Global._Mosaic8Index = 3;
                Global._Mosaic9Index = 2;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_09))
            {
                Global._Mosaic7Index = 3;
                Global._Mosaic8Index = 2;
                Global._Mosaic9Index = 1;
            }
        }
        //879
        if (((Global._Mosaic7Index == 2) && (Global._Mosaic8Index == 1)) && (Global._Mosaic9Index == 3))
        {
            if (GUI.Button(new Rect(0, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_08))
            {
                Global._Mosaic7Index = 1;
                Global._Mosaic8Index = 2;
                Global._Mosaic9Index = 3;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_07))
            {
                Global._Mosaic7Index = 2;
                Global._Mosaic8Index = 3;
                Global._Mosaic9Index = 1;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_09))
            {
                Global._Mosaic7Index = 3;
                Global._Mosaic8Index = 1;
                Global._Mosaic9Index = 2;
            }
        }
        //798
        if (((Global._Mosaic7Index == 1) && (Global._Mosaic8Index == 3)) && (Global._Mosaic9Index == 2))
        {
            if (GUI.Button(new Rect(0, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_07))
            {
                Global._Mosaic7Index = 3;
                Global._Mosaic8Index = 1;
                Global._Mosaic9Index = 2;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_09))
            {
                Global._Mosaic7Index = 1;
                Global._Mosaic8Index = 2;
                Global._Mosaic9Index = 3;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_08))
            {
                Global._Mosaic7Index = 2;
                Global._Mosaic8Index = 3;
                Global._Mosaic9Index = 1;
            }
        }
        //987
        if (((Global._Mosaic7Index == 3) && (Global._Mosaic8Index == 2)) && (Global._Mosaic9Index == 1))
        {
            if (GUI.Button(new Rect(0, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_09))
            {
                Global._Mosaic7Index = 2;
                Global._Mosaic8Index = 3;
                Global._Mosaic9Index = 1;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_08))
            {
                Global._Mosaic7Index = 3;
                Global._Mosaic8Index = 1;
                Global._Mosaic9Index = 2;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_07))
            {
                Global._Mosaic7Index = 1;
                Global._Mosaic8Index = 2;
                Global._Mosaic9Index = 3;
            }
        }
        //897
        if (((Global._Mosaic7Index == 2) && (Global._Mosaic8Index == 3)) && (Global._Mosaic9Index == 1))
        {
            if (GUI.Button(new Rect(0, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_08))
            {
                Global._Mosaic7Index = 3;
                Global._Mosaic8Index = 2;
                Global._Mosaic9Index = 1;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_09))
            {
                Global._Mosaic7Index = 2;
                Global._Mosaic8Index = 1;
                Global._Mosaic9Index = 3;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_07))
            {
                Global._Mosaic7Index = 1;
                Global._Mosaic8Index = 3;
                Global._Mosaic9Index = 2;
            }
        }
        //978
        if (((Global._Mosaic7Index == 3) && (Global._Mosaic8Index == 1)) && (Global._Mosaic9Index == 2))
        {
            if (GUI.Button(new Rect(0, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_09))
            {
                Global._Mosaic7Index = 1;
                Global._Mosaic8Index = 3;
                Global._Mosaic9Index = 2;
            }
            if (GUI.Button(new Rect(200 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_07))
            {
                Global._Mosaic7Index = 3;
                Global._Mosaic8Index = 2;
                Global._Mosaic9Index = 1;
            }
            if (GUI.Button(new Rect(400 * Global.guiRatio, 400 * Global.guiRatio, 200 * Global.guiRatio, 200 * Global.guiRatio), "", this.gs_common.gui_minigame_mosaic_08))
            {
                Global._Mosaic7Index = 2;
                Global._Mosaic8Index = 1;
                Global._Mosaic9Index = 3;
            }
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    // *********************************** ИГРА ПРО МУЗЕЙ **************************************** //
    public virtual void gui_MuseumGameScreen()
    {
        if (Global._isMuseumGame01)
        {
            Global.MuseumGameTitle = Strings.string178;
            Global.MuseumGameItem_01 = this.gs_common.gui_hog2_icon_ammonit_436;
            Global.MuseumGameItem_01_icon = this.gs_common.gui_hog2_icon_ammonit_160;
            Global.MuseumGameItem_02 = this.gs_common.gui_hog2_icon_dinosaur_436;
            Global.MuseumGameItem_02_icon = this.gs_common.gui_hog2_icon_dinosaur_160;
            Global.MuseumGameItem_03 = this.gs_common.gui_hog2_icon_locomotive_436;
            Global.MuseumGameItem_03_icon = this.gs_common.gui_hog2_icon_locomotive_160;
        }
        else
        {
            if (Global._isMuseumGame02)
            {
                Global.MuseumGameTitle = Strings.string179;
                Global.MuseumGameItem_01 = this.gs_common.gui_hog2_icon_legionnaire_436;
                Global.MuseumGameItem_01_icon = this.gs_common.gui_hog2_icon_legionnaire_160;
                Global.MuseumGameItem_02 = this.gs_common.gui_hog2_icon_ship_436;
                Global.MuseumGameItem_02_icon = this.gs_common.gui_hog2_icon_ship_160;
                Global.MuseumGameItem_03 = this.gs_common.gui_hog2_icon_statue_egypt_436;
                Global.MuseumGameItem_03_icon = this.gs_common.gui_hog2_icon_statue_egypt_160;
            }
            else
            {
                if (Global._isMuseumGame03)
                {
                    Global.MuseumGameTitle = Strings.string180;
                    Global.MuseumGameItem_01 = this.gs_common.gui_hog2_icon_locomotive_436;
                    Global.MuseumGameItem_01_icon = this.gs_common.gui_hog2_icon_locomotive_160;
                    Global.MuseumGameItem_02 = this.gs_common.gui_hog2_icon_legionnaire_436;
                    Global.MuseumGameItem_02_icon = this.gs_common.gui_hog2_icon_legionnaire_160;
                    Global.MuseumGameItem_03 = this.gs_common.gui_hog2_icon_dinosaur_436;
                    Global.MuseumGameItem_03_icon = this.gs_common.gui_hog2_icon_dinosaur_160;
                }
            }
        }
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_vegame_background);
        GUI.Label(new Rect(0, 52 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Global.MuseumGameTitle, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(20 * Global.guiRatio, 20 * Global.guiRatio, 66 * Global.guiRatio, 94 * Global.guiRatio), "", this.gs_common.gui_inventory_premium_icon);
        GUI.Label(new Rect(103 * Global.guiRatio, 35 * Global.guiRatio, 164 * Global.guiRatio, 60 * Global.guiRatio), Global.globalInventoryThingsArr[0]["val"].ToString(), this.gs_font.font_arial_60_l_white);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (702 * Global.guiRatio), (Screen.height / 2) - (290 * Global.guiRatio), 1404 * Global.guiRatio, 558 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1404 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_slots);
        if (this.museumItem1_index == 1)
        {
            if (Global._isShowHint)
            {
                GUI.Box(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
            }
            if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_01))
            {
                Global._isShowHint = false;
                Global.MuseumGameWinIcon = Global.MuseumGameItem_01_icon;
                Global._gui_AddInterface("MuseumGameWinPopUp");
            }
            if (this.museumItem2_index == 2)
            {
                if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_02))
                {
                    Global.MuseumGameLooseIcon = Global.MuseumGameItem_02_icon;
                    this.wrongMuseumItemName = Strings.string106;
                    Global._gui_AddInterface("MuseumGameLoosePopUp");
                }
                if (this.museumItem3_index == 3)
                {
                    if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_03))
                    {
                        Global.MuseumGameLooseIcon = Global.MuseumGameItem_03_icon;
                        this.wrongMuseumItemName = Strings.string107;
                        Global._gui_AddInterface("MuseumGameLoosePopUp");
                    }
                }
            }
            else
            {
                if (this.museumItem2_index == 3)
                {
                    if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_03))
                    {
                        Global.MuseumGameLooseIcon = Global.MuseumGameItem_03_icon;
                        this.wrongMuseumItemName = Strings.string107;
                        Global._gui_AddInterface("MuseumGameLoosePopUp");
                    }
                    if (this.museumItem3_index == 2)
                    {
                        if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_02))
                        {
                            Global.MuseumGameLooseIcon = Global.MuseumGameItem_02_icon;
                            this.wrongMuseumItemName = Strings.string106;
                            Global._gui_AddInterface("MuseumGameLoosePopUp");
                        }
                    }
                }
            }
        }
        else
        {
            //**********************
            if (this.museumItem1_index == 2)
            {
                if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_02))
                {
                    Global.MuseumGameLooseIcon = Global.MuseumGameItem_02_icon;
                    this.wrongMuseumItemName = Strings.string106;
                    Global._gui_AddInterface("MuseumGameLoosePopUp");
                }
                if (this.museumItem2_index == 1)
                {
                    if (Global._isShowHint)
                    {
                        GUI.Box(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                    }
                    if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_01))
                    {
                        Global._isShowHint = false;
                        Global.MuseumGameWinIcon = Global.MuseumGameItem_01_icon;
                        Global._gui_AddInterface("MuseumGameWinPopUp");
                    }
                    if (this.museumItem3_index == 3)
                    {
                        if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_03))
                        {
                            Global.MuseumGameLooseIcon = Global.MuseumGameItem_03_icon;
                            this.wrongMuseumItemName = Strings.string107;
                            Global._gui_AddInterface("MuseumGameLoosePopUp");
                        }
                    }
                }
                else
                {
                    if (this.museumItem2_index == 3)
                    {
                        if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_03))
                        {
                            Global.MuseumGameLooseIcon = Global.MuseumGameItem_03_icon;
                            this.wrongMuseumItemName = Strings.string107;
                            Global._gui_AddInterface("MuseumGameLoosePopUp");
                        }
                        if (this.museumItem3_index == 1)
                        {
                            if (Global._isShowHint)
                            {
                                GUI.Box(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                            }
                            if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_01))
                            {
                                Global._isShowHint = false;
                                Global.MuseumGameWinIcon = Global.MuseumGameItem_01_icon;
                                Global._gui_AddInterface("MuseumGameWinPopUp");
                            }
                        }
                    }
                }
            }
            else
            {
                //**********************
                if (this.museumItem1_index == 3)
                {
                    if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_03))
                    {
                        Global.MuseumGameLooseIcon = Global.MuseumGameItem_03_icon;
                        this.wrongMuseumItemName = Strings.string107;
                        Global._gui_AddInterface("MuseumGameLoosePopUp");
                    }
                    if (this.museumItem2_index == 1)
                    {
                        if (Global._isShowHint)
                        {
                            GUI.Box(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                        }
                        if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_01))
                        {
                            Global._isShowHint = false;
                            Global.MuseumGameWinIcon = Global.MuseumGameItem_01_icon;
                            Global._gui_AddInterface("MuseumGameWinPopUp");
                        }
                        if (this.museumItem3_index == 2)
                        {
                            if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_02))
                            {
                                Global.MuseumGameLooseIcon = Global.MuseumGameItem_02_icon;
                                this.wrongMuseumItemName = Strings.string106;
                                Global._gui_AddInterface("MuseumGameLoosePopUp");
                            }
                        }
                    }
                    else
                    {
                        if (this.museumItem2_index == 2)
                        {
                            if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_02))
                            {
                                Global.MuseumGameLooseIcon = Global.MuseumGameItem_02_icon;
                                this.wrongMuseumItemName = Strings.string106;
                                Global._gui_AddInterface("MuseumGameLoosePopUp");
                            }
                            if (this.museumItem3_index == 1)
                            {
                                if (Global._isShowHint)
                                {
                                    GUI.Box(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                                }
                                if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MuseumGameItem_01))
                                {
                                    Global._isShowHint = false;
                                    Global.MuseumGameWinIcon = Global.MuseumGameItem_01_icon;
                                    Global._gui_AddInterface("MuseumGameWinPopUp");
                                }
                            }
                        }
                    }
                }
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (227 * Global.guiRatio), Screen.height - (197 * Global.guiRatio), 454 * Global.guiRatio, 96 * Global.guiRatio));
        if (!Global._isShowHint)
        {
            if (GUI.Button(new Rect(0, 0, 454 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_vegame_button_long))
            {
                Global._isShowHint = true;
                if (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) > 0)
                {
                    Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
                }
            }
            GUI.Box(new Rect(379 * Global.guiRatio, 10 * Global.guiRatio, 49 * Global.guiRatio, 70 * Global.guiRatio), "", this.gs_common.gui_vegame_stone);
        }
        else
        {
            GUI.Box(new Rect(0, 0, 454 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_vegame_button_long_d);
            GUI.Box(new Rect(379 * Global.guiRatio, 10 * Global.guiRatio, 49 * Global.guiRatio, 70 * Global.guiRatio), "", this.gs_common.gui_vegame_stone_d);
        }
        GUI.Label(new Rect(0, 16 * Global.guiRatio, 379 * Global.guiRatio, 60 * Global.guiRatio), Strings.string112, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void generateMuseumItems()
    {
        if (this.museumItem1_index == 0)
        {
            this.museumItem1_index = Random.Range(1, 3);
        }
        if (!this._isMuseumItemGenerate)
        {
            this._isMuseumItemGenerate = true;
            if (this.museumItem1_index == 1)
            {
                this.validMuseumItems = new int[] {2, 3};
                this.museumItem2_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                if (this.museumItem2_index == 2)
                {
                    this.validMuseumItems = new int[] {3};
                    this.museumItem3_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                }
                else
                {
                    if (this.museumItem2_index == 3)
                    {
                        this.validMuseumItems = new int[] {2};
                        this.museumItem3_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                    }
                }
            }
            else
            {
                //**********************
                if (this.museumItem1_index == 2)
                {
                    this.validMuseumItems = new int[] {1, 3};
                    this.museumItem2_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                    if (this.museumItem2_index == 1)
                    {
                        this.validMuseumItems = new int[] {3};
                        this.museumItem3_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                    }
                    else
                    {
                        if (this.museumItem2_index == 3)
                        {
                            this.validMuseumItems = new int[] {1};
                            this.museumItem3_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                        }
                        else
                        {
                            if (this.museumItem2_index == 4)
                            {
                                this.validMuseumItems = new int[] {1, 3};
                                this.museumItem3_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                                if (this.museumItem3_index == 1)
                                {
                                    this.museumItem4_index = 3;
                                }
                                else
                                {
                                    if (this.museumItem3_index == 3)
                                    {
                                        this.museumItem4_index = 1;
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    //**********************
                    if (this.museumItem1_index == 3)
                    {
                        this.validMuseumItems = new int[] {1, 2};
                        this.museumItem2_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                        if (this.museumItem2_index == 1)
                        {
                            this.validMuseumItems = new int[] {2};
                            this.museumItem3_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                        }
                        else
                        {
                            if (this.museumItem2_index == 2)
                            {
                                this.validMuseumItems = new int[] {1};
                                this.museumItem3_index = this.validMuseumItems[Random.Range(0, this.validMuseumItems.Length)];
                            }
                        }
                    }
                }
            }
        }
    }

    public virtual void gui_MuseumGameWinPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string108, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            this.museumItem1_index = 0;
            this.museumItem2_index = 0;
            this.museumItem3_index = 0;
            this._isMuseumItemGenerate = false;
            if (Global._isMuseumGame01)
            {
                Global._isMuseumGame01 = false;
                Global._isMuseumGame02 = true;
                this.generateMuseumItems();
                Global._gui_SetInterface("MuseumGameScreen");
            }
            if (!Global._isMuseumGame01 && Global._isMuseumGame02)
            {
                Global._isMuseumGame02 = false;
                Global._isMuseumGame03 = true;
                this.generateMuseumItems();
                Global._gui_SetInterface("MuseumGameScreen");
            }
        }
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.MuseumGameWinIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 438 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string109, this.gs_font.font_b52_60_cb_white);
        if (Global._isMuseumGame01)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.museumItem1_index = 0;
                this.museumItem2_index = 0;
                this.museumItem3_index = 0;
                this._isMuseumItemGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isMuseumGame01 = false;
                Global._isMuseumGame02 = true;
                this.generateMuseumItems();
                Global._gui_SetInterface("MuseumGameScreen");
            }
        }
        if (Global._isMuseumGame02)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.museumItem1_index = 0;
                this.museumItem2_index = 0;
                this.museumItem3_index = 0;
                this._isMuseumItemGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isMuseumGame02 = false;
                Global._isMuseumGame03 = true;
                this.generateMuseumItems();
                Global._gui_SetInterface("MuseumGameScreen");
            }
        }
        if (Global._isMuseumGame03)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                Global._gui_CloseInterface();
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isMuseumGameComplete = true;
                Global._gui_SetInterface("VillaScreen");
            }
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_MuseumGameLoosePopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid_sad);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string110, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
            this.museumItem1_index = 0;
            this.museumItem2_index = 0;
            this.museumItem3_index = 0;
            this._isMuseumItemGenerate = false;
            this.generateMuseumItems();
            Global._gui_CloseInterface();
        }
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.MuseumGameLooseIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 438 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string111, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            if (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) > 0)
            {
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
            }
            this.museumItem1_index = 0;
            this.museumItem2_index = 0;
            this.museumItem3_index = 0;
            this._isMuseumItemGenerate = false;
            this.generateMuseumItems();
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string023, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    // *********************************** ИГРА ПРО КЛАДОВКУ **************************************** //
    public virtual void gui_BoxroomGameScreen()
    {
        if (Global._isBoxroomGame01)
        {
            Global.BoxroomGameTitle = Strings.string183;
            Global.BoxroomGameItem_01 = this.gs_common.gui_hog3_icon_toaster_436;
            Global.BoxroomGameItem_01_icon = this.gs_common.gui_hog3_icon_toaster_160;
            Global.BoxroomGameItem_02 = this.gs_common.gui_hog3_icon_generator_436;
            Global.BoxroomGameItem_02_icon = this.gs_common.gui_hog3_icon_generator_160;
            Global.BoxroomGameItem_03 = this.gs_common.gui_hog3_icon_spray_436;
            Global.BoxroomGameItem_03_icon = this.gs_common.gui_hog3_icon_spray_160;
        }
        else
        {
            if (Global._isBoxroomGame02)
            {
                Global.BoxroomGameTitle = Strings.string184;
                Global.BoxroomGameItem_01 = this.gs_common.gui_hog3_icon_watering_436;
                Global.BoxroomGameItem_01_icon = this.gs_common.gui_hog3_icon_watering_160;
                Global.BoxroomGameItem_02 = this.gs_common.gui_hog3_icon_extinguisher_436;
                Global.BoxroomGameItem_02_icon = this.gs_common.gui_hog3_icon_extinguisher_160;
                Global.BoxroomGameItem_03 = this.gs_common.gui_hog3_icon_fishrod_436;
                Global.BoxroomGameItem_03_icon = this.gs_common.gui_hog3_icon_fishrod_160;
            }
            else
            {
                if (Global._isBoxroomGame03)
                {
                    Global.BoxroomGameTitle = Strings.string185;
                    Global.BoxroomGameItem_01 = this.gs_common.gui_hog3_icon_recorder_436;
                    Global.BoxroomGameItem_01_icon = this.gs_common.gui_hog3_icon_recorder_160;
                    Global.BoxroomGameItem_02 = this.gs_common.gui_hog3_icon_tv_436;
                    Global.BoxroomGameItem_02_icon = this.gs_common.gui_hog3_icon_tv_160;
                    Global.BoxroomGameItem_03 = this.gs_common.gui_hog3_icon_bicycle_436;
                    Global.BoxroomGameItem_03_icon = this.gs_common.gui_hog3_icon_bicycle_160;
                }
            }
        }
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_vegame_background);
        GUI.Label(new Rect(0, 52 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Global.BoxroomGameTitle, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(20 * Global.guiRatio, 20 * Global.guiRatio, 66 * Global.guiRatio, 94 * Global.guiRatio), "", this.gs_common.gui_inventory_premium_icon);
        GUI.Label(new Rect(103 * Global.guiRatio, 35 * Global.guiRatio, 164 * Global.guiRatio, 60 * Global.guiRatio), Global.globalInventoryThingsArr[0]["val"].ToString(), this.gs_font.font_arial_60_l_white);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (702 * Global.guiRatio), (Screen.height / 2) - (290 * Global.guiRatio), 1404 * Global.guiRatio, 558 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1404 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_slots);
        if (this.boxroomItem1_index == 1)
        {
            if (Global._isShowHint)
            {
                GUI.Box(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
            }
            if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_01))
            {
                Global._isShowHint = false;
                Global.BoxroomGameWinIcon = Global.BoxroomGameItem_01_icon;
                Global._gui_AddInterface("BoxroomGameWinPopUp");
            }
            if (this.boxroomItem2_index == 2)
            {
                if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_02))
                {
                    Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_02_icon;
                    this.wrongBoxroomItemName = Strings.string106;
                    Global._gui_AddInterface("BoxroomGameLoosePopUp");
                }
                if (this.boxroomItem3_index == 3)
                {
                    if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_03))
                    {
                        Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_03_icon;
                        this.wrongBoxroomItemName = Strings.string107;
                        Global._gui_AddInterface("BoxroomGameLoosePopUp");
                    }
                }
            }
            else
            {
                if (this.boxroomItem2_index == 3)
                {
                    if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_03))
                    {
                        Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_03_icon;
                        this.wrongBoxroomItemName = Strings.string107;
                        Global._gui_AddInterface("BoxroomGameLoosePopUp");
                    }
                    if (this.boxroomItem3_index == 2)
                    {
                        if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_02))
                        {
                            Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_02_icon;
                            this.wrongBoxroomItemName = Strings.string106;
                            Global._gui_AddInterface("BoxroomGameLoosePopUp");
                        }
                    }
                }
            }
        }
        else
        {
            //**********************
            if (this.boxroomItem1_index == 2)
            {
                if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_02))
                {
                    Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_02_icon;
                    this.wrongBoxroomItemName = Strings.string106;
                    Global._gui_AddInterface("BoxroomGameLoosePopUp");
                }
                if (this.boxroomItem2_index == 1)
                {
                    if (Global._isShowHint)
                    {
                        GUI.Box(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                    }
                    if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_01))
                    {
                        Global._isShowHint = false;
                        Global.BoxroomGameWinIcon = Global.BoxroomGameItem_01_icon;
                        Global._gui_AddInterface("BoxroomGameWinPopUp");
                    }
                    if (this.boxroomItem3_index == 3)
                    {
                        if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_03))
                        {
                            Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_03_icon;
                            this.wrongBoxroomItemName = Strings.string107;
                            Global._gui_AddInterface("BoxroomGameLoosePopUp");
                        }
                    }
                }
                else
                {
                    if (this.boxroomItem2_index == 3)
                    {
                        if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_03))
                        {
                            Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_03_icon;
                            this.wrongBoxroomItemName = Strings.string107;
                            Global._gui_AddInterface("BoxroomGameLoosePopUp");
                        }
                        if (this.boxroomItem3_index == 1)
                        {
                            if (Global._isShowHint)
                            {
                                GUI.Box(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                            }
                            if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_01))
                            {
                                Global._isShowHint = false;
                                Global.BoxroomGameWinIcon = Global.BoxroomGameItem_01_icon;
                                Global._gui_AddInterface("BoxroomGameWinPopUp");
                            }
                        }
                    }
                }
            }
            else
            {
                //**********************
                if (this.boxroomItem1_index == 3)
                {
                    if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_03))
                    {
                        Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_03_icon;
                        this.wrongBoxroomItemName = Strings.string107;
                        Global._gui_AddInterface("BoxroomGameLoosePopUp");
                    }
                    if (this.boxroomItem2_index == 1)
                    {
                        if (Global._isShowHint)
                        {
                            GUI.Box(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                        }
                        if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_01))
                        {
                            Global._isShowHint = false;
                            Global.BoxroomGameWinIcon = Global.BoxroomGameItem_01_icon;
                            Global._gui_AddInterface("BoxroomGameWinPopUp");
                        }
                        if (this.boxroomItem3_index == 2)
                        {
                            if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_02))
                            {
                                Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_02_icon;
                                this.wrongBoxroomItemName = Strings.string106;
                                Global._gui_AddInterface("BoxroomGameLoosePopUp");
                            }
                        }
                    }
                    else
                    {
                        if (this.boxroomItem2_index == 2)
                        {
                            if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_02))
                            {
                                Global.BoxroomGameLooseIcon = Global.BoxroomGameItem_02_icon;
                                this.wrongBoxroomItemName = Strings.string106;
                                Global._gui_AddInterface("BoxroomGameLoosePopUp");
                            }
                            if (this.boxroomItem3_index == 1)
                            {
                                if (Global._isShowHint)
                                {
                                    GUI.Box(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                                }
                                if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.BoxroomGameItem_01))
                                {
                                    Global._isShowHint = false;
                                    Global.BoxroomGameWinIcon = Global.BoxroomGameItem_01_icon;
                                    Global._gui_AddInterface("BoxroomGameWinPopUp");
                                }
                            }
                        }
                    }
                }
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (227 * Global.guiRatio), Screen.height - (197 * Global.guiRatio), 454 * Global.guiRatio, 96 * Global.guiRatio));
        if (!Global._isShowHint)
        {
            if (GUI.Button(new Rect(0, 0, 454 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_vegame_button_long))
            {
                Global._isShowHint = true;
                if (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) > 0)
                {
                    Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
                }
            }
            GUI.Box(new Rect(379 * Global.guiRatio, 10 * Global.guiRatio, 49 * Global.guiRatio, 70 * Global.guiRatio), "", this.gs_common.gui_vegame_stone);
        }
        else
        {
            GUI.Box(new Rect(0, 0, 454 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_vegame_button_long_d);
            GUI.Box(new Rect(379 * Global.guiRatio, 10 * Global.guiRatio, 49 * Global.guiRatio, 70 * Global.guiRatio), "", this.gs_common.gui_vegame_stone_d);
        }
        GUI.Label(new Rect(0, 16 * Global.guiRatio, 379 * Global.guiRatio, 60 * Global.guiRatio), Strings.string112, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void generateBoxroomItems()
    {
        if (this.boxroomItem1_index == 0)
        {
            this.boxroomItem1_index = Random.Range(1, 3);
        }
        if (!this._isBoxroomItemGenerate)
        {
            this._isBoxroomItemGenerate = true;
            if (this.boxroomItem1_index == 1)
            {
                this.validBoxroomItems = new int[] {2, 3};
                this.boxroomItem2_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                if (this.boxroomItem2_index == 2)
                {
                    this.validBoxroomItems = new int[] {3};
                    this.boxroomItem3_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                }
                else
                {
                    if (this.boxroomItem2_index == 3)
                    {
                        this.validBoxroomItems = new int[] {2};
                        this.boxroomItem3_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                    }
                }
            }
            else
            {
                //**********************
                if (this.boxroomItem1_index == 2)
                {
                    this.validBoxroomItems = new int[] {1, 3};
                    this.boxroomItem2_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                    if (this.boxroomItem2_index == 1)
                    {
                        this.validBoxroomItems = new int[] {3};
                        this.boxroomItem3_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                    }
                    else
                    {
                        if (this.boxroomItem2_index == 3)
                        {
                            this.validBoxroomItems = new int[] {1};
                            this.boxroomItem3_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                        }
                        else
                        {
                            if (this.boxroomItem2_index == 4)
                            {
                                this.validBoxroomItems = new int[] {1, 3};
                                this.boxroomItem3_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                                if (this.boxroomItem3_index == 1)
                                {
                                    this.boxroomItem4_index = 3;
                                }
                                else
                                {
                                    if (this.boxroomItem3_index == 3)
                                    {
                                        this.boxroomItem4_index = 1;
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    //**********************
                    if (this.boxroomItem1_index == 3)
                    {
                        this.validBoxroomItems = new int[] {1, 2};
                        this.boxroomItem2_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                        if (this.boxroomItem2_index == 1)
                        {
                            this.validBoxroomItems = new int[] {2};
                            this.boxroomItem3_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                        }
                        else
                        {
                            if (this.boxroomItem2_index == 2)
                            {
                                this.validBoxroomItems = new int[] {1};
                                this.boxroomItem3_index = this.validBoxroomItems[Random.Range(0, this.validBoxroomItems.Length)];
                            }
                        }
                    }
                }
            }
        }
    }

    public virtual void gui_BoxroomGameWinPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string108, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            this.boxroomItem1_index = 0;
            this.boxroomItem2_index = 0;
            this.boxroomItem3_index = 0;
            this._isBoxroomItemGenerate = false;
            if (Global._isBoxroomGame01)
            {
                Global._isBoxroomGame01 = false;
                Global._isBoxroomGame02 = true;
                this.generateBoxroomItems();
                Global._gui_SetInterface("BoxroomGameScreen");
            }
            if (!Global._isBoxroomGame01 && Global._isBoxroomGame02)
            {
                Global._isBoxroomGame02 = false;
                Global._isBoxroomGame03 = true;
                this.generateBoxroomItems();
                Global._gui_SetInterface("BoxroomGameScreen");
            }
        }
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.BoxroomGameWinIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 438 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string109, this.gs_font.font_b52_60_cb_white);
        if (Global._isBoxroomGame01)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.boxroomItem1_index = 0;
                this.boxroomItem2_index = 0;
                this.boxroomItem3_index = 0;
                this._isBoxroomItemGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isBoxroomGame01 = false;
                Global._isBoxroomGame02 = true;
                this.generateBoxroomItems();
                Global._gui_SetInterface("BoxroomGameScreen");
            }
        }
        if (Global._isBoxroomGame02)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.boxroomItem1_index = 0;
                this.boxroomItem2_index = 0;
                this.boxroomItem3_index = 0;
                this._isBoxroomItemGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isBoxroomGame02 = false;
                Global._isBoxroomGame03 = true;
                this.generateBoxroomItems();
                Global._gui_SetInterface("BoxroomGameScreen");
            }
        }
        if (Global._isBoxroomGame03)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                Global._gui_CloseInterface();
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isBoxroomGameComplete = true;
                Global._gui_SetInterface("VillaScreen");
            }
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_BoxroomGameLoosePopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid_sad);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string110, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
            this.boxroomItem1_index = 0;
            this.boxroomItem2_index = 0;
            this.boxroomItem3_index = 0;
            this._isBoxroomItemGenerate = false;
            this.generateBoxroomItems();
            Global._gui_CloseInterface();
        }
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.BoxroomGameLooseIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 438 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string111, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            if (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) > 0)
            {
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
            }
            this.boxroomItem1_index = 0;
            this.boxroomItem2_index = 0;
            this.boxroomItem3_index = 0;
            this._isBoxroomItemGenerate = false;
            this.generateBoxroomItems();
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string023, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    // *********************************** ИГРА ПРО ГРИБЫ (НОВАЯ ВЕРСИЯ) **************************************** //
    public virtual void gui_MushroomsGameScreen()
    {
        if (Global._isMushroomsGame01)
        {
            Global.MushroomsGameTitle = Strings.string204;
            Global.MushroomsGameItem_01 = this.gs_common.gui_minigame_mushroom_01;
            Global.MushroomsGameItem_01_icon = this.gs_common.gui_minigame_mushroom_01_icon;
            Global.MushroomsGameItem_02 = this.gs_common.gui_minigame_mushroom_02;
            Global.MushroomsGameItem_02_icon = this.gs_common.gui_minigame_mushroom_02_icon;
            Global.MushroomsGameItem_03 = this.gs_common.gui_minigame_mushroom_03;
            Global.MushroomsGameItem_03_icon = this.gs_common.gui_minigame_mushroom_03_icon;
        }
        else
        {
            if (Global._isMushroomsGame02)
            {
                Global.MushroomsGameTitle = Strings.string205;
                Global.MushroomsGameItem_01 = this.gs_common.gui_minigame_mushroom_03;
                Global.MushroomsGameItem_01_icon = this.gs_common.gui_minigame_mushroom_03_icon;
                Global.MushroomsGameItem_02 = this.gs_common.gui_minigame_mushroom_02;
                Global.MushroomsGameItem_02_icon = this.gs_common.gui_minigame_mushroom_02_icon;
                Global.MushroomsGameItem_03 = this.gs_common.gui_minigame_mushroom_01;
                Global.MushroomsGameItem_03_icon = this.gs_common.gui_minigame_mushroom_01_icon;
            }
            else
            {
                if (Global._isMushroomsGame03)
                {
                    Global.MushroomsGameTitle = Strings.string206;
                    Global.MushroomsGameItem_01 = this.gs_common.gui_minigame_mushroom_02;
                    Global.MushroomsGameItem_01_icon = this.gs_common.gui_minigame_mushroom_02_icon;
                    Global.MushroomsGameItem_02 = this.gs_common.gui_minigame_mushroom_04;
                    Global.MushroomsGameItem_02_icon = this.gs_common.gui_minigame_mushroom_04_icon;
                    Global.MushroomsGameItem_03 = this.gs_common.gui_minigame_mushroom_03;
                    Global.MushroomsGameItem_03_icon = this.gs_common.gui_minigame_mushroom_03_icon;
                }
            }
        }
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_vegame_background);
        GUI.Label(new Rect(0, 52 * Global.guiRatio, 1920 * Global.guiRatio, 60 * Global.guiRatio), Global.MushroomsGameTitle, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(20 * Global.guiRatio, 20 * Global.guiRatio, 66 * Global.guiRatio, 94 * Global.guiRatio), "", this.gs_common.gui_inventory_premium_icon);
        GUI.Label(new Rect(103 * Global.guiRatio, 35 * Global.guiRatio, 164 * Global.guiRatio, 60 * Global.guiRatio), Global.globalInventoryThingsArr[0]["val"].ToString(), this.gs_font.font_arial_60_l_white);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (702 * Global.guiRatio), (Screen.height / 2) - (290 * Global.guiRatio), 1404 * Global.guiRatio, 558 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1404 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_slots);
        if (this.mushroomsItem1_index == 1)
        {
            if (Global._isShowHint)
            {
                GUI.Box(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
            }
            if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_01))
            {
                Global._isShowHint = false;
                Global.MushroomsGameWinIcon = Global.MushroomsGameItem_01_icon;
                Global._gui_AddInterface("MushroomsGameWinPopUp");
            }
            if (this.mushroomsItem2_index == 2)
            {
                if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_02))
                {
                    Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_02_icon;
                    Global._gui_AddInterface("MushroomsGameLoosePopUp");
                }
                if (this.mushroomsItem3_index == 3)
                {
                    if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_03))
                    {
                        Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_03_icon;
                        Global._gui_AddInterface("MushroomsGameLoosePopUp");
                    }
                }
            }
            else
            {
                if (this.mushroomsItem2_index == 3)
                {
                    if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_03))
                    {
                        Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_03_icon;
                        Global._gui_AddInterface("MushroomsGameLoosePopUp");
                    }
                    if (this.mushroomsItem3_index == 2)
                    {
                        if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_02))
                        {
                            Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_02_icon;
                            Global._gui_AddInterface("MushroomsGameLoosePopUp");
                        }
                    }
                }
            }
        }
        else
        {
            //**********************
            if (this.mushroomsItem1_index == 2)
            {
                if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_02))
                {
                    Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_02_icon;
                    Global._gui_AddInterface("MushroomsGameLoosePopUp");
                }
                if (this.mushroomsItem2_index == 1)
                {
                    if (Global._isShowHint)
                    {
                        GUI.Box(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                    }
                    if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_01))
                    {
                        Global._isShowHint = false;
                        Global.MushroomsGameWinIcon = Global.MushroomsGameItem_01_icon;
                        Global._gui_AddInterface("MushroomsGameWinPopUp");
                    }
                    if (this.mushroomsItem3_index == 3)
                    {
                        if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_03))
                        {
                            Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_03_icon;
                            Global._gui_AddInterface("MushroomsGameLoosePopUp");
                        }
                    }
                }
                else
                {
                    if (this.mushroomsItem2_index == 3)
                    {
                        if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_03))
                        {
                            Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_03_icon;
                            Global._gui_AddInterface("MushroomsGameLoosePopUp");
                        }
                        if (this.mushroomsItem3_index == 1)
                        {
                            if (Global._isShowHint)
                            {
                                GUI.Box(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                            }
                            if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_01))
                            {
                                Global._isShowHint = false;
                                Global.MushroomsGameWinIcon = Global.MushroomsGameItem_01_icon;
                                Global._gui_AddInterface("MushroomsGameWinPopUp");
                            }
                        }
                    }
                }
            }
            else
            {
                //**********************
                if (this.mushroomsItem1_index == 3)
                {
                    if (GUI.Button(new Rect(0, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_03))
                    {
                        Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_03_icon;
                        Global._gui_AddInterface("MushroomsGameLoosePopUp");
                    }
                    if (this.mushroomsItem2_index == 1)
                    {
                        if (Global._isShowHint)
                        {
                            GUI.Box(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                        }
                        if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_01))
                        {
                            Global._isShowHint = false;
                            Global.MushroomsGameWinIcon = Global.MushroomsGameItem_01_icon;
                            Global._gui_AddInterface("MushroomsGameWinPopUp");
                        }
                        if (this.mushroomsItem3_index == 2)
                        {
                            if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_02))
                            {
                                Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_02_icon;
                                Global._gui_AddInterface("MushroomsGameLoosePopUp");
                            }
                        }
                    }
                    else
                    {
                        if (this.mushroomsItem2_index == 2)
                        {
                            if (GUI.Button(new Rect(484 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_02))
                            {
                                Global.MushroomsGameLooseIcon = Global.MushroomsGameItem_02_icon;
                                Global._gui_AddInterface("MushroomsGameLoosePopUp");
                            }
                            if (this.mushroomsItem3_index == 1)
                            {
                                if (Global._isShowHint)
                                {
                                    GUI.Box(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_vegame_hint);
                                }
                                if (GUI.Button(new Rect(968 * Global.guiRatio, 0, 436 * Global.guiRatio, 558 * Global.guiRatio), "", Global.MushroomsGameItem_01))
                                {
                                    Global._isShowHint = false;
                                    Global.MushroomsGameWinIcon = Global.MushroomsGameItem_01_icon;
                                    Global._gui_AddInterface("MushroomsGameWinPopUp");
                                }
                            }
                        }
                    }
                }
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (227 * Global.guiRatio), Screen.height - (197 * Global.guiRatio), 454 * Global.guiRatio, 96 * Global.guiRatio));
        if (!Global._isShowHint)
        {
            if (GUI.Button(new Rect(0, 0, 454 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_vegame_button_long))
            {
                Global._isShowHint = true;
                if (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) > 0)
                {
                    Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
                }
            }
            GUI.Box(new Rect(379 * Global.guiRatio, 10 * Global.guiRatio, 49 * Global.guiRatio, 70 * Global.guiRatio), "", this.gs_common.gui_vegame_stone);
        }
        else
        {
            GUI.Box(new Rect(0, 0, 454 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_vegame_button_long_d);
            GUI.Box(new Rect(379 * Global.guiRatio, 10 * Global.guiRatio, 49 * Global.guiRatio, 70 * Global.guiRatio), "", this.gs_common.gui_vegame_stone_d);
        }
        GUI.Label(new Rect(0, 16 * Global.guiRatio, 379 * Global.guiRatio, 60 * Global.guiRatio), Strings.string112, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void generateMushroomsItems()
    {
        if (this.mushroomsItem1_index == 0)
        {
            this.mushroomsItem1_index = Random.Range(1, 3);
        }
        if (!this._isMushroomsItemGenerate)
        {
            this._isMushroomsItemGenerate = true;
            if (this.mushroomsItem1_index == 1)
            {
                this.validMushroomsItems = new int[] {2, 3};
                this.mushroomsItem2_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                if (this.mushroomsItem2_index == 2)
                {
                    this.validMushroomsItems = new int[] {3};
                    this.mushroomsItem3_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                }
                else
                {
                    if (this.mushroomsItem2_index == 3)
                    {
                        this.validMushroomsItems = new int[] {2};
                        this.mushroomsItem3_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                    }
                }
            }
            else
            {
                //**********************
                if (this.mushroomsItem1_index == 2)
                {
                    this.validMushroomsItems = new int[] {1, 3};
                    this.mushroomsItem2_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                    if (this.mushroomsItem2_index == 1)
                    {
                        this.validMushroomsItems = new int[] {3};
                        this.mushroomsItem3_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                    }
                    else
                    {
                        if (this.mushroomsItem2_index == 3)
                        {
                            this.validMushroomsItems = new int[] {1};
                            this.mushroomsItem3_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                        }
                        else
                        {
                            if (this.mushroomsItem2_index == 4)
                            {
                                this.validMushroomsItems = new int[] {1, 3};
                                this.mushroomsItem3_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                                if (this.mushroomsItem3_index == 1)
                                {
                                    this.mushroomsItem4_index = 3;
                                }
                                else
                                {
                                    if (this.mushroomsItem3_index == 3)
                                    {
                                        this.mushroomsItem4_index = 1;
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    //**********************
                    if (this.mushroomsItem1_index == 3)
                    {
                        this.validMushroomsItems = new int[] {1, 2};
                        this.mushroomsItem2_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                        if (this.mushroomsItem2_index == 1)
                        {
                            this.validMushroomsItems = new int[] {2};
                            this.mushroomsItem3_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                        }
                        else
                        {
                            if (this.mushroomsItem2_index == 2)
                            {
                                this.validMushroomsItems = new int[] {1};
                                this.mushroomsItem3_index = this.validMushroomsItems[Random.Range(0, this.validMushroomsItems.Length)];
                            }
                        }
                    }
                }
            }
        }
    }

    public virtual void gui_MushroomsGameWinPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string108, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            this.mushroomsItem1_index = 0;
            this.mushroomsItem2_index = 0;
            this.mushroomsItem3_index = 0;
            this._isMushroomsItemGenerate = false;
            if (Global._isMushroomsGame01)
            {
                Global._isMushroomsGame01 = false;
                Global._isMushroomsGame02 = true;
                this.generateMushroomsItems();
                Global._gui_SetInterface("MushroomGameScreen");
            }
            if (!Global._isMushroomsGame01 && Global._isMushroomsGame02)
            {
                Global._isMushroomsGame02 = false;
                Global._isMushroomsGame03 = true;
                this.generateMushroomsItems();
                Global._gui_SetInterface("MushroomGameScreen");
            }
        }
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.MushroomsGameWinIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 438 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string109, this.gs_font.font_b52_60_cb_white);
        if (Global._isMushroomsGame01)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.mushroomsItem1_index = 0;
                this.mushroomsItem2_index = 0;
                this.mushroomsItem3_index = 0;
                this._isMushroomsItemGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isMushroomsGame01 = false;
                Global._isMushroomsGame02 = true;
                this.generateMushroomsItems();
                Global._gui_SetInterface("MushroomGameScreen");
            }
        }
        if (Global._isMushroomsGame02)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.mushroomsItem1_index = 0;
                this.mushroomsItem2_index = 0;
                this.mushroomsItem3_index = 0;
                this._isMushroomsItemGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isMushroomsGame02 = false;
                Global._isMushroomsGame03 = true;
                this.generateMushroomsItems();
                Global._gui_SetInterface("MushroomGameScreen");
            }
        }
        if (Global._isMushroomsGame03)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                Global._isMushroomsGameComplete = true;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._gui_CloseAllInterfaces();
                ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
                Global.UFOShowEntry = true;
                Global._isUFOScreen = false;
                Global._isPopUpOpen = true;
                Global._gui_SetInterface("WorldMap");
                Global._gui_AddInterface("TutorialMushroomEndPopUp");
            }
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_MushroomsGameLoosePopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid_sad);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string110, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
            this.mushroomsItem1_index = 0;
            this.mushroomsItem2_index = 0;
            this.mushroomsItem3_index = 0;
            this._isMushroomsItemGenerate = false;
            this.generateMushroomsItems();
            Global._gui_CloseInterface();
        }
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.MushroomsGameLooseIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 438 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string111, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            if (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) > 0)
            {
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
            }
            this.mushroomsItem1_index = 0;
            this.mushroomsItem2_index = 0;
            this.mushroomsItem3_index = 0;
            this._isMushroomsItemGenerate = false;
            this.generateMushroomsItems();
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string023, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    // ************************ HOG-1 ************************
    public virtual void gui_HOG1GameScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_hog1_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) + (60 * Global.guiRatio), (Screen.height / 2) + (278 * Global.guiRatio), 165 * Global.guiRatio, 141 * Global.guiRatio));

        {
            float _68 = Global.HOG1Item1Alpha;
            Color _69 = GUI.backgroundColor;
            _69.a = _68;
            GUI.backgroundColor = _69;
        }
        GUI.Box(new Rect(0, 0, 165 * Global.guiRatio, 141 * Global.guiRatio), "", this.gs_common.gui_hog1_item_swimming_mask);

        {
            float _70 = 1f;
            Color _71 = GUI.backgroundColor;
            _71.a = _70;
            GUI.backgroundColor = _71;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (663 * Global.guiRatio), (Screen.height / 2) - (256 * Global.guiRatio), 284 * Global.guiRatio, 631 * Global.guiRatio));

        {
            float _72 = Global.HOG1Item2Alpha;
            Color _73 = GUI.backgroundColor;
            _73.a = _72;
            GUI.backgroundColor = _73;
        }
        GUI.Box(new Rect(0, 0, 284 * Global.guiRatio, 631 * Global.guiRatio), "", this.gs_common.gui_hog1_item_blurf_board);

        {
            float _74 = 1f;
            Color _75 = GUI.backgroundColor;
            _75.a = _74;
            GUI.backgroundColor = _75;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (435 * Global.guiRatio), (Screen.height / 2) - (17 * Global.guiRatio), 127 * Global.guiRatio, 174 * Global.guiRatio));

        {
            float _76 = Global.HOG1Item3Alpha;
            Color _77 = GUI.backgroundColor;
            _77.a = _76;
            GUI.backgroundColor = _77;
        }
        GUI.Box(new Rect(0, 0, 127 * Global.guiRatio, 174 * Global.guiRatio), "", this.gs_common.gui_hog1_item_mikroskop);

        {
            float _78 = 1f;
            Color _79 = GUI.backgroundColor;
            _79.a = _78;
            GUI.backgroundColor = _79;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (574 * Global.guiRatio), (Screen.height / 2) + (35 * Global.guiRatio), 160 * Global.guiRatio, 106 * Global.guiRatio));

        {
            float _80 = Global.HOG1Item4Alpha;
            Color _81 = GUI.backgroundColor;
            _81.a = _80;
            GUI.backgroundColor = _81;
        }
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 106 * Global.guiRatio), "", this.gs_common.gui_hog1_item_doll);

        {
            float _82 = 1f;
            Color _83 = GUI.backgroundColor;
            _83.a = _82;
            GUI.backgroundColor = _83;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (705 * Global.guiRatio), Screen.height / 2, 163 * Global.guiRatio, 170 * Global.guiRatio));

        {
            float _84 = Global.HOG1Item5Alpha;
            Color _85 = GUI.backgroundColor;
            _85.a = _84;
            GUI.backgroundColor = _85;
        }
        GUI.Box(new Rect(0, 0, 163 * Global.guiRatio, 170 * Global.guiRatio), "", this.gs_common.gui_hog1_item_bear);

        {
            float _86 = 1f;
            Color _87 = GUI.backgroundColor;
            _87.a = _86;
            GUI.backgroundColor = _87;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (813 * Global.guiRatio), (Screen.height / 2) + (145 * Global.guiRatio), 193 * Global.guiRatio, 213 * Global.guiRatio));

        {
            float _88 = Global.HOG1Item6Alpha;
            Color _89 = GUI.backgroundColor;
            _89.a = _88;
            GUI.backgroundColor = _89;
        }
        GUI.Box(new Rect(0, 0, 193 * Global.guiRatio, 213 * Global.guiRatio), "", this.gs_common.gui_hog1_item_notebook);

        {
            float _90 = 1f;
            Color _91 = GUI.backgroundColor;
            _91.a = _90;
            GUI.backgroundColor = _91;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (715 * Global.guiRatio), (Screen.height / 2) + (287 * Global.guiRatio), 166 * Global.guiRatio, 149 * Global.guiRatio));

        {
            float _92 = Global.HOG1Item7Alpha;
            Color _93 = GUI.backgroundColor;
            _93.a = _92;
            GUI.backgroundColor = _93;
        }
        GUI.Box(new Rect(0, 0, 166 * Global.guiRatio, 149 * Global.guiRatio), "", this.gs_common.gui_hog1_item_book);

        {
            float _94 = 1f;
            Color _95 = GUI.backgroundColor;
            _95.a = _94;
            GUI.backgroundColor = _95;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (486 * Global.guiRatio), (Screen.height / 2) - (77 * Global.guiRatio), 63 * Global.guiRatio, 15 * Global.guiRatio));

        {
            float _96 = Global.HOG1Item8Alpha;
            Color _97 = GUI.backgroundColor;
            _97.a = _96;
            GUI.backgroundColor = _97;
        }
        GUI.Box(new Rect(0, 0, 63 * Global.guiRatio, 15 * Global.guiRatio), "", this.gs_common.gui_hog1_item_virt);

        {
            float _98 = 1f;
            Color _99 = GUI.backgroundColor;
            _99.a = _98;
            GUI.backgroundColor = _99;
        }
        GUI.EndGroup();
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_hog1_light);
        if (Global._isShowHintHOG)
        {
            if (!Global._isHOG1Item1Found)
            {
                this.showHOGHint((Screen.width / 2) + (135 * Global.guiRatio), (Screen.height / 2) + (342 * Global.guiRatio));
            }
            else
            {
                if (!Global._isHOG1Item2Found)
                {
                    this.showHOGHint((Screen.width / 2) + (800 * Global.guiRatio), (Screen.height / 2) + (55 * Global.guiRatio));
                }
                else
                {
                    if (!Global._isHOG1Item3Found)
                    {
                        this.showHOGHint((Screen.width / 2) + (493 * Global.guiRatio), (Screen.height / 2) + (17 * Global.guiRatio));
                    }
                    else
                    {
                        if (!Global._isHOG1Item4Found)
                        {
                            this.showHOGHint((Screen.width / 2) - (499 * Global.guiRatio), (Screen.height / 2) + (83 * Global.guiRatio));
                        }
                        else
                        {
                            if (!Global._isHOG1Item5Found)
                            {
                                this.showHOGHint((Screen.width / 2) - (629 * Global.guiRatio), (Screen.height / 2) + (80 * Global.guiRatio));
                            }
                            else
                            {
                                if (!Global._isHOG1Item6Found)
                                {
                                    this.showHOGHint((Screen.width / 2) - (721 * Global.guiRatio), (Screen.height / 2) + (247 * Global.guiRatio));
                                }
                                else
                                {
                                    if (!Global._isHOG1Item7Found)
                                    {
                                        this.showHOGHint((Screen.width / 2) - (637 * Global.guiRatio), (Screen.height / 2) + (338 * Global.guiRatio));
                                    }
                                    else
                                    {
                                        if (!Global._isHOG1Item8Found)
                                        {
                                            this.showHOGHint((Screen.width / 2) + (513 * Global.guiRatio), (Screen.height / 2) - (75 * Global.guiRatio));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (!Global._isHOG1Item1Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (60 * Global.guiRatio), (Screen.height / 2) + (278 * Global.guiRatio), 165 * Global.guiRatio, 141 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG1Item1Alpha);
                Global.globalBus.SendMessage("setHOG1Item1Transparent", Global.HOG1Item1Alpha);
                Global._isHOG1Item1Click = true;
                Global._isHOG1Item1Found = true;
                if ((((((Global._isHOG1Item2Found && Global._isHOG1Item3Found) && Global._isHOG1Item4Found) && Global._isHOG1Item5Found) && Global._isHOG1Item6Found) && Global._isHOG1Item7Found) && Global._isHOG1Item8Found)
                {
                    Global._isHOG1Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog1_icon_virt;
                    Global.HOGItemName = Strings.string134;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG1Item2Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (663 * Global.guiRatio), (Screen.height / 2) - (256 * Global.guiRatio), 284 * Global.guiRatio, 631 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG1Item2Alpha);
                Global.globalBus.SendMessage("setHOG1Item2Transparent", Global.HOG1Item2Alpha);
                Global._isHOG1Item2Click = true;
                Global._isHOG1Item2Found = true;
                if ((((((Global._isHOG1Item1Found && Global._isHOG1Item3Found) && Global._isHOG1Item4Found) && Global._isHOG1Item5Found) && Global._isHOG1Item6Found) && Global._isHOG1Item7Found) && Global._isHOG1Item8Found)
                {
                    Global._isHOG1Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog1_icon_virt;
                    Global.HOGItemName = Strings.string134;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG1Item3Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (435 * Global.guiRatio), (Screen.height / 2) - (17 * Global.guiRatio), 127 * Global.guiRatio, 174 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG1Item3Alpha);
                Global.globalBus.SendMessage("setHOG1Item3Transparent", Global.HOG1Item3Alpha);
                Global._isHOG1Item3Click = true;
                Global._isHOG1Item3Found = true;
                if ((((((Global._isHOG1Item1Found && Global._isHOG1Item2Found) && Global._isHOG1Item4Found) && Global._isHOG1Item5Found) && Global._isHOG1Item6Found) && Global._isHOG1Item7Found) && Global._isHOG1Item8Found)
                {
                    Global._isHOG1Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog1_icon_virt;
                    Global.HOGItemName = Strings.string134;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG1Item4Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (574 * Global.guiRatio), (Screen.height / 2) + (35 * Global.guiRatio), 160 * Global.guiRatio, 106 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG1Item4Alpha);
                Global.globalBus.SendMessage("setHOG1Item4Transparent", Global.HOG1Item4Alpha);
                Global._isHOG1Item4Click = true;
                Global._isHOG1Item4Found = true;
                if ((((((Global._isHOG1Item1Found && Global._isHOG1Item2Found) && Global._isHOG1Item3Found) && Global._isHOG1Item5Found) && Global._isHOG1Item6Found) && Global._isHOG1Item7Found) && Global._isHOG1Item8Found)
                {
                    Global._isHOG1Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog1_icon_virt;
                    Global.HOGItemName = Strings.string134;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG1Item5Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (705 * Global.guiRatio), Screen.height / 2, 163 * Global.guiRatio, 170 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG1Item5Alpha);
                Global.globalBus.SendMessage("setHOG1Item5Transparent", Global.HOG1Item5Alpha);
                Global._isHOG1Item5Click = true;
                Global._isHOG1Item5Found = true;
                if ((((((Global._isHOG1Item1Found && Global._isHOG1Item2Found) && Global._isHOG1Item3Found) && Global._isHOG1Item4Found) && Global._isHOG1Item6Found) && Global._isHOG1Item7Found) && Global._isHOG1Item8Found)
                {
                    Global._isHOG1Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog1_icon_virt;
                    Global.HOGItemName = Strings.string134;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG1Item6Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (813 * Global.guiRatio), (Screen.height / 2) + (145 * Global.guiRatio), 193 * Global.guiRatio, 213 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG1Item6Alpha);
                Global.globalBus.SendMessage("setHOG1Item6Transparent", Global.HOG1Item6Alpha);
                Global._isHOG1Item6Click = true;
                Global._isHOG1Item6Found = true;
                if ((((((Global._isHOG1Item1Found && Global._isHOG1Item2Found) && Global._isHOG1Item3Found) && Global._isHOG1Item4Found) && Global._isHOG1Item5Found) && Global._isHOG1Item7Found) && Global._isHOG1Item8Found)
                {
                    Global._isHOG1Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog1_icon_virt;
                    Global.HOGItemName = Strings.string134;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG1Item7Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (715 * Global.guiRatio), (Screen.height / 2) + (287 * Global.guiRatio), 166 * Global.guiRatio, 149 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG1Item7Alpha);
                Global.globalBus.SendMessage("setHOG1Item7Transparent", Global.HOG1Item7Alpha);
                Global._isHOG1Item7Click = true;
                Global._isHOG1Item7Found = true;
                if ((((((Global._isHOG1Item1Found && Global._isHOG1Item2Found) && Global._isHOG1Item3Found) && Global._isHOG1Item4Found) && Global._isHOG1Item5Found) && Global._isHOG1Item6Found) && Global._isHOG1Item8Found)
                {
                    Global._isHOG1Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog1_icon_virt;
                    Global.HOGItemName = Strings.string134;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG1Item8Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (486 * Global.guiRatio), (Screen.height / 2) - (77 * Global.guiRatio), 63 * Global.guiRatio, 15 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG1Item8Alpha);
                Global.globalBus.SendMessage("setHOG1Item8Transparent", Global.HOG1Item8Alpha);
                Global._isHOG1Item8Click = true;
                Global._isHOG1Item8Found = true;
                if ((((((Global._isHOG1Item1Found && Global._isHOG1Item2Found) && Global._isHOG1Item3Found) && Global._isHOG1Item4Found) && Global._isHOG1Item5Found) && Global._isHOG1Item6Found) && Global._isHOG1Item7Found)
                {
                    Global._isHOG1Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog1_icon_virt;
                    Global.HOGItemName = Strings.string134;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        GUI.BeginGroup(new Rect(0, Screen.height - (150 * Global.guiRatio), 1920 * Global.guiRatio, 150 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 150 * Global.guiRatio), "", this.gs_common.gui_hogscreen_panel);
        GUI.BeginGroup(new Rect(245 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog1_icon_swimming_mask);
        if (Global._isHOG1Item1Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(430 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog1_icon_blurf_board);
        if (Global._isHOG1Item2Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(615 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog1_icon_mikroskop);
        if (Global._isHOG1Item3Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(800 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog1_icon_doll);
        if (Global._isHOG1Item4Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(987 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog1_icon_bear);
        if (Global._isHOG1Item5Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(1172 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog1_icon_notebook);
        if (Global._isHOG1Item6Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(1357 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog1_icon_book);
        if (Global._isHOG1Item7Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(1542 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        //GUI.Box(Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", gs_common.gui_hogscreen_goldenframe);
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog1_icon_virt);
        if (!Global._isHOG1Item8Found)
        {
            this.someVectorGoldenHOPA = Global.GUIAniTexture(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), this.gs_common.gui_hog1_virt_sheet.normal.background, 8, 4, 0.25f, this.someVectorGoldenHOPA, false);
        }
        if (Global._isHOG1Item8Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        if (!Global._isShowHintHOG)
        {
            if (GUI.Button(new Rect(1745 * Global.guiRatio, 6 * Global.guiRatio, 145 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_hogscreen_button_help))
            {
                Global._isShowHintHOG = true;
                Global.hogFXsize = 0;
                Global.hogFXcoord = 0;
                Global.HOGhintAlpha = 1f;
                this.StartCoroutine(this.resizeHOGHint());
            }
        }
        else
        {
            GUI.Box(new Rect(1745 * Global.guiRatio, 6 * Global.guiRatio, 145 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_hogscreen_button_help);
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    // ************************ HOG-2 ************************
    public virtual void gui_HOG2GameScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_hog2_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) + (610 * Global.guiRatio), (Screen.height / 2) - (13 * Global.guiRatio), 92 * Global.guiRatio, 107 * Global.guiRatio));

        {
            float _100 = Global.HOG2Item1Alpha;
            Color _101 = GUI.backgroundColor;
            _101.a = _100;
            GUI.backgroundColor = _101;
        }
        GUI.Box(new Rect(0, 0, 92 * Global.guiRatio, 107 * Global.guiRatio), "", this.gs_common.gui_hog2_item_dinosaur);

        {
            float _102 = 1f;
            Color _103 = GUI.backgroundColor;
            _103.a = _102;
            GUI.backgroundColor = _103;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (199 * Global.guiRatio), (Screen.height / 2) - (95 * Global.guiRatio), 61 * Global.guiRatio, 65 * Global.guiRatio));

        {
            float _104 = Global.HOG2Item2Alpha;
            Color _105 = GUI.backgroundColor;
            _105.a = _104;
            GUI.backgroundColor = _105;
        }
        GUI.Box(new Rect(0, 0, 61 * Global.guiRatio, 65 * Global.guiRatio), "", this.gs_common.gui_hog2_item_ammonit);

        {
            float _106 = 1f;
            Color _107 = GUI.backgroundColor;
            _107.a = _106;
            GUI.backgroundColor = _107;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (251 * Global.guiRatio), (Screen.height / 2) + (97 * Global.guiRatio), 151 * Global.guiRatio, 118 * Global.guiRatio));

        {
            float _108 = Global.HOG2Item3Alpha;
            Color _109 = GUI.backgroundColor;
            _109.a = _108;
            GUI.backgroundColor = _109;
        }
        GUI.Box(new Rect(0, 0, 151 * Global.guiRatio, 118 * Global.guiRatio), "", this.gs_common.gui_hog2_item_locomotive);

        {
            float _110 = 1f;
            Color _111 = GUI.backgroundColor;
            _111.a = _110;
            GUI.backgroundColor = _111;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (333 * Global.guiRatio), (Screen.height / 2) + (241 * Global.guiRatio), 155 * Global.guiRatio, 138 * Global.guiRatio));

        {
            float _112 = Global.HOG2Item4Alpha;
            Color _113 = GUI.backgroundColor;
            _113.a = _112;
            GUI.backgroundColor = _113;
        }
        GUI.Box(new Rect(0, 0, 155 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_hog2_item_statue_egypt);

        {
            float _114 = 1f;
            Color _115 = GUI.backgroundColor;
            _115.a = _114;
            GUI.backgroundColor = _115;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (475 * Global.guiRatio), (Screen.height / 2) + (95 * Global.guiRatio), 87 * Global.guiRatio, 94 * Global.guiRatio));

        {
            float _116 = Global.HOG2Item5Alpha;
            Color _117 = GUI.backgroundColor;
            _117.a = _116;
            GUI.backgroundColor = _117;
        }
        GUI.Box(new Rect(0, 0, 87 * Global.guiRatio, 94 * Global.guiRatio), "", this.gs_common.gui_hog2_item_ship);

        {
            float _118 = 1f;
            Color _119 = GUI.backgroundColor;
            _119.a = _118;
            GUI.backgroundColor = _119;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (101 * Global.guiRatio), (Screen.height / 2) - (209 * Global.guiRatio), 41 * Global.guiRatio, 74 * Global.guiRatio));

        {
            float _120 = Global.HOG2Item6Alpha;
            Color _121 = GUI.backgroundColor;
            _121.a = _120;
            GUI.backgroundColor = _121;
        }
        GUI.Box(new Rect(0, 0, 41 * Global.guiRatio, 74 * Global.guiRatio), "", this.gs_common.gui_hog2_item_legionnaire);

        {
            float _122 = 1f;
            Color _123 = GUI.backgroundColor;
            _123.a = _122;
            GUI.backgroundColor = _123;
        }
        GUI.EndGroup();
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_hog2_light);
        if (Global._isShowHintHOG)
        {
            if (!Global._isHOG2Item1Found)
            {
                this.showHOGHint((Screen.width / 2) + (651 * Global.guiRatio), (Screen.height / 2) + (35 * Global.guiRatio));
            }
            else
            {
                if (!Global._isHOG2Item2Found)
                {
                    this.showHOGHint((Screen.width / 2) + (225 * Global.guiRatio), (Screen.height / 2) - (67 * Global.guiRatio));
                }
                else
                {
                    if (!Global._isHOG2Item3Found)
                    {
                        this.showHOGHint((Screen.width / 2) - (181 * Global.guiRatio), (Screen.height / 2) + (150 * Global.guiRatio));
                    }
                    else
                    {
                        if (!Global._isHOG2Item4Found)
                        {
                            this.showHOGHint((Screen.width / 2) + (405 * Global.guiRatio), (Screen.height / 2) + (305 * Global.guiRatio));
                        }
                        else
                        {
                            if (!Global._isHOG2Item5Found)
                            {
                                this.showHOGHint((Screen.width / 2) - (436 * Global.guiRatio), (Screen.height / 2) + (137 * Global.guiRatio));
                            }
                            else
                            {
                                if (!Global._isHOG2Item6Found)
                                {
                                    this.showHOGHint((Screen.width / 2) + (116 * Global.guiRatio), (Screen.height / 2) - (177 * Global.guiRatio));
                                }
                            }
                        }
                    }
                }
            }
        }
        if (!Global._isHOG2Item1Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (610 * Global.guiRatio), (Screen.height / 2) - (13 * Global.guiRatio), 92 * Global.guiRatio, 107 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG2Item1Alpha);
                Global.globalBus.SendMessage("setHOG2Item1Transparent", Global.HOG2Item1Alpha);
                Global._isHOG2Item1Click = true;
                Global._isHOG2Item1Found = true;
                if ((((Global._isHOG2Item2Found && Global._isHOG2Item3Found) && Global._isHOG2Item4Found) && Global._isHOG2Item5Found) && Global._isHOG2Item6Found)
                {
                    Global._isHOG2Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog2_item_ammonit;
                    Global.HOGItemName = Strings.string135;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG2Item2Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (199 * Global.guiRatio), (Screen.height / 2) - (95 * Global.guiRatio), 61 * Global.guiRatio, 65 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG2Item2Alpha);
                Global.globalBus.SendMessage("setHOG2Item2Transparent", Global.HOG2Item2Alpha);
                Global._isHOG2Item2Click = true;
                Global._isHOG2Item2Found = true;
                if ((((Global._isHOG2Item1Found && Global._isHOG2Item3Found) && Global._isHOG2Item4Found) && Global._isHOG2Item5Found) && Global._isHOG2Item6Found)
                {
                    Global._isHOG2Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog2_item_ammonit;
                    Global.HOGItemName = Strings.string135;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG2Item3Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (251 * Global.guiRatio), (Screen.height / 2) + (97 * Global.guiRatio), 151 * Global.guiRatio, 118 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG2Item3Alpha);
                Global.globalBus.SendMessage("setHOG2Item3Transparent", Global.HOG2Item3Alpha);
                Global._isHOG2Item3Click = true;
                Global._isHOG2Item3Found = true;
                if ((((Global._isHOG2Item1Found && Global._isHOG2Item2Found) && Global._isHOG2Item4Found) && Global._isHOG2Item5Found) && Global._isHOG2Item6Found)
                {
                    Global._isHOG2Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog2_item_ammonit;
                    Global.HOGItemName = Strings.string135;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG2Item4Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (333 * Global.guiRatio), (Screen.height / 2) + (241 * Global.guiRatio), 155 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG2Item4Alpha);
                Global.globalBus.SendMessage("setHOG2Item4Transparent", Global.HOG2Item4Alpha);
                Global._isHOG2Item4Click = true;
                Global._isHOG2Item4Found = true;
                if ((((Global._isHOG2Item1Found && Global._isHOG2Item2Found) && Global._isHOG2Item3Found) && Global._isHOG2Item5Found) && Global._isHOG2Item6Found)
                {
                    Global._isHOG2Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog2_item_ammonit;
                    Global.HOGItemName = Strings.string135;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG2Item5Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (475 * Global.guiRatio), (Screen.height / 2) + (95 * Global.guiRatio), 87 * Global.guiRatio, 94 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG2Item5Alpha);
                Global.globalBus.SendMessage("setHOG2Item5Transparent", Global.HOG2Item5Alpha);
                Global._isHOG2Item5Click = true;
                Global._isHOG2Item5Found = true;
                if ((((Global._isHOG2Item1Found && Global._isHOG2Item2Found) && Global._isHOG2Item3Found) && Global._isHOG2Item4Found) && Global._isHOG2Item6Found)
                {
                    Global._isHOG2Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog2_item_ammonit;
                    Global.HOGItemName = Strings.string135;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG2Item6Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (101 * Global.guiRatio), (Screen.height / 2) - (209 * Global.guiRatio), 41 * Global.guiRatio, 74 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG2Item6Alpha);
                Global.globalBus.SendMessage("setHOG2Item6Transparent", Global.HOG2Item6Alpha);
                Global._isHOG2Item6Click = true;
                Global._isHOG2Item6Found = true;
                if ((((Global._isHOG2Item1Found && Global._isHOG2Item2Found) && Global._isHOG2Item3Found) && Global._isHOG2Item4Found) && Global._isHOG2Item5Found)
                {
                    Global._isHOG2Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog2_item_ammonit;
                    Global.HOGItemName = Strings.string135;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        GUI.BeginGroup(new Rect(0, Screen.height - (150 * Global.guiRatio), 1920 * Global.guiRatio, 150 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 150 * Global.guiRatio), "", this.gs_common.gui_hogscreen_panel);
        /*GUI.BeginGroup(Rect(245 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
                GUI.Box(Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", gs_common.gui_hog1_icon_swimming_mask);
                if (Global._isHOG1Item1Found)
                {
                    GUI.Box(Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", gs_common.gui_hogscreen_found);
                }
            GUI.EndGroup();*/
        GUI.BeginGroup(new Rect(430 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog2_icon_dinosaur);
        if (Global._isHOG2Item1Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(615 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog2_icon_ammonit);
        if (!Global._isHOG2Item2Found)
        {
            this.someVectorGoldenHOPA = Global.GUIAniTexture(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), this.gs_common.gui_hog2_ammonit_sheet.normal.background, 8, 4, 0.25f, this.someVectorGoldenHOPA, false);
        }
        if (Global._isHOG2Item2Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(800 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog2_icon_locomotive);
        if (Global._isHOG2Item3Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(987 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog2_icon_statue_egypt);
        if (Global._isHOG2Item4Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(1172 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog2_icon_ship);
        if (Global._isHOG2Item5Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(1357 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog2_icon_legionnaire);
        if (Global._isHOG2Item6Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        if (!Global._isShowHintHOG)
        {
            if (GUI.Button(new Rect(1745 * Global.guiRatio, 6 * Global.guiRatio, 145 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_hogscreen_button_help))
            {
                Global._isShowHintHOG = true;
                Global.hogFXsize = 0;
                Global.hogFXcoord = 0;
                Global.HOGhintAlpha = 1f;
                this.StartCoroutine(this.resizeHOGHint());
            }
        }
        else
        {
            GUI.Box(new Rect(1745 * Global.guiRatio, 6 * Global.guiRatio, 145 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_hogscreen_button_help);
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    // ************************ HOG-3 ************************
    public virtual void gui_HOG3GameScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_hog3_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (717 * Global.guiRatio), (Screen.height / 2) - (52 * Global.guiRatio), 190 * Global.guiRatio, 245 * Global.guiRatio));

        {
            float _124 = Global.HOG3Item1Alpha;
            Color _125 = GUI.backgroundColor;
            _125.a = _124;
            GUI.backgroundColor = _125;
        }
        GUI.Box(new Rect(0, 0, 190 * Global.guiRatio, 245 * Global.guiRatio), "", this.gs_common.gui_hog3_item_watering);

        {
            float _126 = 1f;
            Color _127 = GUI.backgroundColor;
            _127.a = _126;
            GUI.backgroundColor = _127;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (803 * Global.guiRatio), (Screen.height / 2) + (177 * Global.guiRatio), 167 * Global.guiRatio, 86 * Global.guiRatio));

        {
            float _128 = Global.HOG3Item2Alpha;
            Color _129 = GUI.backgroundColor;
            _129.a = _128;
            GUI.backgroundColor = _129;
        }
        GUI.Box(new Rect(0, 0, 167 * Global.guiRatio, 86 * Global.guiRatio), "", this.gs_common.gui_hog3_item_spray);

        {
            float _130 = 1f;
            Color _131 = GUI.backgroundColor;
            _131.a = _130;
            GUI.backgroundColor = _131;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (534 * Global.guiRatio), (Screen.height / 2) + (115 * Global.guiRatio), 142 * Global.guiRatio, 131 * Global.guiRatio));

        {
            float _132 = Global.HOG3Item3Alpha;
            Color _133 = GUI.backgroundColor;
            _133.a = _132;
            GUI.backgroundColor = _133;
        }
        GUI.Box(new Rect(0, 0, 142 * Global.guiRatio, 131 * Global.guiRatio), "", this.gs_common.gui_hog3_item_toaster);

        {
            float _134 = 1f;
            Color _135 = GUI.backgroundColor;
            _135.a = _134;
            GUI.backgroundColor = _135;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (282 * Global.guiRatio), (Screen.height / 2) + (106 * Global.guiRatio), 344 * Global.guiRatio, 295 * Global.guiRatio));

        {
            float _136 = Global.HOG3Item4Alpha;
            Color _137 = GUI.backgroundColor;
            _137.a = _136;
            GUI.backgroundColor = _137;
        }
        GUI.Box(new Rect(0, 0, 344 * Global.guiRatio, 295 * Global.guiRatio), "", this.gs_common.gui_hog3_item_tv);

        {
            float _138 = 1f;
            Color _139 = GUI.backgroundColor;
            _139.a = _138;
            GUI.backgroundColor = _139;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (117 * Global.guiRatio), (Screen.height / 2) + (163 * Global.guiRatio), 214 * Global.guiRatio, 76 * Global.guiRatio));

        {
            float _140 = Global.HOG3Item5Alpha;
            Color _141 = GUI.backgroundColor;
            _141.a = _140;
            GUI.backgroundColor = _141;
        }
        GUI.Box(new Rect(0, 0, 214 * Global.guiRatio, 76 * Global.guiRatio), "", this.gs_common.gui_hog3_item_hammer);

        {
            float _142 = 1f;
            Color _143 = GUI.backgroundColor;
            _143.a = _142;
            GUI.backgroundColor = _143;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (570 * Global.guiRatio), (Screen.height / 2) - (324 * Global.guiRatio), 218 * Global.guiRatio, 234 * Global.guiRatio));

        {
            float _144 = Global.HOG3Item6Alpha;
            Color _145 = GUI.backgroundColor;
            _145.a = _144;
            GUI.backgroundColor = _145;
        }
        GUI.Box(new Rect(0, 0, 218 * Global.guiRatio, 234 * Global.guiRatio), "", this.gs_common.gui_hog3_item_recorder);

        {
            float _146 = 1f;
            Color _147 = GUI.backgroundColor;
            _147.a = _146;
            GUI.backgroundColor = _147;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (439 * Global.guiRatio), (Screen.height / 2) - (191 * Global.guiRatio), 182 * Global.guiRatio, 539 * Global.guiRatio));

        {
            float _148 = Global.HOG3Item7Alpha;
            Color _149 = GUI.backgroundColor;
            _149.a = _148;
            GUI.backgroundColor = _149;
        }
        GUI.Box(new Rect(0, 0, 182 * Global.guiRatio, 539 * Global.guiRatio), "", this.gs_common.gui_hog3_item_fishrod);

        {
            float _150 = 1f;
            Color _151 = GUI.backgroundColor;
            _151.a = _150;
            GUI.backgroundColor = _151;
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (564 * Global.guiRatio), (Screen.height / 2) + (115 * Global.guiRatio), 204 * Global.guiRatio, 299 * Global.guiRatio));

        {
            float _152 = Global.HOG3Item8Alpha;
            Color _153 = GUI.backgroundColor;
            _153.a = _152;
            GUI.backgroundColor = _153;
        }
        GUI.Box(new Rect(0, 0, 204 * Global.guiRatio, 299 * Global.guiRatio), "", this.gs_common.gui_hog3_item_extinguisher);

        {
            float _154 = 1f;
            Color _155 = GUI.backgroundColor;
            _155.a = _154;
            GUI.backgroundColor = _155;
        }
        GUI.EndGroup();
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_hog3_foreground);
        if (Global._isShowHintHOG)
        {
            if (!Global._isHOG3Item1Found)
            {
                this.showHOGHint((Screen.width / 2) - (622 * Global.guiRatio), (Screen.height / 2) + (71 * Global.guiRatio));
            }
            else
            {
                if (!Global._isHOG3Item2Found)
                {
                    this.showHOGHint((Screen.width / 2) - (719 * Global.guiRatio), (Screen.height / 2) + (220 * Global.guiRatio));
                }
                else
                {
                    if (!Global._isHOG3Item3Found)
                    {
                        this.showHOGHint((Screen.width / 2) - (463 * Global.guiRatio), (Screen.height / 2) + (181 * Global.guiRatio));
                    }
                    else
                    {
                        if (!Global._isHOG3Item4Found)
                        {
                            this.showHOGHint((Screen.width / 2) - (110 * Global.guiRatio), (Screen.height / 2) + (254 * Global.guiRatio));
                        }
                        else
                        {
                            if (!Global._isHOG3Item5Found)
                            {
                                this.showHOGHint((Screen.width / 2) + (224 * Global.guiRatio), (Screen.height / 2) + (201 * Global.guiRatio));
                            }
                            else
                            {
                                if (!Global._isHOG3Item6Found)
                                {
                                    this.showHOGHint((Screen.width / 2) + (679 * Global.guiRatio), (Screen.height / 2) - (207 * Global.guiRatio));
                                }
                                else
                                {
                                    if (!Global._isHOG3Item7Found)
                                    {
                                        this.showHOGHint((Screen.width / 2) + (530 * Global.guiRatio), (Screen.height / 2) + (79 * Global.guiRatio));
                                    }
                                    else
                                    {
                                        if (!Global._isHOG3Item8Found)
                                        {
                                            this.showHOGHint((Screen.width / 2) + (628 * Global.guiRatio), (Screen.height / 2) + (280 * Global.guiRatio));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (!Global._isHOG3Item1Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (717 * Global.guiRatio), (Screen.height / 2) - (52 * Global.guiRatio), 190 * Global.guiRatio, 245 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG3Item1Alpha);
                Global.globalBus.SendMessage("setHOG3Item1Transparent", Global.HOG3Item1Alpha);
                Global._isHOG3Item1Click = true;
                Global._isHOG3Item1Found = true;
                if ((((((Global._isHOG3Item2Found && Global._isHOG3Item3Found) && Global._isHOG3Item4Found) && Global._isHOG3Item5Found) && Global._isHOG3Item6Found) && Global._isHOG3Item7Found) && Global._isHOG3Item8Found)
                {
                    Global._isHOG3Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog3_icon_tv;
                    Global.HOGItemName = Strings.string181;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG3Item2Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (803 * Global.guiRatio), (Screen.height / 2) + (177 * Global.guiRatio), 167 * Global.guiRatio, 86 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG3Item2Alpha);
                Global.globalBus.SendMessage("setHOG3Item2Transparent", Global.HOG3Item2Alpha);
                Global._isHOG3Item2Click = true;
                Global._isHOG3Item2Found = true;
                if ((((((Global._isHOG3Item1Found && Global._isHOG3Item3Found) && Global._isHOG3Item4Found) && Global._isHOG3Item5Found) && Global._isHOG3Item6Found) && Global._isHOG3Item7Found) && Global._isHOG3Item8Found)
                {
                    Global._isHOG3Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog3_icon_tv;
                    Global.HOGItemName = Strings.string181;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG3Item3Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (534 * Global.guiRatio), (Screen.height / 2) + (115 * Global.guiRatio), 142 * Global.guiRatio, 131 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG3Item3Alpha);
                Global.globalBus.SendMessage("setHOG3Item3Transparent", Global.HOG3Item3Alpha);
                Global._isHOG3Item3Click = true;
                Global._isHOG3Item3Found = true;
                if ((((((Global._isHOG3Item1Found && Global._isHOG3Item2Found) && Global._isHOG3Item4Found) && Global._isHOG3Item5Found) && Global._isHOG3Item6Found) && Global._isHOG3Item7Found) && Global._isHOG3Item8Found)
                {
                    Global._isHOG3Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog3_icon_tv;
                    Global.HOGItemName = Strings.string181;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG3Item4Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) - (282 * Global.guiRatio), (Screen.height / 2) + (106 * Global.guiRatio), 344 * Global.guiRatio, 295 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG3Item4Alpha);
                Global.globalBus.SendMessage("setHOG3Item4Transparent", Global.HOG3Item4Alpha);
                Global._isHOG3Item4Click = true;
                Global._isHOG3Item4Found = true;
                if ((((((Global._isHOG3Item1Found && Global._isHOG3Item2Found) && Global._isHOG3Item3Found) && Global._isHOG3Item5Found) && Global._isHOG3Item6Found) && Global._isHOG3Item7Found) && Global._isHOG3Item8Found)
                {
                    Global._isHOG3Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog3_icon_tv;
                    Global.HOGItemName = Strings.string181;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG3Item5Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (117 * Global.guiRatio), (Screen.height / 2) + (163 * Global.guiRatio), 214 * Global.guiRatio, 76 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG3Item5Alpha);
                Global.globalBus.SendMessage("setHOG3Item5Transparent", Global.HOG3Item5Alpha);
                Global._isHOG3Item5Click = true;
                Global._isHOG3Item5Found = true;
                if ((((((Global._isHOG3Item1Found && Global._isHOG3Item2Found) && Global._isHOG3Item3Found) && Global._isHOG3Item4Found) && Global._isHOG3Item6Found) && Global._isHOG3Item7Found) && Global._isHOG3Item8Found)
                {
                    Global._isHOG3Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog3_icon_tv;
                    Global.HOGItemName = Strings.string181;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG3Item6Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (570 * Global.guiRatio), (Screen.height / 2) - (324 * Global.guiRatio), 218 * Global.guiRatio, 234 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG3Item6Alpha);
                Global.globalBus.SendMessage("setHOG3Item6Transparent", Global.HOG3Item6Alpha);
                Global._isHOG3Item6Click = true;
                Global._isHOG3Item6Found = true;
                if ((((((Global._isHOG3Item1Found && Global._isHOG3Item2Found) && Global._isHOG3Item3Found) && Global._isHOG3Item4Found) && Global._isHOG3Item5Found) && Global._isHOG3Item7Found) && Global._isHOG3Item8Found)
                {
                    Global._isHOG3Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog3_icon_tv;
                    Global.HOGItemName = Strings.string181;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG3Item7Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (439 * Global.guiRatio), (Screen.height / 2) - (191 * Global.guiRatio), 182 * Global.guiRatio, 539 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG3Item7Alpha);
                Global.globalBus.SendMessage("setHOG3Item7Transparent", Global.HOG3Item7Alpha);
                Global._isHOG3Item7Click = true;
                Global._isHOG3Item7Found = true;
                if ((((((Global._isHOG3Item1Found && Global._isHOG3Item2Found) && Global._isHOG3Item3Found) && Global._isHOG3Item4Found) && Global._isHOG3Item5Found) && Global._isHOG3Item6Found) && Global._isHOG3Item8Found)
                {
                    Global._isHOG3Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog3_icon_tv;
                    Global.HOGItemName = Strings.string181;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        if (!Global._isHOG3Item8Found)
        {
            if (GUI.Button(new Rect((Screen.width / 2) + (564 * Global.guiRatio), (Screen.height / 2) + (115 * Global.guiRatio), 204 * Global.guiRatio, 299 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //this.setTransparentTexture(Global.HOG3Item8Alpha);
                Global.globalBus.SendMessage("setHOG3Item8Transparent", Global.HOG3Item8Alpha);
                Global._isHOG3Item8Click = true;
                Global._isHOG3Item8Found = true;
                if ((((((Global._isHOG3Item1Found && Global._isHOG3Item2Found) && Global._isHOG3Item3Found) && Global._isHOG3Item4Found) && Global._isHOG3Item5Found) && Global._isHOG3Item6Found) && Global._isHOG3Item7Found)
                {
                    Global._isHOG3Complete = true;
                    Global.HOGItemIcon = this.gs_common.gui_hog3_icon_tv;
                    Global.HOGItemName = Strings.string181;
                    Global._gui_AddInterface("HOG1EndPopUp");
                }
            }
        }
        GUI.BeginGroup(new Rect(0, Screen.height - (150 * Global.guiRatio), 1920 * Global.guiRatio, 150 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 150 * Global.guiRatio), "", this.gs_common.gui_hogscreen_panel);
        GUI.BeginGroup(new Rect(245 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog3_icon_watering);
        if (Global._isHOG3Item1Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(430 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog3_icon_spray);
        if (Global._isHOG3Item2Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(615 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog3_icon_toaster);
        if (Global._isHOG3Item3Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(800 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog3_icon_tv);
        if (!Global._isHOG3Item4Found)
        {
            this.someVectorGoldenHOPA = Global.GUIAniTexture(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), this.gs_common.gui_hog3_tv_sheet.normal.background, 8, 4, 0.25f, this.someVectorGoldenHOPA, false);
        }
        if (Global._isHOG3Item4Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(987 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog3_icon_hammer);
        if (Global._isHOG3Item5Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(1172 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog3_icon_recorder);
        if (Global._isHOG3Item6Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(1357 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog3_icon_fishrod);
        if (Global._isHOG3Item7Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(1542 * Global.guiRatio, 10 * Global.guiRatio, 150 * Global.guiRatio, 129 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 129 * Global.guiRatio, 129 * Global.guiRatio), "", this.gs_common.gui_hog3_icon_extinguisher);
        if (Global._isHOG3Item8Found)
        {
            GUI.Box(new Rect(109 * Global.guiRatio, 74 * Global.guiRatio, 41 * Global.guiRatio, 42 * Global.guiRatio), "", this.gs_common.gui_hogscreen_found);
        }
        GUI.EndGroup();
        if (!Global._isShowHintHOG)
        {
            if (GUI.Button(new Rect(1745 * Global.guiRatio, 6 * Global.guiRatio, 145 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_hogscreen_button_help))
            {
                Global._isShowHintHOG = true;
                Global.hogFXsize = 0;
                Global.hogFXcoord = 0;
                Global.HOGhintAlpha = 1f;
                this.StartCoroutine(this.resizeHOGHint());
            }
        }
        else
        {
            GUI.Box(new Rect(1745 * Global.guiRatio, 6 * Global.guiRatio, 145 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_hogscreen_button_help);
        }
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void showHOGHint(float xCoord, float yCoord)
    {
        GUI.BeginGroup(new Rect(xCoord + (Global.hogFXcoord * Global.guiRatio), yCoord + (Global.hogFXcoord * Global.guiRatio), Global.hogFXsize * Global.guiRatio, Global.hogFXsize * Global.guiRatio));

        {
            float _156 = Global.HOGhintAlpha;
            Color _157 = GUI.backgroundColor;
            _157.a = _156;
            GUI.backgroundColor = _157;
        }
        GUI.Box(new Rect(0, 0, Global.hogFXsize * Global.guiRatio, Global.hogFXsize * Global.guiRatio), "", this.gs_common.gui_hogscreen_help_fx);

        {
            float _158 = 1f;
            Color _159 = GUI.backgroundColor;
            _159.a = _158;
            GUI.backgroundColor = _159;
        }
        GUI.EndGroup();
    }

    // === popup interfaces ===
    public virtual void gui_DisplayErrorPopUp()
    {
    }

    public virtual void gui_MushroomGameWinPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (542 * Global.guiRatio), (Screen.height / 2) - (336 * Global.guiRatio), 999 * Global.guiRatio, 572 * Global.guiRatio));
        GUI.Box(new Rect(90 * Global.guiRatio, 0, 909 * Global.guiRatio, 571 * Global.guiRatio), "", this.gs_common.gui_minigame_background);
        GUI.Box(new Rect(406 * Global.guiRatio, 58 * Global.guiRatio, 528 * Global.guiRatio, 84 * Global.guiRatio), "", this.gs_common.gui_minigame_popup_smartie);
        GUI.Box(new Rect(573 * Global.guiRatio, 153 * Global.guiRatio, 177 * Global.guiRatio, 202 * Global.guiRatio), "", this.gs_common.gui_minigame_mushroom_01_popup);
        Global.GUILabelStroke(new Rect(447 * Global.guiRatio, 360 * Global.guiRatio, 530 * Global.guiRatio, 60 * Global.guiRatio), Strings.string017, this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_white);
        if (GUI.Button(new Rect(479 * Global.guiRatio, 420 * Global.guiRatio, 345 * Global.guiRatio, 109 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            this.mushroom1_index = 0;
            this.mushroom2_index = 0;
            this.mushroom3_index = 0;
            this.mushroom4_index = 0;
            this._isMushroomGenerate = false;
            Global._gui_CloseAllInterfaces();
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
            Global._isPopUpOpen = true;
            //Global._isWorldMap = true;
            Global.UFOShowEntry = true;
            Global._isUFOScreen = false;
            Global._gui_SetInterface("WorldMap");
            Global._gui_AddInterface("TutorialMushroomEndPopUp");
        }
        GUI.Label(new Rect(479 * Global.guiRatio, 450 * Global.guiRatio, 345 * Global.guiRatio, 60 * Global.guiRatio), Strings.string018, this.gs_font.font_calibri_54_cb_white);
        GUI.Box(new Rect(0, 14 * Global.guiRatio, 447 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_minigame_popup_bigle_normal);
        GUI.EndGroup();
    }

    public virtual void gui_MushroomGameLoosePopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (542 * Global.guiRatio), (Screen.height / 2) - (336 * Global.guiRatio), 999 * Global.guiRatio, 572 * Global.guiRatio));
        GUI.Box(new Rect(90 * Global.guiRatio, 0, 909 * Global.guiRatio, 571 * Global.guiRatio), "", this.gs_common.gui_minigame_background);
        GUI.Box(new Rect(431 * Global.guiRatio, 58 * Global.guiRatio, 478 * Global.guiRatio, 84 * Global.guiRatio), "", this.gs_common.gui_minigame_popup_wrong);
        GUI.Box(new Rect(578 * Global.guiRatio, 176 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.poisonMushroomIcon);
        GUI.Box(new Rect(558 * Global.guiRatio, 159 * Global.guiRatio, 196 * Global.guiRatio, 194 * Global.guiRatio), "", this.gs_common.gui_minigame_popup_ban);
        Global.GUILabelStroke(new Rect(431 * Global.guiRatio, 360 * Global.guiRatio, 478 * Global.guiRatio, 60 * Global.guiRatio), (Strings.string019 + this.poisonMushroomName) + "!", this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_white);
        if (GUI.Button(new Rect(479 * Global.guiRatio, 420 * Global.guiRatio, 345 * Global.guiRatio, 109 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            this.mushroom1_index = 0;
            this.mushroom2_index = 0;
            this.mushroom3_index = 0;
            this.mushroom4_index = 0;
            this._isMushroomGenerate = false;
            this.generateMushrooms();
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(479 * Global.guiRatio, 450 * Global.guiRatio, 345 * Global.guiRatio, 60 * Global.guiRatio), Strings.string023, this.gs_font.font_calibri_54_cb_white);
        GUI.Box(new Rect(0, 14 * Global.guiRatio, 447 * Global.guiRatio, 558 * Global.guiRatio), "", this.gs_common.gui_minigame_popup_bigle_frowning);
        GUI.EndGroup();
    }

    public virtual void gui_FishingGameWinPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (594 * Global.guiRatio), (Screen.height / 2) - (353 * Global.guiRatio), 1051 * Global.guiRatio, 603 * Global.guiRatio));
        GUI.Box(new Rect(142 * Global.guiRatio, 17 * Global.guiRatio, 909 * Global.guiRatio, 571 * Global.guiRatio), "", this.gs_common.gui_minigame_background);
        GUI.Box(new Rect(546 * Global.guiRatio, 76 * Global.guiRatio, 347 * Global.guiRatio, 84 * Global.guiRatio), "", this.gs_common.gui_fishing_popup_success);
        if (this.fishRandomIndex == 1)
        {
            GUI.Box(new Rect(0, 0, 540 * Global.guiRatio, 603 * Global.guiRatio), "", this.gs_common.gui_fishing_popup_seatrout);
            Global.GUILabelStroke(new Rect(407 * Global.guiRatio, 216 * Global.guiRatio, 620 * Global.guiRatio, 120 * Global.guiRatio), Strings.string024, this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_white);
        }
        if (this.fishRandomIndex == 2)
        {
            GUI.Box(new Rect(0, 0, 450 * Global.guiRatio, 603 * Global.guiRatio), "", this.gs_common.gui_fishing_popup_seabass);
            Global.GUILabelStroke(new Rect(407 * Global.guiRatio, 216 * Global.guiRatio, 620 * Global.guiRatio, 120 * Global.guiRatio), Strings.string025, this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_white);
        }
        if (this.fishRandomIndex == 3)
        {
            GUI.Box(new Rect(0, 0, 478 * Global.guiRatio, 603 * Global.guiRatio), "", this.gs_common.gui_fishing_popup_mullet);
            Global.GUILabelStroke(new Rect(407 * Global.guiRatio, 216 * Global.guiRatio, 620 * Global.guiRatio, 120 * Global.guiRatio), Strings.string026, this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_white);
        }
        if (GUI.Button(new Rect(531 * Global.guiRatio, 436 * Global.guiRatio, 345 * Global.guiRatio, 109 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            (Global._userResourcesFood["food_fish"] as Hashtable)["amount"] = (int.Parse((string) (Global._userResourcesFood["food_fish"] as Hashtable)["amount"]) + 1).ToString();
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(531 * Global.guiRatio, 473 * Global.guiRatio, 345 * Global.guiRatio, 60 * Global.guiRatio), Strings.string018, this.gs_font.font_calibri_54_cb_white);
        GUI.EndGroup();
    }

    public virtual void gui_FishingGameLoosePopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (454 * Global.guiRatio), (Screen.height / 2) - (336 * Global.guiRatio), 909 * Global.guiRatio, 571 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 909 * Global.guiRatio, 571 * Global.guiRatio), "", this.gs_common.gui_minigame_background);
        GUI.Box(new Rect(231 * Global.guiRatio, 63 * Global.guiRatio, 447 * Global.guiRatio, 95 * Global.guiRatio), "", this.gs_common.gui_fishing_popup_failure);
        Global.GUILabelStroke(new Rect(151 * Global.guiRatio, 203 * Global.guiRatio, 606 * Global.guiRatio, 120 * Global.guiRatio), Strings.string027, this.gs_font.font_calibri_54_cb_s, this.gs_font.font_calibri_54_cb_white);
        if (GUI.Button(new Rect(282 * Global.guiRatio, 419 * Global.guiRatio, 345 * Global.guiRatio, 109 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(282 * Global.guiRatio, 456 * Global.guiRatio, 345 * Global.guiRatio, 60 * Global.guiRatio), Strings.string023, this.gs_font.font_calibri_54_cb_white);
        GUI.EndGroup();
    }

    /*GUI.BeginGroup(Rect(Screen.width/2 - 542*Global.guiRatio, Screen.height/2 - 336*Global.guiRatio, 999*Global.guiRatio, 572*Global.guiRatio));
        GUI.Box(Rect(90*Global.guiRatio, 0, 909*Global.guiRatio, 571*Global.guiRatio), "", gs_common.gui_minigame_background);
        Global.GUILabelStroke(Rect(447*Global.guiRatio, 82*Global.guiRatio, 486*Global.guiRatio, 120*Global.guiRatio), Strings.string032, gs_font.font_calibri_54_cb_s, gs_font.font_calibri_54_cb_blue);

        GUI.Box(Rect(584*Global.guiRatio, 173*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio), "", gs_common.gui_craftscreen_icon);
        GUI.Box(Rect(584*Global.guiRatio, 173*Global.guiRatio, 160*Global.guiRatio, 160*Global.guiRatio), "", Global._currentRecipeIcon);

        Global.GUILabelStroke(Rect(447*Global.guiRatio, 360*Global.guiRatio, 530*Global.guiRatio, 60*Global.guiRatio), Global._currentRecipeName, gs_font.font_calibri_54_cb_s, gs_font.font_calibri_54_cb_white);

        if (GUI.Button(Rect(479*Global.guiRatio, 420*Global.guiRatio, 345*Global.guiRatio, 109*Global.guiRatio), "", gs_common.gui_dialogue_button_yes))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(Rect(479*Global.guiRatio, 450*Global.guiRatio, 345*Global.guiRatio, 60*Global.guiRatio), Strings.string018, gs_font.font_calibri_54_cb_white);

        GUI.Box(Rect(0, 14*Global.guiRatio, 447*Global.guiRatio, 558*Global.guiRatio), "", gs_common.gui_minigame_popup_bigle_normal);
    GUI.EndGroup();*/    public virtual void gui_ItemCreatedPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string032, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global.globalBus.SendMessage("c_GameController_Base_command_CreateItem");
            Global._isRecipeSelect = false;
            Global._currentRecipeType = "";
            Global._currentRecipeName = "";
            Global._currentRecipeThingName = "";
            Global._currentRecipeDescription = "";
            Global._currentRecipeIcon = "";
            Global._currentRecipeAddSlots = "";
            Global._currentRecipeAddAbility = "";
            Global._currentRecipeAddDamage = "";
            Global._currentRecipeUniqueID = "";
            Global._currentRecipeCostType1 = "";
            Global._currentRecipeCostType2 = "";
            Global._currentRecipeCostType3 = "";
            Global._currentRecipeCostType4 = "";
            Global._currentRecipeCostAmount1 = "";
            Global._currentRecipeCostAmount2 = "";
            Global._currentRecipeCostAmount3 = "";
            Global._currentRecipeCostAmount4 = "";
            Global._gui_CloseInterface();
        }
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global._currentRecipeIcon);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Global._currentRecipeName, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global.globalBus.SendMessage("c_GameController_Base_command_CreateItem");
            Global._isRecipeSelect = false;
            Global._currentRecipeType = "";
            Global._currentRecipeName = "";
            Global._currentRecipeThingName = "";
            Global._currentRecipeDescription = "";
            Global._currentRecipeIcon = "";
            Global._currentRecipeAddSlots = "";
            Global._currentRecipeAddAbility = "";
            Global._currentRecipeAddDamage = "";
            Global._currentRecipeUniqueID = "";
            Global._currentRecipeCostType1 = "";
            Global._currentRecipeCostType2 = "";
            Global._currentRecipeCostType3 = "";
            Global._currentRecipeCostType4 = "";
            Global._currentRecipeCostAmount1 = "";
            Global._currentRecipeCostAmount2 = "";
            Global._currentRecipeCostAmount3 = "";
            Global._currentRecipeCostAmount4 = "";
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_NoResourcesCraftPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string089, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 145 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string092, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_NoResourcesFoodPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string089, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 145 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string090, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_FoodCreatedPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string091, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global.globalBus.SendMessage("c_GameController_Base_command_CheckFood");
            Global._isRecipeFoodSelect = false;
            Global._currentRecipeThingName = "";
            Global.currentFoodRecipeName = "";
            Global.currentFoodRecipeDescription = "";
            Global.currentFoodRecipeIcon = "";
            Global.currentFoodRecipeCostType1 = "";
            Global.currentFoodRecipeCostType2 = "";
            Global.currentFoodRecipeCostType3 = "";
            Global.currentFoodRecipeCostType4 = "";
            Global.currentFoodRecipeCostAmount1 = "";
            Global.currentFoodRecipeCostAmount2 = "";
            Global.currentFoodRecipeCostAmount3 = "";
            Global.currentFoodRecipeCostAmount4 = "";
            Global.currentFoodRecipeAddHealth = "";
            Global._gui_CloseInterface();
        }
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.currentFoodRecipeIcon);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Global.currentFoodRecipeName, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global.globalBus.SendMessage("c_GameController_Base_command_CheckFood");
            Global._isRecipeFoodSelect = false;
            Global._currentRecipeThingName = "";
            Global.currentFoodRecipeName = "";
            Global.currentFoodRecipeDescription = "";
            Global.currentFoodRecipeIcon = "";
            Global.currentFoodRecipeCostType1 = "";
            Global.currentFoodRecipeCostType2 = "";
            Global.currentFoodRecipeCostType3 = "";
            Global.currentFoodRecipeCostType4 = "";
            Global.currentFoodRecipeCostAmount1 = "";
            Global.currentFoodRecipeCostAmount2 = "";
            Global.currentFoodRecipeCostAmount3 = "";
            Global.currentFoodRecipeCostAmount4 = "";
            Global.currentFoodRecipeAddHealth = "";
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_VeGameWinPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string108, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            this.vegetable1_index = 0;
            this.vegetable2_index = 0;
            this.vegetable3_index = 0;
            this._isVegetableGenerate = false;
            if (Global._isVeGame01)
            {
                Global._isVeGame01 = false;
                Global._isVeGame02 = true;
                this.generateVegetables();
                Global._gui_SetInterface("VegetablesGameScreen");
            }
            if (!Global._isVeGame01 && Global._isVeGame02)
            {
                Global._isVeGame02 = false;
                Global._isVeGame03 = true;
                this.generateVegetables();
                Global._gui_SetInterface("VegetablesGameScreen");
            }
        }
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.VeGameWinIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 438 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string109, this.gs_font.font_b52_60_cb_white);
        if (Global._isVeGame01)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.vegetable1_index = 0;
                this.vegetable2_index = 0;
                this.vegetable3_index = 0;
                this._isVegetableGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isVeGame01 = false;
                Global._isVeGame02 = true;
                this.generateVegetables();
                Global._gui_SetInterface("VegetablesGameScreen");
            }
        }
        if (Global._isVeGame02)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.vegetable1_index = 0;
                this.vegetable2_index = 0;
                this.vegetable3_index = 0;
                this._isVegetableGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isVeGame02 = false;
                Global._isVeGame03 = true;
                this.generateVegetables();
                Global._gui_SetInterface("VegetablesGameScreen");
            }
        }
        if (Global._isVeGame03)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.vegetable1_index = 0;
                this.vegetable2_index = 0;
                this.vegetable3_index = 0;
                this._isVegetableGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isVeGame03 = false;
                Global._isVeGame04 = true;
                this.generateVegetables();
                Global._gui_SetInterface("VegetablesGameScreen");
            }
        }
        if (Global._isVeGame04)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.vegetable1_index = 0;
                this.vegetable2_index = 0;
                this.vegetable3_index = 0;
                this._isVegetableGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isVeGame04 = false;
                Global._isVeGame05 = true;
                this.generateVegetables();
                Global._gui_SetInterface("VegetablesGameScreen");
            }
        }
        if (Global._isVeGame05)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                this.vegetable1_index = 0;
                this.vegetable2_index = 0;
                this.vegetable3_index = 0;
                this._isVegetableGenerate = false;
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) + 1).ToString();
                Global._isVeGame05 = false;
                Global._isVeGame06 = true;
                this.generateVegetables();
                Global._gui_SetInterface("VegetablesGameScreen");
            }
        }
        if (Global._isVeGame06)
        {
            if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                Global._gui_CloseInterface();
                (Global._userBooksBiology["library_book01"] as Hashtable)["teach"] = "true";
                Global._isTutorialVeGameComplete = true;
                Global._gui_AddInterface("TutorialVeGamePopUp");
            }
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_VeGameLoosePopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid_sad);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string110, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
            this.vegetable1_index = 0;
            this.vegetable2_index = 0;
            this.vegetable3_index = 0;
            this._isVegetableGenerate = false;
            this.generateVegetables();
            Global._gui_CloseInterface();
        }
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.VeGameLooseIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 438 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string111, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            if (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) > 0)
            {
                Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 1).ToString();
            }
            this.vegetable1_index = 0;
            this.vegetable2_index = 0;
            this.vegetable3_index = 0;
            this._isVegetableGenerate = false;
            this.generateVegetables();
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string023, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialVeGamePopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Label(new Rect(0, 20 * Global.guiRatio, 942 * Global.guiRatio, 60 * Global.guiRatio), Strings.string118, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 184 * Global.guiRatio, 846 * Global.guiRatio, 120 * Global.guiRatio), Strings.string119, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(96 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            Global._gui_CloseInterface();
            Global.videoPlayer.SendMessage("_PlayVideo", "NGS.ogv");
        }
        GUI.Label(new Rect(96 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string120, this.gs_font.font_28daysletter_60_cb_blue);
        if (GUI.Button(new Rect(485 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_no))
        {
            Global._gui_CloseInterface();
            Global._walkerCamera.SetActive(false);
            Global._cutSceneCamera.SetActive(true);
            Global._isTutorialCutScene01 = false;
            Global._isTutorialVeGameEnd = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("TutorialCutScene01");
        }
        GUI.Label(new Rect(485 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string121, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_HOG1EndPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (472 * Global.guiRatio), (Screen.height / 2) - (340 * Global.guiRatio), 942 * Global.guiRatio, 666 * Global.guiRatio));
        GUI.Box(new Rect(24 * Global.guiRatio, 84 * Global.guiRatio, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Box(new Rect(0, 0, 401 * Global.guiRatio, 608 * Global.guiRatio), "", this.gs_common.gui_vegame_sectoid);
        GUI.Label(new Rect(401 * Global.guiRatio, 106 * Global.guiRatio, 460 * Global.guiRatio, 60 * Global.guiRatio), Strings.string108, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(861 * Global.guiRatio, 101 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global.UFOShowEntry = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            if (Global.HOGItemIcon == this.gs_common.gui_hog1_icon_virt)
            {
                (Global._userMuseum["museum_exhibit01"] as Hashtable)["teach"] = "true";
                Global._isKot = false;
                Global.speakerGO = GameObject.Find("_zoeSpeaker");
                Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
                Global._playDialogue(Global.audio_player.zoe_dlg_001);
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("GirlDialogue01");
            }
            else
            {
                if (Global.HOGItemIcon == this.gs_common.gui_hog2_item_ammonit)
                {
                    (Global._userMuseum["museum_exhibit02"] as Hashtable)["teach"] = "true";
                    Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                    Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                    Global._playDialogue(Global.audio_player.sectoid_dlg_037);
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("HOG2Dialogue01");
                }
                else
                {
                    if (Global.HOGItemIcon == this.gs_common.gui_hog3_icon_tv)
                    {
                        Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                        Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                        Global._playDialogue(Global.audio_player.sectoid_dlg_038);
                        this.StartCoroutine("DialogueEnd");
                        Global._gui_SetInterface("HOG3Dialogue01");
                    }
                }
            }
            Global.globalBus.gameObject.SendMessage("SaveGame");
        }
        GUI.Box(new Rect(514 * Global.guiRatio, 214 * Global.guiRatio, 207 * Global.guiRatio, 207 * Global.guiRatio), "", this.gs_common.gui_hogscreen_goldenframe);
        GUI.Box(new Rect(535 * Global.guiRatio, 235 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.HOGItemIcon);
        GUI.Label(new Rect(328 * Global.guiRatio, 428 * Global.guiRatio, 574 * Global.guiRatio, 60 * Global.guiRatio), Strings.string133 + Global.HOGItemName, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(451 * Global.guiRatio, 524 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._gui_CloseAllInterfaces();
            Global._isPopUpOpen = true;
            Global.UFOShowEntry = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            if (Global.HOGItemIcon == this.gs_common.gui_hog1_icon_virt)
            {
                (Global._userMuseum["museum_exhibit01"] as Hashtable)["teach"] = "true";
                Global._isKot = false;
                Global.speakerGO = GameObject.Find("_zoeSpeaker");
                Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
                Global._playDialogue(Global.audio_player.zoe_dlg_001);
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("GirlDialogue01");
            }
            else
            {
                if (Global.HOGItemIcon == this.gs_common.gui_hog2_item_ammonit)
                {
                    (Global._userMuseum["museum_exhibit02"] as Hashtable)["teach"] = "true";
                    Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                    Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                    Global._playDialogue(Global.audio_player.sectoid_dlg_037);
                    this.StartCoroutine("DialogueEnd");
                    Global._gui_SetInterface("HOG2Dialogue01");
                }
                else
                {
                    if (Global.HOGItemIcon == this.gs_common.gui_hog3_icon_tv)
                    {
                        Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                        Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                        Global._playDialogue(Global.audio_player.sectoid_dlg_038);
                        this.StartCoroutine("DialogueEnd");
                        Global._gui_SetInterface("HOG3Dialogue01");
                    }
                }
            }
            Global.globalBus.gameObject.SendMessage("SaveGame");
        }
        GUI.Label(new Rect(451 * Global.guiRatio, 548 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_NoWayPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Box(new Rect(32 * Global.guiRatio, 121 * Global.guiRatio, 857 * Global.guiRatio, 412 * Global.guiRatio), "", this.gs_common.gui_noway_image);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string138, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
        }
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_LootInfoPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string140, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
        }
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", Global.currentLootIcon);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Global.currentLootName, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_InventoryFullPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string089, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 242 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string142, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_MenuPopUp()
    {
        if ((Global._isPopUpOpen && (Event.current.type == EventType.KeyUp)) && (Event.current.keyCode == KeyCode.Escape))
        {
            Global._gui_CloseInterface();
            Global._isPopUpOpen = false;
            Global.globalBus.SendMessage("c_GameController_Base_command_unsetPause");
        }
        GUI.BeginGroup(new Rect((Screen.width / 2) - (336 * Global.guiRatio), (Screen.height / 2) - (381 * Global.guiRatio), 671 * Global.guiRatio, 691 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 671 * Global.guiRatio, 691 * Global.guiRatio), "", this.gs_common.gui_menuscreen_background);
        GUI.Label(new Rect(0, 20 * Global.guiRatio, 664 * Global.guiRatio, 50 * Global.guiRatio), Strings.string207, this.gs_font.font_28daysletter_60_cb_blue);
        //Продолжить
        if (GUI.Button(new Rect(61 * Global.guiRatio, 150 * Global.guiRatio, 542 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_menuscreen_button))
        {
            Global._gui_CloseInterface();
            Global._isPopUpOpen = false;
            Global.globalBus.SendMessage("c_GameController_Base_command_unsetPause");
        }
        GUI.Label(new Rect(61 * Global.guiRatio, 176 * Global.guiRatio, 542 * Global.guiRatio, 50 * Global.guiRatio), Strings.string208, this.gs_font.font_28daysletter_60_cb_white);
        //Сохранить
        if (GUI.Button(new Rect(61 * Global.guiRatio, 275 * Global.guiRatio, 542 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_menuscreen_button))
        {
            Global._isGameSaved = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_CloseInterface();
            Global._isPopUpOpen = false;
            Global.globalBus.SendMessage("c_GameController_Base_command_unsetPause");
        }
        GUI.Label(new Rect(61 * Global.guiRatio, 301 * Global.guiRatio, 542 * Global.guiRatio, 50 * Global.guiRatio), Strings.string209, this.gs_font.font_28daysletter_60_cb_white);
        //Загрузить
        if (GUI.Button(new Rect(61 * Global.guiRatio, 400 * Global.guiRatio, 542 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_menuscreen_button))
        {
            Global._gui_AddInterface("LoadGamePopUp");
        }
        GUI.Label(new Rect(61 * Global.guiRatio, 426 * Global.guiRatio, 542 * Global.guiRatio, 50 * Global.guiRatio), Strings.string210, this.gs_font.font_28daysletter_60_cb_white);
        //Выход
        if (GUI.Button(new Rect(61 * Global.guiRatio, 525 * Global.guiRatio, 542 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_menuscreen_button))
        {
            Global._gui_AddInterface("ExitGamePopUp");
        }
        GUI.Label(new Rect(61 * Global.guiRatio, 551 * Global.guiRatio, 542 * Global.guiRatio, 50 * Global.guiRatio), Strings.string211, this.gs_font.font_28daysletter_60_cb_white);
        GUI.EndGroup();
    }

    public virtual void gui_LoadGamePopUp()
    {
        if ((Global._isPopUpOpen && (Event.current.type == EventType.KeyUp)) && (Event.current.keyCode == KeyCode.Escape))
        {
            Event.current.type = EventType.Ignore;
            Global._gui_CloseInterface();
        }
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 184 * Global.guiRatio, 846 * Global.guiRatio, 120 * Global.guiRatio), Strings.string213, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(96 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            Global._gui_CloseInterface();
            Global._isPopUpOpen = false;
            Global.globalBus.SendMessage("c_GameController_Base_command_unsetPause");
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
            Global.globalBus.SendMessage("c_StartController_command_StartGame");
        }
        GUI.Label(new Rect(96 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string007, this.gs_font.font_28daysletter_60_cb_blue);
        if (GUI.Button(new Rect(485 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_no))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(485 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string008, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_ExitGamePopUp()
    {
        if ((Global._isPopUpOpen && (Event.current.type == EventType.KeyUp)) && (Event.current.keyCode == KeyCode.Escape))
        {
            Event.current.type = EventType.Ignore;
            Global._gui_CloseInterface();
        }
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 184 * Global.guiRatio, 846 * Global.guiRatio, 120 * Global.guiRatio), Strings.string214, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(96 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            Global.globalBus.gameObject.SendMessage("SaveGame");
            System.GC.Collect();
            Application.Quit();
        }
        GUI.Label(new Rect(96 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string007, this.gs_font.font_28daysletter_60_cb_blue);
        if (GUI.Button(new Rect(485 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_no))
        {
            Global._gui_CloseInterface();
        }
        GUI.Label(new Rect(485 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string008, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    // === TUTORIAL interfaces ===
    public virtual void gui_TutorialDialogue01()
    {
        Global.speakerGO = GameObject.Find("_sectoidSpeaker");
        Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string044, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial01 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_002);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue02");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial01 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_002);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue02");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue02() //Показываем всю тарелку без подписей
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        //GUI.Box(Rect(0, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string045, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial02 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_003);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue03");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial02 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_003);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue03");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue03() //Показываем рубку
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        //GUI.Box(Rect(0, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect(-230 * Global.guiRatio, Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string047, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial03 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_004);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue04");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial03 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_004);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue04");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue04() //Показываем трюм
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        //GUI.Box(Rect(0, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect(-230 * Global.guiRatio, Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string049, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial04 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_005);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue05");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial04 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_005);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue05");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue05() //Показываем мастерскую
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        //GUI.Box(Rect(0, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect(-230 * Global.guiRatio, Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string051, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial05 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_006);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue06");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial05 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_006);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue06");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue06() //Показываем библиотеку
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        //GUI.Box(Rect(0, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect(-230 * Global.guiRatio, Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string053, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial06 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_007);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue07");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial06 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_007);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue06_1");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue06_1() //Показываем музей
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        //GUI.Box(Rect(0, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect(-230 * Global.guiRatio, Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (686 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 576 * Global.guiRatio, 77 * Global.guiRatio)); //Музей
        GUI.Box(new Rect(0, 0, 576 * Global.guiRatio, 77 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote6);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string139, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string053_2, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial06_1 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_008);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue07");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial06_1 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_008);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue07");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue07() //Показываем кухню
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        //GUI.Box(Rect(0, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect(-230 * Global.guiRatio, Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (872 * Global.guiRatio), (Screen.height / 2) - (419 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Кухня
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote1);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string054, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (686 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 576 * Global.guiRatio, 77 * Global.guiRatio)); //Музей
        GUI.Box(new Rect(0, 0, 576 * Global.guiRatio, 77 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote6);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string139, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string055, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial07 = true;
            Global.fuckerXCoord = (Screen.width / 2) - (404 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (277 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialUFOKitchen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial07 = true;
            Global.fuckerXCoord = (Screen.width / 2) - (404 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (200 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialUFOKitchen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialUFOKitchen() //Показываем котское НЛО и заставляем игрока пойти на кухню
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_tutorial_kitchen_select);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (686 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 576 * Global.guiRatio, 77 * Global.guiRatio)); //Музей
        GUI.Box(new Rect(0, 0, 576 * Global.guiRatio, 77 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote6);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string139, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (872 * Global.guiRatio), (Screen.height / 2) - (419 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Кухня
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote1);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string054, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string056, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial07_fucker));
        }
        GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
        if (GUI.Button(new Rect((Screen.width / 2) - (532 * Global.guiRatio), (Screen.height / 2) - (408 * Global.guiRatio), 311 * Global.guiRatio, 238 * Global.guiRatio), "", this.gs_common.emptystyle))
        {
            Global._isTutorial07_fucker = false;
            Global._isTutorial08 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._playDialogue(Global.audio_player.sectoid_dlg_009);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue08");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue08() //Открываем экран кухни
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.Box(new Rect(1652 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        //Рецепт 1
        GUI.BeginGroup(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_chicken_soup);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string057, this.gs_font.font_b52_48_c_blue);
        GUI.EndGroup();
        //Рецепт 2
        GUI.BeginGroup(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_mushroom_soup);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string058, this.gs_font.font_b52_48_c_blue);
        GUI.EndGroup();
        //Рецепт 3
        GUI.BeginGroup(new Rect(0, 340 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_potatoes_mushrooms);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string059, this.gs_font.font_b52_48_c_blue);
        GUI.EndGroup();
        //Рецепт 4
        GUI.BeginGroup(new Rect(0, 510 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_fish_soup);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string060, this.gs_font.font_b52_48_c_blue);
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        //GUI.Box(Rect(0, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect(0, Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string061, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial09 = true;
            /*Global.fuckerXCoord = Screen.width/2 - 403*Global.guiRatio;
                Global.fuckerYCoord = Screen.height/2 - 192*Global.guiRatio;
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                Global.fuckerCall = true;
                Global._isTutorial10ClickRecipe = true;
                Global._gui_SetInterface("TutorialUFOKitchenScreen");*/
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialUFOKitchenPlay");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial09 = true;
            /*Global.fuckerXCoord = Screen.width / 2 - 403 * Global.guiRatio;
            Global.fuckerYCoord = Screen.height / 2 - 192 * Global.guiRatio;
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.fuckerCall = true;
            Global._isTutorial10ClickRecipe = true;
            Global._gui_SetInterface("TutorialUFOKitchenScreen");*/
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialUFOKitchenPlay");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialUFOKitchenPlay() //Туториальная кухня
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.Box(new Rect(1652 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        //Рецепт 1
        GUI.BeginGroup(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_chicken_soup);
        if (!Global._isTutorialKitchenRecipe1)
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string057, this.gs_font.font_b52_48_c_blue);
        }
        else
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string057, this.gs_font.font_b52_48_c_white);
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(170 * Global.guiRatio, 0, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
        {
            Global._isTutorialKitchenRecipe1 = true;
            Global._isTutorialKitchenRecipe2 = false;
            Global._isTutorialKitchenRecipe3 = false;
            Global._isTutorialKitchenRecipe4 = false;
        }
        //Рецепт 2
        GUI.BeginGroup(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_mushroom_soup);
        if (!Global._isTutorialKitchenRecipe2)
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string058, this.gs_font.font_b52_48_c_blue);
        }
        else
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string058, this.gs_font.font_b52_48_c_white);
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(170 * Global.guiRatio, 170 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
        {
            Global._isTutorialKitchenRecipe1 = false;
            Global._isTutorialKitchenRecipe2 = true;
            Global._isTutorialKitchenRecipe3 = false;
            Global._isTutorialKitchenRecipe4 = false;
        }
        //Рецепт 3
        GUI.BeginGroup(new Rect(0, 340 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_potatoes_mushrooms);
        if (!Global._isTutorialKitchenRecipe3)
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string059, this.gs_font.font_b52_48_c_blue);
        }
        else
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string059, this.gs_font.font_b52_48_c_white);
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(170 * Global.guiRatio, 340 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
        {
            Global._isTutorialKitchenRecipe1 = false;
            Global._isTutorialKitchenRecipe2 = false;
            Global._isTutorialKitchenRecipe3 = true;
            Global._isTutorialKitchenRecipe4 = false;
        }
        //Рецепт 4
        GUI.BeginGroup(new Rect(0, 510 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_fish_soup);
        if (!Global._isTutorialKitchenRecipe4)
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string060, this.gs_font.font_b52_48_c_blue);
        }
        else
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string060, this.gs_font.font_b52_48_c_white);
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(170 * Global.guiRatio, 510 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
        {
            Global._isTutorialKitchenRecipe1 = false;
            Global._isTutorialKitchenRecipe2 = false;
            Global._isTutorialKitchenRecipe3 = false;
            Global._isTutorialKitchenRecipe4 = true;
        }
        GUI.EndGroup();
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        if (((!Global._isTutorialKitchenRecipe1 & !Global._isTutorialKitchenRecipe2) & !Global._isTutorialKitchenRecipe3) & !Global._isTutorialKitchenRecipe4)
        {
            GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
        }
        else
        {
            if (Global._isTutorialKitchenRecipe1)
            {
                GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string057, this.gs_font.font_b52_60_cb_white);
                GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_chicken_soup);
                GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 30 * Global.guiRatio), Global._recipeFood[0]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
                GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_food_chicken);
                GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_food_potatoes);
                GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_food_carrot);
                GUI.Box(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_food_onion);
                GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_green);
                GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_green);
                GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_green);
                GUI.Label(new Rect(644 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_green);
                GUI.EndGroup();
                if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                {
                    Global._isTutorial10ClickCreate = false;
                    Global._currentRecipeThingName = (string) Global._recipeFood[0]["thingname"];
                    Global.currentFoodRecipeName = (string) Global._recipeFood[0]["name"];
                    Global.currentFoodRecipeDescription = (string) Global._recipeFood[0]["description"];
                    Global.currentFoodRecipeIcon = (GUIStyle) Global._recipeFood[0]["icon"];
                    Global._currentRecipeUniqueID = ((("food_" + Random.Range(1111, 9999).ToString()) + "_") + Random.Range(1411, 9599).ToString()) + Random.Range(1171, 9991).ToString();
                    Global.currentFoodRecipeAddHealth = (string) Global._recipeFood[0]["addhealth"];
                    Global._gui_AddInterface("TutorialUFOKitchenPopup");
                }
            }
            else
            {
                if (Global._isTutorialKitchenRecipe2)
                {
                    GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string058, this.gs_font.font_b52_60_cb_white);
                    GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_mushroom_soup);
                    GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 30 * Global.guiRatio), Global._recipeFood[2]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                    GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[2]["costicon1"]);
                    GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[2]["costicon2"]);
                    GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[2]["costicon3"]);
                    GUI.Box(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[2]["costicon4"]);
                    GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_red);
                    GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_green);
                    GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_green);
                    GUI.Label(new Rect(644 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_red);
                    GUI.EndGroup();
                    if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                    {
                        if (this.tutorialKitchenTry < 2)
                        {
                            Global._gui_AddInterface("NoResourcesFoodPopUp");
                            this.tutorialKitchenTry = this.tutorialKitchenTry + 1;
                        }
                        else
                        {
                            Global.fuckerXCoord = (Screen.width / 2) - (403 * Global.guiRatio);
                            Global.fuckerYCoord = (Screen.height / 2) - (192 * Global.guiRatio);
                            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                            Global.fuckerCall = true;
                            Global._isTutorial10ClickRecipe = true;
                            Global._gui_SetInterface("TutorialUFOKitchenScreen");
                        }
                    }
                }
                else
                {
                    if (Global._isTutorialKitchenRecipe3)
                    {
                        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string059, this.gs_font.font_b52_60_cb_white);
                        GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_potatoes_mushrooms);
                        GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 30 * Global.guiRatio), Global._recipeFood[3]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                        GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[3]["costicon1"]);
                        GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[3]["costicon2"]);
                        GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_red);
                        GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "2", this.gs_font.font_century_30_cb_green);
                        GUI.EndGroup();
                        if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                        {
                            if (this.tutorialKitchenTry < 2)
                            {
                                Global._gui_AddInterface("NoResourcesFoodPopUp");
                                this.tutorialKitchenTry = this.tutorialKitchenTry + 1;
                            }
                            else
                            {
                                Global.fuckerXCoord = (Screen.width / 2) - (403 * Global.guiRatio);
                                Global.fuckerYCoord = (Screen.height / 2) - (192 * Global.guiRatio);
                                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                                Global.fuckerCall = true;
                                Global._isTutorial10ClickRecipe = true;
                                Global._gui_SetInterface("TutorialUFOKitchenScreen");
                            }
                        }
                    }
                    else
                    {
                        if (Global._isTutorialKitchenRecipe4)
                        {
                            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string060, this.gs_font.font_b52_60_cb_white);
                            GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_fish_soup);
                            GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 30 * Global.guiRatio), Global._recipeFood[4]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
                            GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
                            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[4]["costicon1"]);
                            GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[4]["costicon2"]);
                            GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[4]["costicon3"]);
                            GUI.Box(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeFood[4]["costicon4"]);
                            GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "2", this.gs_font.font_century_30_cb_red);
                            GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_green);
                            GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_green);
                            GUI.Label(new Rect(644 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), "1", this.gs_font.font_century_30_cb_red);
                            GUI.EndGroup();
                            if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
                            {
                                if (this.tutorialKitchenTry < 2)
                                {
                                    Global._gui_AddInterface("NoResourcesFoodPopUp");
                                    this.tutorialKitchenTry = this.tutorialKitchenTry + 1;
                                }
                                else
                                {
                                    Global.fuckerXCoord = (Screen.width / 2) - (403 * Global.guiRatio);
                                    Global.fuckerYCoord = (Screen.height / 2) - (192 * Global.guiRatio);
                                    Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                                    Global.fuckerCall = true;
                                    Global._isTutorial10ClickRecipe = true;
                                    Global._gui_SetInterface("TutorialUFOKitchenScreen");
                                }
                            }
                        }
                    }
                }
            }
        }
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_kitchen_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string064, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_TutorialUFOKitchenScreen() //Туториал на экране кухни
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.Box(new Rect(1652 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        //Рецепт 1
        GUI.BeginGroup(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_chicken_soup);
        if (Global._isTutorial10ClickRecipe)
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string057, this.gs_font.font_b52_48_c_blue);
        }
        else
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string057, this.gs_font.font_b52_48_c_white);
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(170 * Global.guiRatio, 0, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
        {
            Global._isTutorial10ClickRecipe = false;
            Global._isTutorial10ClickCreate = true;
            //Global.fuckerCall = true;
            Global.fuckerXCoord = (Screen.width / 2) + (351 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (35 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
        }
        //Рецепт 2
        GUI.BeginGroup(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_mushroom_soup);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string058, this.gs_font.font_b52_48_c_blue);
        GUI.EndGroup();
        //Рецепт 3
        GUI.BeginGroup(new Rect(0, 340 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_potatoes_mushrooms);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string059, this.gs_font.font_b52_48_c_blue);
        GUI.EndGroup();
        //Рецепт 4
        GUI.BeginGroup(new Rect(0, 510 * Global.guiRatio, 840 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_fish_soup);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string060, this.gs_font.font_b52_48_c_blue);
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        if (Global._isTutorial10ClickRecipe)
        {
            GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
        }
        else
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string057, this.gs_font.font_b52_60_cb_white);
            GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_chicken_soup);
            GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 30 * Global.guiRatio), Strings.string065, this.gs_font.font_century_24_lb_blue);
            GUI.Label(new Rect(1192 * Global.guiRatio, 220 * Global.guiRatio, 449 * Global.guiRatio, 30 * Global.guiRatio), Strings.string066, this.gs_font.font_century_24_lb_blue);
            GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_food_chicken);
            GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_food_potatoes);
            GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_food_carrot);
            GUI.Box(new Rect(510 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_food_onion);
            GUI.EndGroup();
            if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                Global._isTutorial10ClickCreate = false;
                Global._currentRecipeThingName = (string) Global._recipeFood[0]["thingname"];
                Global.currentFoodRecipeName = (string) Global._recipeFood[0]["name"];
                Global.currentFoodRecipeDescription = (string) Global._recipeFood[0]["description"];
                Global.currentFoodRecipeIcon = (GUIStyle) Global._recipeFood[0]["icon"];
                Global._currentRecipeUniqueID = ((("food_" + Random.Range(1111, 9999).ToString()) + "_") + Random.Range(1411, 9599).ToString()) + Random.Range(1171, 9991).ToString();
                Global.currentFoodRecipeAddHealth = (string) Global._recipeFood[0]["addhealth"];
                Global._gui_AddInterface("TutorialUFOKitchenPopup");
            }
        }
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_kitchen_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string064, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial10ClickRecipe)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial10ClickRecipe));
        }
        if (Global.fuckerCall && Global._isTutorial10ClickCreate)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial10ClickCreate));
        }
        if (Global._isTutorial10ClickRecipe)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
        }
        if (Global._isTutorial10ClickCreate)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialUFOKitchenPopup() //Туториальный попап создание супа
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string032, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_chicken_soup);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string057, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global.globalBus.SendMessage("c_GameController_Base_command_CreateFood");
            Global._isTutorialCreateSoup = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._playDialogue(Global.audio_player.sectoid_dlg_010);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue09");
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue09()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string068, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial10 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_011);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue10");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial10 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_011);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue10");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue10()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_library_background);
        GUI.Box(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_s);
        GUI.Box(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n);
        GUI.Box(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_n);
        GUI.Box(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n);
        GUI.Box(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_n);
        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string034, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_food_off);
        GUI.EndGroup();
        GUI.EndGroup();
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string069, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial11 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_012);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue11");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial11 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_012);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue11");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue11()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_library_background);
        GUI.Box(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_s);
        GUI.Box(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n);
        GUI.Box(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_n);
        GUI.Box(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n);
        GUI.Box(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_n);
        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string034, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_food_on);
        GUI.EndGroup();
        GUI.EndGroup();
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string070, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial12 = true;
            Global.fuckerXCoord = (Screen.width / 2) - (828 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (192 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.fuckerCall = true;
            Global._isTutorial13ClickFlash = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialLibraryScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial12 = true;
            Global.fuckerXCoord = (Screen.width / 2) - (828 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (192 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.fuckerCall = true;
            Global._isTutorial13ClickFlash = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialLibraryScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialLibraryScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_library_background);
        GUI.Box(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_s);
        GUI.Box(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n);
        GUI.Box(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_n);
        GUI.Box(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n);
        GUI.Box(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_n);
        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string034, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_food_on);
        if (!Global._isTutorial13ClickFlash && !Global._isTutorial13)
        {
            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
        }
        if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
        {
            Global._isTutorial13ClickFlash = false;
            Global._isTutorial13ClickMult = true;
            Global.fuckerXCoord = (Screen.width / 2) + (351 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (47 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
        }
        GUI.EndGroup();
        if (Global._isTutorial13ClickMult)
        {
            GUI.BeginGroup(new Rect(943 * Global.guiRatio, 133 * Global.guiRatio, 733 * Global.guiRatio, 668 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_booktitle_food);
            GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), Strings.string072, this.gs_font.font_b52_36_c_white);
            GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), Strings.string073, this.gs_font.font_century_24_lb_blue);
            if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
            {
                Global._isTutorial13ClickMult = false;
                Global._isTutorial13 = true;
                (Global._userBooksHealth["library_book01"] as Hashtable)["teach"] = "true";
                Global.videoPlayer.SendMessage("_PlayVideo", "ED_CAT_FOOD_(RUS).ogv");
            }
            GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string074, this.gs_font.font_28daysletter_60_cb_blue);
            GUI.EndGroup();
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_library_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string071, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial13ClickFlash)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial13ClickFlash));
        }
        if (Global.fuckerCall && Global._isTutorial13ClickMult)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial13ClickMult));
        }
        if (Global._isTutorial13ClickFlash)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
        }
        if (Global._isTutorial13ClickMult)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialLibraryPopUp() //Туториальный попап - изучили смузи
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string075, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_smoothies);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string076, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
             //Global.globalBus.SendMessage("c_GameController_Base_command_AddRecipe");
            (Global._userBooksHealth["library_book01"] as Hashtable)["teach"] = "true";
            Global._recipeFood[6]["available"] = "true";
            Global._isTutorialLearnSmousi = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._playDialogue(Global.audio_player.sectoid_dlg_013);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue12");
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue12()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string077, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial14 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            //Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            //this.ResetDialogue();
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            //this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_001);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue13");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial14 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            //Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            //this.ResetDialogue();
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            //this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_001);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue13");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue13()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string078, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string079, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial15 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_014);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue14");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial15 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_014);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue14");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue14()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string080, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial16 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            //this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_002);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue15");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial16 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_002);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue15");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue15()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string078, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string081, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial17 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_015);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue16");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial17 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_015);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue16");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue16()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string082, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial18 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_016);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue17");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial18 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_016);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue17");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue17()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (330 * Global.guiRatio), 1920 * Global.guiRatio, 330 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 288 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string083, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(600 * Global.guiRatio, 211 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._isTutorial19 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_017);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue18");
        }
        GUI.Label(new Rect(600 * Global.guiRatio, 231 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string007, this.gs_font.font_28daysletter_60_cb_blue);
        if (GUI.Button(new Rect(990 * Global.guiRatio, 211 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_red))
        {
            Global._isTutorial20 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_018);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue19");
        }
        GUI.Label(new Rect(990 * Global.guiRatio, 231 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string008, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue18()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string084, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial21 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (320 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) + (182 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.fuckerCall = true;
            Global._isTutorial23 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._gui_SetInterface("TutorialGoToMap");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial21 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (320 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) + (182 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.fuckerCall = true;
            Global._isTutorial23 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._gui_SetInterface("TutorialGoToMap");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue19()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string085, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial22 = true;
            //Global._isFirstGameStart = false;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("ShipScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial22 = true;
            //Global._isFirstGameStart = false;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("ShipScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialGoToMap()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_ufo_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial23)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial23));
        }
        if (Global._isTutorial23)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
            GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
            if (GUI.Button(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorial24 = true;
                Global.globalBus.gameObject.SendMessage("SaveGame");
                Global._isKot = true;
                Global._isChangeChar = true;
                Global.speakerGO = GameObject.Find("_kotSpeaker");
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.kot_dlg_003);
                if (Global._isChangeChar)
                {
                    if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                    {
                    }
                    else
                    {
                         //speak
                        this.ResetDialogue();
                    }
                }
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue20");
            }
            GUI.EndGroup();
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue20()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string078, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string099, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial25 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_019);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue21");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial25 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_019);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue21");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue21()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string100, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial26 = true;
            Global._walkerCamera.SetActive(false);
            Global._cutSceneCamera.SetActive(true);
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("TutorialCutScene01");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial26 = true;
            Global._walkerCamera.SetActive(false);
            Global._cutSceneCamera.SetActive(true);
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("TutorialCutScene01");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialCutScene01()
    {
        if (!Global._isTutorialCutScene01)
        {
            iTween.MoveTo(Global._cutSceneCamera, new Hashtable() { {"x", Global._isTutorialGreenHouse.transform.position.x },  {"y", Global._cutSceneCamera.transform.position.y },  {"z", Global._isTutorialGreenHouse.transform.position.z - 10 },  {"time", 5.5f },  {"delay", 0.5f },  {"easetype", "easeOutQuad" }, });
        }
        if ((Global._cutSceneCamera.transform.position.x == Global._isTutorialGreenHouse.transform.position.x) && (Global._cutSceneCamera.transform.position.z == (Global._isTutorialGreenHouse.transform.position.z - 10)))
        {
            Global._isTutorialCutScene01 = true;
            iTween.MoveTo(Global._cutSceneCamera, new Hashtable() { {"x", -224 },  {"y", Global._cutSceneCamera.transform.position.y },  {"z", 65 },  {"time", 5.5f },  {"delay", 0.5f },  {"easetype", "easeOutQuad" }, });
        }
        if (((Global._cutSceneCamera.transform.position.x == -224) && (Global._cutSceneCamera.transform.position.z == 65)) && Global._isTutorialCutScene01)
        {
            Global._isTutorial27 = true;
            Global._walkerCamera.SetActive(true);
            Global._cutSceneCamera.SetActive(false);
            if (!Global._isTutorial28)
            {
                Global._stopSoundDialogue();
                this.StopCoroutine("DialogueEnd");
                this.StopDialogue();
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.sectoid_dlg_020);
                this.ResetDialogue();
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialDialogue22");
            }
            else
            {
                Global._gui_CloseAllInterfaces();
                Global._isPopUpOpen = false;
                Global.UFOShowEntry = true;
                Global._isUFOScreen = false;
                ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
                Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
                Global._gui_SetInterface("WorldMap");
            }
            Global.globalBus.gameObject.SendMessage("SaveGame");
        }
    }

    public virtual void gui_TutorialDialogue22()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string101, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial28 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_004);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            //if (Global._isChangeChar) this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue23");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial28 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_004);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue23");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue23()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string078, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string102, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial29 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            if (Global._isChangeChar)
            {
                this.ResetDialogue();
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_021);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue24");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial29 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_021);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue24");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue24()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string103, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial30 = true;
            Global._isPopUpOpen = true;
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            this.ResetDialogue();
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            this.generateVegetables();
            Global._isVeGame01 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("VegetablesGameScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial30 = true;
            Global._isPopUpOpen = true;
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            this.ResetDialogue();
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
            this.generateVegetables();
            Global._isVeGame01 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("VegetablesGameScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialVeGameEndPopUp() //Туториальный попап - изучили смузи
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string075, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_cabbage_soup);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string122, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._recipeFood[1]["available"] = "true";
            Global._walkerCamera.SetActive(false);
            Global._cutSceneCamera.SetActive(true);
            Global._isTutorialCutScene01 = false;
            Global._isTutorialVeGameEnd = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("TutorialCutScene01");
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue25()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string123, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial31 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (464 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) + (182 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.globalBus.SendMessage("c_GameController_Base_command_unsetPause");
            Global._system_isHeroDead = true;
            Global._isPopUpOpen = true;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = false;
            Global.fuckerCall = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialGoToUFO");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial31 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (464 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) + (182 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.globalBus.SendMessage("c_GameController_Base_command_unsetPause");
            Global._system_isHeroDead = true;
            Global._isPopUpOpen = true;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = false;
            Global.fuckerCall = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialGoToUFO");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialGoToUFO()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial31)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial31));
        }
        if (Global._isTutorial31)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
            GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
            if (GUI.Button(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                 //Global._isTutorial24 = true;
                 //Global._gui_SetInterface("TutorialDialogue20");
                Global._isTutorial32 = true;
                Global.fuckerXCoord = (Screen.width / 2) - (430 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) - (254 * Global.guiRatio);
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                //Global.fuckerCall = true;
                Global.globalBus.gameObject.SendMessage("SaveGame");
                Global._gui_SetInterface("TutorialWeaponSelectLibrary");
            }
            GUI.EndGroup();
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialWeaponSelectLibrary()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (872 * Global.guiRatio), (Screen.height / 2) - (419 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Кухня
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote1);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string054, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (686 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 576 * Global.guiRatio, 77 * Global.guiRatio)); //Музей
        GUI.Box(new Rect(0, 0, 576 * Global.guiRatio, 77 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote6);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string139, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string056, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial32)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial32));
        }
        if (Global._isTutorial32)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
            if (GUI.Button(new Rect((Screen.width / 2) - (544 * Global.guiRatio), (Screen.height / 2) - (136 * Global.guiRatio), 364 * Global.guiRatio, 377 * Global.guiRatio), "", this.gs_common.emptystyle)) //Библиотека
            {
                (Global._userBooksBiology["library_book03"] as Hashtable)["teach"] = "true";
                Global._isTutorial33 = true;
                Global._isTutorial33Video = true;
                Global.fuckerXCoord = (Screen.width / 2) - (487 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) - (192 * Global.guiRatio);
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                //Global.fuckerCall = true;
                Global.globalBus.gameObject.SendMessage("SaveGame");
                Global._gui_SetInterface("TutorialWeaponLibraryScreen");
            }
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialWeaponLibraryScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_library_background);
        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string035, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_n);
        GUI.Box(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n);
        GUI.Box(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_n);
        GUI.Box(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n);
        GUI.Box(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_s);
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        if ((Global.fuckerCall && Global._isTutorial33) && !Global._isTutorialSpidersBookSelect)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial33));
        }
        if (Global.fuckerCall && Global._isTutorialSpidersBookSelect)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorialSpidersBookSelect));
        }
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_vegetables_on);
        GUI.Box(new Rect(172 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_mushrooms_off);
        GUI.Box(new Rect(334 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_spiders_on);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(943 * Global.guiRatio, 133 * Global.guiRatio, 733 * Global.guiRatio, 668 * Global.guiRatio));
        if (Global._isTutorialSpidersBookSelect)
        {
            GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userBooksBiology["library_book03"] as Hashtable)["titleimage"]);
            GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userBooksBiology["library_book03"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
            GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userBooksBiology["library_book03"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
            GUI.Box(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
            GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string074, this.gs_font.font_28daysletter_60_cb_blue);
        }
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_library_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string071, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global._isTutorial33 && !Global._isTutorialSpidersBookSelect)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
            GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
            GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
            if (GUI.Button(new Rect(334 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorialSpidersBookSelect = true;
                Global.fuckerXCoord = (Screen.width / 2) + (351 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) - (47 * Global.guiRatio);
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            }
            GUI.EndGroup();
            GUI.EndGroup();
        }
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        if (Global._isTutorial33Video && Global._isTutorialSpidersBookSelect)
        {
            GUI.BeginGroup(new Rect(943 * Global.guiRatio, 133 * Global.guiRatio, 733 * Global.guiRatio, 668 * Global.guiRatio));
            if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorialSpidersBookComplete = true;
                Global._isTutorial33Video = false;
                Global.videoPlayer.SendMessage("_PlayVideo", "NGS.ogv");
            }
            GUI.EndGroup();
        }
        GUI.EndGroup();
        if (Global._isTutorial33Video && Global._isTutorialSpidersBookSelect)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialFeatureLearn() //Туториальный попап - изучили фичу
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string075, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_paralizator);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string203, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._recipeItems[1]["available"] = "true";
            Global._isTutorial34 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (152 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (207 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("TutorialGoToWorkroom");
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialGoToWorkroom()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (872 * Global.guiRatio), (Screen.height / 2) - (419 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Кухня
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote1);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string054, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (686 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 576 * Global.guiRatio, 77 * Global.guiRatio)); //Музей
        GUI.Box(new Rect(0, 0, 576 * Global.guiRatio, 77 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote6);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string139, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string056, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial34)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial34));
        }
        if (Global._isTutorial34)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
            if (GUI.Button(new Rect((Screen.width / 2) - (92 * Global.guiRatio), (Screen.height / 2) - (502 * Global.guiRatio), 531 * Global.guiRatio, 266 * Global.guiRatio), "", this.gs_common.emptystyle)) //Мастерская
            {
                Global._isTutorial35 = true;
                Global.fuckerXCoord = (Screen.width / 2) - (403 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) - (22 * Global.guiRatio);
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                Global.globalBus.gameObject.SendMessage("SaveGame");
                Global._gui_SetInterface("TutorialWorkroomScreen");
            }
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialWorkroomScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 288 * Global.guiRatio, 89 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_craft_active);
        GUI.Box(new Rect(144 * Global.guiRatio, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_makeout_inactive);
        GUI.EndGroup();
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.BeginGroup(new Rect(0, 0, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[0]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[0]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[0]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[3]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        if (Global._isTutorialWorkroomRecipeSelect)
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_white);
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 340 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[1]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[1]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[1]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.EndGroup();
        if (Global._isTutorialWorkroomRecipeSelect)
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_60_cb_white);
        }
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        if (!Global._isTutorialWorkroomRecipeSelect)
        {
            GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
        }
        else
        {
            GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
            GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[3]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
            GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype1"]);
            if (int.Parse((string) Global._recipeItems[3]["costamount1"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype1"]] as Hashtable)["amount"]))
            {
                GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount1"].ToString(), this.gs_font.font_century_30_cb_green);
            }
            else
            {
                GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount1"].ToString(), this.gs_font.font_century_30_cb_red);
            }
            GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype2"]);
            if (int.Parse((string) Global._recipeItems[3]["costamount2"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype2"]] as Hashtable)["amount"]))
            {
                GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount2"].ToString(), this.gs_font.font_century_30_cb_green);
            }
            else
            {
                GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount2"].ToString(), this.gs_font.font_century_30_cb_red);
            }
            GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype3"]);
            if (int.Parse((string) Global._recipeItems[3]["costamount3"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype3"]] as Hashtable)["amount"]))
            {
                GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount3"].ToString(), this.gs_font.font_century_30_cb_green);
            }
            else
            {
                GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount3"].ToString(), this.gs_font.font_century_30_cb_red);
            }
            GUI.EndGroup();
            GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
        }
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial35)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial35));
        }
        if (Global.fuckerCall && Global._isTutorial36)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial36));
        }
        if (Global._isTutorial35)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
            GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
            if (GUI.Button(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorialWorkroomRecipeSelect = true;
                Global._isTutorial35 = false;
                Global._isTutorial36 = true;
                Global.fuckerXCoord = (Screen.width / 2) + (351 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) - (35 * Global.guiRatio);
                Global.globalBus.gameObject.SendMessage("SaveGame");
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            }
            GUI.EndGroup();
        }
        if (Global._isTutorial36)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
            GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
            if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global.globalBus.gameObject.SendMessage("SaveGame");
                Global._isClickDialogue = true;
                Global._playDialogue(Global.audio_player.sectoid_dlg_023);
                this.ResetDialogue();
                this.StartCoroutine("DialogueEnd");
                Global._gui_SetInterface("TutorialWorkroomNoResDialogue1");
            }
            GUI.EndGroup();
        }
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_workroom_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string125, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        GUI.EndGroup();
    }

    public virtual void gui_TutorialWorkroomNoResDialogue1()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 288 * Global.guiRatio, 89 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_craft_active);
        GUI.Box(new Rect(144 * Global.guiRatio, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_makeout_inactive);
        GUI.EndGroup();
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.BeginGroup(new Rect(0, 0, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[0]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[0]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[0]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[3]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_white);
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 340 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[1]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[1]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[1]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_60_cb_white);
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
        GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
        GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[3]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
        GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype1"]);
        if (int.Parse((string) Global._recipeItems[3]["costamount1"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype1"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount1"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount1"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype2"]);
        if (int.Parse((string) Global._recipeItems[3]["costamount2"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype2"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount2"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount2"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype3"]);
        if (int.Parse((string) Global._recipeItems[3]["costamount3"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype3"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount3"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount3"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.EndGroup();
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string126, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_005);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialWorkroomNoResDialogue2");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_005);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialWorkroomNoResDialogue2");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialWorkroomNoResDialogue2()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 288 * Global.guiRatio, 89 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_craft_active);
        GUI.Box(new Rect(144 * Global.guiRatio, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_makeout_inactive);
        GUI.EndGroup();
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.BeginGroup(new Rect(0, 0, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[0]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[0]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[0]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[3]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_white);
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 340 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[1]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[1]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[1]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_60_cb_white);
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
        GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
        GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[3]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
        GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype1"]);
        if (int.Parse((string) Global._recipeItems[1]["costamount1"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype1"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount1"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount1"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype2"]);
        if (int.Parse((string) Global._recipeItems[1]["costamount2"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype2"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount2"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount2"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype3"]);
        if (int.Parse((string) Global._recipeItems[1]["costamount3"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype3"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount3"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount3"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.EndGroup();
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string078, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string127, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_024);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialWorkroomNoResDialogue3");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_024);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialWorkroomNoResDialogue3");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialWorkroomNoResDialogue3()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 288 * Global.guiRatio, 89 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_craft_active);
        GUI.Box(new Rect(144 * Global.guiRatio, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_makeout_inactive);
        GUI.EndGroup();
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.BeginGroup(new Rect(0, 0, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[0]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[0]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[0]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[3]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_white);
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 340 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[1]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[1]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[1]["available"] as string == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_60_cb_white);
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
        GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
        GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[3]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
        GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype1"]);
        if (int.Parse((string) Global._recipeItems[3]["costamount1"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype1"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount1"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount1"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype2"]);
        if (int.Parse((string) Global._recipeItems[1]["costamount2"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype2"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount2"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount2"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.Box(new Rect(340 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[3]["costtype3"]);
        if (int.Parse((string) Global._recipeItems[1]["costamount3"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[3]["costtype3"]] as Hashtable)["amount"]))
        {
            GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount3"].ToString(), this.gs_font.font_century_30_cb_green);
        }
        else
        {
            GUI.Label(new Rect(474 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[3]["costamount3"].ToString(), this.gs_font.font_century_30_cb_red);
        }
        GUI.EndGroup();
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string128, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial37 = true;
            Global.fuckerXCoord = (Screen.width / 2) - (828 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (192 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialTechLibraryScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial37 = true;
            Global.fuckerXCoord = (Screen.width / 2) - (828 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (192 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("TutorialTechLibraryScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialTechLibraryScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_library_background);
        GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Strings.string036, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_health_n);
        GUI.Box(new Rect(192 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_geo_n);
        GUI.Box(new Rect(336 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_tech_s);
        GUI.Box(new Rect(480 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_history_n);
        GUI.Box(new Rect(624 * Global.guiRatio, 5 * Global.guiRatio, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_library_tab_biology_n);
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        if ((Global.fuckerCall && Global._isTutorial37) && !Global._isTutorialSkafBookSelect)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial37));
        }
        if (Global.fuckerCall && Global._isTutorialSkafBookSelect)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorialSkafBookSelect));
        }
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_library_icon_flash_skaf_on);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(943 * Global.guiRatio, 133 * Global.guiRatio, 733 * Global.guiRatio, 668 * Global.guiRatio));
        if (Global._isTutorialSkafBookSelect)
        {
            GUI.Box(new Rect(0, 0, 733 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global._userBooksTech["library_book01"] as Hashtable)["titleimage"]);
            GUI.Label(new Rect(32 * Global.guiRatio, 188 * Global.guiRatio, 669 * Global.guiRatio, 40 * Global.guiRatio), (Global._userBooksTech["library_book01"] as Hashtable)["titletext"].ToString(), this.gs_font.font_b52_36_c_white);
            GUI.Label(new Rect(32 * Global.guiRatio, 236 * Global.guiRatio, 669 * Global.guiRatio, 340 * Global.guiRatio), (Global._userBooksTech["library_book01"] as Hashtable)["description"].ToString(), this.gs_font.font_century_24_lb_blue);
            GUI.Box(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
            GUI.Label(new Rect(198 * Global.guiRatio, 592 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string074, this.gs_font.font_28daysletter_60_cb_blue);
        }
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_library_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string071, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global._isTutorial37 && !Global._isTutorialSkafBookSelect)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
            GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
            GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
            if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorialSkafBookSelect = true;
                Global.fuckerXCoord = (Screen.width / 2) + (351 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) - (47 * Global.guiRatio);
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            }
            GUI.EndGroup();
            GUI.EndGroup();
        }
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        if (!Global._isTutorial37Video && Global._isTutorialSkafBookSelect)
        {
            GUI.BeginGroup(new Rect(943 * Global.guiRatio, 133 * Global.guiRatio, 733 * Global.guiRatio, 668 * Global.guiRatio));
            if (GUI.Button(new Rect(198 * Global.guiRatio, 572 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorialSkafBookComplete = true;
                Global._isTutorial37Video = true;
                (Global._userBooksTech["library_book01"] as Hashtable)["teach"] = "true";
                Global.videoPlayer.SendMessage("_PlayVideo", "ED_CAT_SCYFINDER_rus.ogv");
            }
            GUI.EndGroup();
        }
        GUI.EndGroup();
        if (!Global._isTutorial37Video && Global._isTutorialSkafBookSelect)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialBlasterLearn() //Туториальный попап - изучили резак
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string075, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_blaster);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string129, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._recipeItems[1]["available"] = "true";
            Global._isTutorial34 = true;
            Global._isTutorial38 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (152 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (207 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_SetInterface("TutorialGoToWorkroom2");
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialGoToWorkroom2()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (872 * Global.guiRatio), (Screen.height / 2) - (419 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Кухня
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote1);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string054, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (686 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 576 * Global.guiRatio, 77 * Global.guiRatio)); //Музей
        GUI.Box(new Rect(0, 0, 576 * Global.guiRatio, 77 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote6);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string139, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string056, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial34)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial34));
        }
        if (Global._isTutorial34)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
            if (GUI.Button(new Rect((Screen.width / 2) - (92 * Global.guiRatio), (Screen.height / 2) - (502 * Global.guiRatio), 531 * Global.guiRatio, 266 * Global.guiRatio), "", this.gs_common.emptystyle)) //Мастерская
            {
                Global._isTutorial38_1 = true;
                Global.fuckerXCoord = (Screen.width / 2) - (403 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) + (168 * Global.guiRatio);
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                Global.globalBus.gameObject.SendMessage("SaveGame");
                Global._gui_SetInterface("TutorialWorkroom2Screen");
            }
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialWorkroom2Screen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_kitchen_background);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 5 * Global.guiRatio, 288 * Global.guiRatio, 89 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_craft_active);
        GUI.Box(new Rect(144 * Global.guiRatio, 0, 144 * Global.guiRatio, 89 * Global.guiRatio), "", this.gs_common.gui_craftscreen_tab_makeout_inactive);
        GUI.EndGroup();
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.BeginGroup(new Rect(48 * Global.guiRatio, 133 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.BeginGroup(new Rect(0, 0, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[0]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[0]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[0]["available"] == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[3]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[3]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[3]["available"] == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, 340 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_recipe_background);
        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[1]["icon"]);
        GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[1]["name"].ToString(), this.gs_font.font_b52_48_c_blue);
        if (Global._recipeItems[1]["available"] == "false")
        {
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.cf_blackscreenelement);
        }
        if (Global._isTutorialWorkroomRecipeSelect2)
        {
            GUI.Label(new Rect(170 * Global.guiRatio, 70 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Global._recipeItems[1]["name"].ToString(), this.gs_font.font_b52_48_c_white);
            GUI.Box(new Rect(0, 0, 840 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_highlight_frame);
        }
        GUI.EndGroup();
        GUI.EndGroup();
        if (Global._isTutorialWorkroomRecipeSelect2)
        {
            GUI.Label(new Rect(895 * Global.guiRatio, 18 * Global.guiRatio, 829 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[1]["name"].ToString(), this.gs_font.font_b52_60_cb_white);
        }
        GUI.Label(new Rect(923 * Global.guiRatio, 452 * Global.guiRatio, 670 * Global.guiRatio, 50 * Global.guiRatio), Strings.string062, this.gs_font.font_b52_48_c_blue);
        GUI.Box(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_kitchen_ingridients_background);
        if (!Global._isTutorialWorkroomRecipeSelect2)
        {
            GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
        }
        else
        {
            GUI.Box(new Rect(933 * Global.guiRatio, 151 * Global.guiRatio, 248 * Global.guiRatio, 248 * Global.guiRatio), "", (GUIStyle) Global._recipeItems[1]["icon"]);
            GUI.Label(new Rect(1192 * Global.guiRatio, 190 * Global.guiRatio, 449 * Global.guiRatio, 60 * Global.guiRatio), Global._recipeItems[1]["description"].ToString(), this.gs_font.font_century_24_lb_blue);
            GUI.BeginGroup(new Rect(923 * Global.guiRatio, 507 * Global.guiRatio, 670 * Global.guiRatio, 160 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[1]["costtype1"]);
            if (int.Parse((string) Global._recipeItems[1]["costamount1"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[1]["costtype1"]] as Hashtable)["amount"]))
            {
                GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[1]["costamount1"].ToString(), this.gs_font.font_century_30_cb_green);
            }
            else
            {
                GUI.Label(new Rect(134 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[1]["costamount1"].ToString(), this.gs_font.font_century_30_cb_red);
            }
            GUI.Box(new Rect(170 * Global.guiRatio, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", ("icons_") + Global._recipeItems[1]["costtype2"]);
            if (int.Parse((string) Global._recipeItems[1]["costamount2"]) <= int.Parse((string) (Global._userResourcesCraft[Global._recipeItems[1]["costtype2"]] as Hashtable)["amount"]))
            {
                GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[1]["costamount2"].ToString(), this.gs_font.font_century_30_cb_green);
            }
            else
            {
                GUI.Label(new Rect(304 * Global.guiRatio, 5 * Global.guiRatio, 26 * Global.guiRatio, 26 * Global.guiRatio), Global._recipeItems[1]["costamount2"].ToString(), this.gs_font.font_century_30_cb_red);
            }
            GUI.EndGroup();
            GUI.Box(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
        }
        GUI.Label(new Rect(1141 * Global.guiRatio, 731 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string063, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_workroom_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string125, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial38)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial38));
        }
        if (Global.fuckerCall && Global._isTutorial39)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial39));
        }
        if (Global._isTutorial38)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_up);
            GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
            if (GUI.Button(new Rect(0, 170 * Global.guiRatio, 840 * Global.guiRatio, 670 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorialWorkroomRecipeSelect2 = true;
                Global._isTutorial38 = false;
                Global._isTutorial39 = true;
                Global.fuckerXCoord = (Screen.width / 2) + (351 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) - (35 * Global.guiRatio);
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            }
            GUI.EndGroup();
        }
        if (Global._isTutorial39)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
            GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
            if (GUI.Button(new Rect(1141 * Global.guiRatio, 711 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorial39 = false;
                Global._currentRecipeName = Strings.string129;
                Global._currentRecipeDroptype = "thing";
                Global._currentRecipeType = "weapon";
                Global._currentRecipeThingName = "thing_r3_gun";
                Global._currentRecipeIcon = this.gs_common.gui_RecipeItemIcon03;
                Global._currentRecipeUniqueID = ((("weapon_" + Random.Range(1111, 9999).ToString()) + "_") + Random.Range(1411, 9599).ToString()) + Random.Range(1171, 9991).ToString();
                Global._currentRecipeDescription = Strings.string130;
                Global._currentRecipeAddDamage = "15";
                Global._currentRecipeCostType1 = "loot_metal";
                Global._currentRecipeCostType2 = "loot_eballon";
                Global._currentRecipeCostType3 = "none";
                Global._currentRecipeCostType4 = "none";
                Global._currentRecipeCostAmount1 = "5";
                Global._currentRecipeCostAmount2 = "1";
                Global._currentRecipeCostAmount3 = "0";
                Global._currentRecipeCostAmount4 = "0";
                Global._currentRecipeCostIcon1 = Global._RecipeCostIcon;
                Global._currentRecipeCostIcon2 = Global._RecipeCostIcon;
                Global._currentRecipeCostIcon3 = Global._RecipeCostIcon;
                Global._currentRecipeCostIcon4 = Global._RecipeCostIcon;
                Global._gui_AddInterface("TutorialCreateBlasterPopup");
            }
            GUI.EndGroup();
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialCreateBlasterPopup() //Туториальный попап создание резака
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string032, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_tutorial_icon_blaster);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string129, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global.globalBus.SendMessage("c_GameController_Base_command_CreateStorageItem");
            Global._isTutorial39 = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._playDialogue(Global.audio_player.sectoid_dlg_025);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue26");
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue26()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string131, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isTutorial40 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (216 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (278 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global._system_isHeroDead = false;
            Global.UFOShowEntry = true;
            Global.GreenHouseExitDoor = false;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            Global._isTutorialGreenHouseComplete = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isTutorial40 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (216 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) - (278 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            Global._system_isHeroDead = false;
            Global.UFOShowEntry = true;
            Global.GreenHouseExitDoor = false;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            Global._isTutorialGreenHouseComplete = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialGoToStorage()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_ufoscreen_background);
        GUI.Box(new Rect(0, (Screen.height / 2) - (540 * Global.guiRatio), 1920 * Global.guiRatio, 1080 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (611 * Global.guiRatio), (Screen.height / 2) - (55 * Global.guiRatio), 581 * Global.guiRatio, 402 * Global.guiRatio)); //Рубка
        GUI.Box(new Rect(0, 0, 581 * Global.guiRatio, 402 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote4);
        GUI.Label(new Rect(0, 352 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string046, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (371 * Global.guiRatio), (Screen.height / 2) + (110 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Трюм
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote5);
        GUI.Label(new Rect(193 * Global.guiRatio, 152 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string048, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) + (245 * Global.guiRatio), (Screen.height / 2) - (465 * Global.guiRatio), 579 * Global.guiRatio, 201 * Global.guiRatio)); //Мастерская
        GUI.Box(new Rect(0, 0, 579 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote3);
        GUI.Label(new Rect(193 * Global.guiRatio, 4 * Global.guiRatio, 386 * Global.guiRatio, 60 * Global.guiRatio), Strings.string050, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (936 * Global.guiRatio), (Screen.height / 2) + (28 * Global.guiRatio), 580 * Global.guiRatio, 201 * Global.guiRatio)); //Библиотека
        GUI.Box(new Rect(0, 0, 580 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote2);
        GUI.Label(new Rect(0, 154 * Global.guiRatio, 387 * Global.guiRatio, 60 * Global.guiRatio), Strings.string052, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (872 * Global.guiRatio), (Screen.height / 2) - (419 * Global.guiRatio), 520 * Global.guiRatio, 201 * Global.guiRatio)); //Кухня
        GUI.Box(new Rect(0, 0, 520 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote1);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string054, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (686 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 576 * Global.guiRatio, 77 * Global.guiRatio)); //Музей
        GUI.Box(new Rect(0, 0, 576 * Global.guiRatio, 77 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_footnote6);
        GUI.Label(new Rect(0, 4 * Global.guiRatio, 327 * Global.guiRatio, 60 * Global.guiRatio), Strings.string139, this.gs_font.font_b52_60_cb_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_ufoscreen_ufo_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string056, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        if (Global.fuckerCall && Global._isTutorial40)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial40));
        }
        if (Global._isTutorial40)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
            if (GUI.Button(new Rect((Screen.width / 2) - (180 * Global.guiRatio), (Screen.height / 2) + (91 * Global.guiRatio), 660 * Global.guiRatio, 201 * Global.guiRatio), "", this.gs_common.emptystyle)) //Склад 1
            {
                Global._gui_SetInterface("TutorialStorageScreen");
                Global.StorageInventoryArr = new List<Hashtable>(Global.globalInventoryThingsArr);
                Global.StorageInventoryArr.Remove(Global.StorageInventoryArr[0]);
                this.c_GameController_Base_command_SortStorageInventory();
                Global.globalBus.SendMessage("c_GameController_Base_command_TutorialSearchBlaster");
                Global._isTutorial41 = true;
                Global.globalBus.gameObject.SendMessage("SaveGame");
            }
            if (GUI.Button(new Rect((Screen.width / 2) + (231 * Global.guiRatio), (Screen.height / 2) - (236 * Global.guiRatio), 302 * Global.guiRatio, 327 * Global.guiRatio), "", this.gs_common.emptystyle)) //Склад 2
            {
                Global._gui_SetInterface("TutorialStorageScreen");
                Global.StorageInventoryArr = new List<Hashtable>(Global.globalInventoryThingsArr);
                Global.StorageInventoryArr.Remove(Global.StorageInventoryArr[0]);
                this.c_GameController_Base_command_SortStorageInventory();
                Global.globalBus.SendMessage("c_GameController_Base_command_TutorialSearchBlaster");
                Global._isTutorial41 = true;
                Global.globalBus.gameObject.SendMessage("SaveGame");
            }
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialStorageScreen() //Интерфейс склада
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_common_ufo_blur_background);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (861 * Global.guiRatio), (Screen.height / 2) - (505 * Global.guiRatio), 1724 * Global.guiRatio, 850 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1724 * Global.guiRatio, 850 * Global.guiRatio), "", this.gs_common.gui_storage_background);
        GUI.Label(new Rect(0, 18 * Global.guiRatio, 858 * Global.guiRatio, 60 * Global.guiRatio), Strings.string093, this.gs_font.font_b52_60_cb_white);
        GUI.Label(new Rect(866 * Global.guiRatio, 18 * Global.guiRatio, 858 * Global.guiRatio, 60 * Global.guiRatio), Strings.string098, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(1651 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(37 * Global.guiRatio, 0, 144 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_storage_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 327 * Global.guiRatio, 80 * Global.guiRatio), Strings.string098, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo_hover);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        this.drawTutorialStorageInventory(Global.StorageInventoryArr, true);
        this.drawTutorialStorage(Global.StorageArr, true);
        if (Global.fuckerCall && Global._isTutorial43)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial43));
        }
        if (Global._isTutorial43)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
            GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
            if (GUI.Button(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorial43 = false;
                Global._isTutorial44 = true;
                Global._isTutorialStorage = true;
                this.c_GameController_Base_command_SortThings();
                Global._gui_SetInterface("TutorialInventoryScreen");
                Global.globalBus.SendMessage("c_GameController_Base_command_TutorialSearchInventoryBlaster");
                Global.globalBus.gameObject.SendMessage("SaveGame");
            }
            GUI.EndGroup();
        }
        GUI.EndGroup();
    }

    private void drawTutorialStorageInventory(System.Collections.Generic.List<Hashtable> inArr, bool isThings)
    {
        bool addFood = false;
        int addFoodIndex = 0;
        bool addNewFood = false;
        GUI.BeginGroup(new Rect((Screen.width / 2) - (767 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 670 * Global.guiRatio, 670 * Global.guiRatio));
        foreach (Hashtable oneThingInv in inArr)
        {
            Rect iconThingRect = new Rect((int.Parse((string) oneThingInv["x"]) * 170) * Global.guiRatio, (int.Parse((string) oneThingInv["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio);
            if ((Global.someDropableObject == null) || (!(Global.someDropableObject == null) && !(Global.someDropableObject["uniqueID"] == oneThingInv["vid"])))
            {
                GUI.BeginGroup(iconThingRect);
                if (!(Global.someDropableObject == null))
                {
                    if (Global.someDropableObject["uniqueID"] == oneThingInv["uniqueID"])
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    }
                    else
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                        {
                            GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                        }
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                    {
                        GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                    }
                }
                GUI.EndGroup();
            }
            if (Global.someDropableObject == null)
            {
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) - (767 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (372 * Global.guiRatio));
            }
            if (!(Global.someDropableObject == null))
            {
                if (Global._isInventoryThing)
                {
                    GUI.Box(new Rect((int.Parse((string) Global.someDropableObject["x"]) * 170) * Global.guiRatio, (int.Parse((string) Global.someDropableObject["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) - (767 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (372 * Global.guiRatio));
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1830 * Global.guiRatio, 783 * Global.guiRatio));
        if (Global._isInventoryThing)
        {
            if (!(Global.someDropableObject == null))
            {
                if ((Global.someDropableObject["type"] as string == "food") 
                    || ((Global.someDropableObject["type"] as string == "loot") 
                    && (Global.someDropableObject["thingname"] as string == "food_milk")))
                {
                    GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string096, this.gs_font.font_28daysletter_60_cb_blue);
                }
                else
                {
                    GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string094, this.gs_font.font_28daysletter_60_cb_blue);
                }
            }
            else
            {
                GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string097, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        else
        {
            if (Global._isDummyThing)
            {
                GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string215, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        if (Global.fuckerCall && Global._isTutorial42)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial42));
        }
        if (Global._isTutorial42)
        {
            GUI.Box(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
            GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string215, this.gs_font.font_28daysletter_60_cb_blue);
        }
        else
        {
            GUI.Box(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
            GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string094, this.gs_font.font_28daysletter_60_cb_blue);
        }
        GUI.EndGroup();
        if (Global._isTutorial42)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
        }
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1830 * Global.guiRatio, 783 * Global.guiRatio));
        if (GUI.Button(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.emptystyle))
        {
            if (Global.someDropableObject == null)
            {
            }
            else
            {
            }
             //null
             //nothing
            Global.globalInventoryThingsArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "inventory" },  {"isdropable", "true" },  {"x", "-1" },  {"y", "-1" },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
            Global.StorageInventoryArr.Add(new Hashtable(new Hashtable() { {"droptype", (Global.someDropableObject["object"] as Hashtable)["droptype"] },  {"type", (Global.someDropableObject["object"] as Hashtable)["type"] },  {"thingname", (Global.someDropableObject["object"] as Hashtable)["thingname"] },  {"icon", (Global.someDropableObject["object"] as Hashtable)["icon"] },  {"fromdrag", "storage_inv" },  {"isdropable", "true" },  {"x", (Global.someDropableObject["object"] as Hashtable)["x"] },  {"y", (Global.someDropableObject["object"] as Hashtable)["y"] },  {"uniqueID", (Global.someDropableObject["object"] as Hashtable)["uniqueID"] },  {"vid", (Global.someDropableObject["object"] as Hashtable)["vid"] },  {"name", (Global.someDropableObject["object"] as Hashtable)["name"] },  {"selected", "false" },  {"level", (Global.someDropableObject["object"] as Hashtable)["level"] },  {"costtype1", (Global.someDropableObject["object"] as Hashtable)["costtype1"] },  {"costamount1", (Global.someDropableObject["object"] as Hashtable)["costamount1"] },  {"costicon1", (Global.someDropableObject["object"] as Hashtable)["costicon1"] },  {"costtype2", (Global.someDropableObject["object"] as Hashtable)["costtype2"] },  {"costamount2", (Global.someDropableObject["object"] as Hashtable)["costamount2"] },  {"costicon2", (Global.someDropableObject["object"] as Hashtable)["costicon2"] },  {"costtype3", (Global.someDropableObject["object"] as Hashtable)["costtype3"] },  {"costamount3", (Global.someDropableObject["object"] as Hashtable)["costamount3"] },  {"costicon3", (Global.someDropableObject["object"] as Hashtable)["costicon3"] },  {"costtype4", (Global.someDropableObject["object"] as Hashtable)["costtype4"] },  {"costamount4", (Global.someDropableObject["object"] as Hashtable)["costamount4"] },  {"costicon4", (Global.someDropableObject["object"] as Hashtable)["costicon4"] }, }));
            System.Collections.Generic.List<Hashtable> StorageArrayTemp = Global.StorageArr;
            int StorageObjIndex = StorageArrayTemp.IndexOf((Hashtable) Global.someDropableObject["object"]);
            Global.StorageArr.Remove(Global.StorageArr[StorageObjIndex]);
            Global._isDropStart = false;
            Global._isWeCanDragAndDrop = false;
            Global.isMouseHold = false;
            Global.someDropableObject = null;
            this.c_GameController_Base_command_SortStorageInventory();
            Global._isTutorial42 = false;
            Global._isTutorial43 = true;
            Global.fuckerXCoord = (Screen.width / 2) + (609 * Global.guiRatio);
            Global.fuckerYCoord = (Screen.height / 2) + (180 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
        }
        GUI.EndGroup();
    }

    private void drawTutorialStorage(System.Collections.Generic.List<Hashtable> inArr, bool isThings)
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) + (102 * Global.guiRatio), (Screen.height / 2) - (372 * Global.guiRatio), 670 * Global.guiRatio, 670 * Global.guiRatio));
        foreach (Hashtable oneThingInv in inArr)
        {
            Rect iconThingRect = new Rect((int.Parse((string) oneThingInv["x"]) * 170) * Global.guiRatio, (int.Parse((string) oneThingInv["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio);
            if ((Global.someDropableObject == null) || (!(Global.someDropableObject == null) && !(Global.someDropableObject["uniqueID"] == oneThingInv["vid"])))
            {
                GUI.BeginGroup(iconThingRect);
                if (!(Global.someDropableObject == null))
                {
                    if (Global.someDropableObject["uniqueID"] == oneThingInv["uniqueID"])
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    }
                    else
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                        {
                            GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                        }
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                    {
                        GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                    }
                }
                GUI.EndGroup();
            }
            if (Global.someDropableObject == null)
            {
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) + (102 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (372 * Global.guiRatio));
            }
            if (!(Global.someDropableObject == null))
            {
                if (Global._isStorageThing)
                {
                    GUI.Box(new Rect((int.Parse((string) Global.someDropableObject["x"]) * 170) * Global.guiRatio, (int.Parse((string) Global.someDropableObject["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) + (102 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (372 * Global.guiRatio));
            }
            if (Global._isTutorial41)
            {
                this.someVectorTutorialBlaster = Global.GUIAniTexture(new Rect((float.Parse(Global.TutorialBlasterXCoord) * 170) * Global.guiRatio, (float.Parse(Global.TutorialBlasterYCoord) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), this.gs_common.gui_tutorial_flash_anim.normal.background, 14, 5, 0.15f, this.someVectorTutorialBlaster, false);
                if (GUI.Button(new Rect((float.Parse(Global.TutorialBlasterXCoord) * 170) * Global.guiRatio, (float.Parse(Global.TutorialBlasterYCoord) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
                {
                    Global._isTutorial41 = false;
                    Global._isTutorial42 = true;
                    Global._isStorageThing = true;
                    Global._isInventoryThing = false;
                    Hashtable someDropableObjectHash = this.getDropHashtableForStorage(Global.TutorialBlasterThingInv);
                    someDropableObjectHash["fromdrag"] = "storage";
                    Global.someDropableObject = someDropableObjectHash;
                    Global.fuckerXCoord = (Screen.width / 2) - (502 * Global.guiRatio);
                    Global.fuckerYCoord = (Screen.height / 2) + (36 * Global.guiRatio);
                    Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                }
            }
            if (Global._isTutorial42)
            {
                GUI.Box(new Rect((float.Parse(Global.TutorialBlasterXCoord) * 170) * Global.guiRatio, (float.Parse(Global.TutorialBlasterYCoord) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
            }
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialInventoryScreen() //Экран персонажа для туториала
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_inventory_background);
        //Имя и здоровье героя
        GUI.BeginGroup(new Rect((Screen.width / 2) + (145 * Global.guiRatio), (Screen.height / 2) - (499 * Global.guiRatio), 768 * Global.guiRatio, 52 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 57 * Global.guiRatio, 49 * Global.guiRatio), "", this.gs_common.gui_inventory_heart);
        GUI.Box(new Rect(68 * Global.guiRatio, 34 * Global.guiRatio, 700 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_inventory_healthbar_empty);
        GUI.BeginGroup(new Rect(68 * Global.guiRatio, 34 * Global.guiRatio, ((Global._userCurrentHealth * 700) * Global.guiRatio) / Global._userMaxHealth, 18 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 700 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_inventory_healthbar_full);
        GUI.EndGroup();
        GUI.Label(new Rect(68 * Global.guiRatio, 6 * Global.guiRatio, 100 * Global.guiRatio, 40 * Global.guiRatio), Strings.string078, this.gs_font.font_b52_36_l_white);
        GUI.Label(new Rect(656 * Global.guiRatio, 10 * Global.guiRatio, 120 * Global.guiRatio, 30 * Global.guiRatio), (Global._userCurrentHealth.ToString() + "/") + Global._userMaxHealth.ToString(), this.gs_font.font_b52_28_l_white);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1830 * Global.guiRatio, 783 * Global.guiRatio));
        if (Global._isR3Backpack || Global._isR5Backpack)
        {
            GUI.Box(new Rect(0, 0, 1830 * Global.guiRatio, 783 * Global.guiRatio), "", this.gs_common.gui_inventory_cells);
        }
        else
        {
            GUI.Box(new Rect(0, 0, 1830 * Global.guiRatio, 783 * Global.guiRatio), "", this.gs_common.gui_inventory_cells_no_backpack);
        }
        //Панель статусов
        GUI.BeginGroup(new Rect(1058 * Global.guiRatio, 0, 772 * Global.guiRatio, 86 * Global.guiRatio));
        if (Global._isStatusMegaHealth)
        {
            GUI.Box(new Rect(240 * Global.guiRatio, 1 * Global.guiRatio, 83 * Global.guiRatio, 83 * Global.guiRatio), "", this.gs_common.gui_inventory_status_fullhealth);
        }
        GUI.EndGroup();
        //СЛОТЫ ГЕРОЯ
        GUI.Box(new Rect(1058 * Global.guiRatio, 96 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_weapons_icon);
        GUI.Box(new Rect(1058 * Global.guiRatio, 276 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_feature_icon);
        GUI.Box(new Rect(1058 * Global.guiRatio, 456 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_backpack_icon);
        GUI.Box(new Rect(1670 * Global.guiRatio, 96 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_armor_icon);
        GUI.Box(new Rect(1670 * Global.guiRatio, 276 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_gloves_icon);
        GUI.Box(new Rect(1670 * Global.guiRatio, 456 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_boots_icon);
        if (!(Global.system_dummy["armor"] == null))
        {
            GUI.Box(new Rect(1670 * Global.guiRatio, 96 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global.system_dummy["armor"] as Hashtable)["icon"]);
        }
        if (!(Global.system_dummy["gloves"] == null))
        {
            GUI.Box(new Rect(1670 * Global.guiRatio, 276 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global.system_dummy["gloves"] as Hashtable)["icon"]);
        }
        if (!(Global.system_dummy["boots"] == null))
        {
            GUI.Box(new Rect(1670 * Global.guiRatio, 456 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global.system_dummy["boots"] as Hashtable)["icon"]);
        }
        if (!(Global.system_dummy["backpack"] == null))
        {
            GUI.Box(new Rect(1058 * Global.guiRatio, 456 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) (Global.system_dummy["backpack"] as Hashtable)["icon"]);
        }
        //Панель параметров
        GUI.BeginGroup(new Rect(1058 * Global.guiRatio, 636 * Global.guiRatio, 772 * Global.guiRatio, 148 * Global.guiRatio));
        GUI.Box(new Rect(40 * Global.guiRatio, 9 * Global.guiRatio, 64 * Global.guiRatio, 65 * Global.guiRatio), "", this.gs_common.gui_inventory_damage);
        GUI.Label(new Rect(104 * Global.guiRatio, 28 * Global.guiRatio, 125 * Global.guiRatio, 30 * Global.guiRatio), (Global._system_CharacterParams["damagemin"].ToString() + "-") + Global._system_CharacterParams["damagemax"].ToString(), this.gs_font.font_b52_36_c_white);
        GUI.Box(new Rect(40 * Global.guiRatio, 78 * Global.guiRatio, 64 * Global.guiRatio, 65 * Global.guiRatio), "", this.gs_common.gui_inventory_armor);
        GUI.Label(new Rect(104 * Global.guiRatio, 96 * Global.guiRatio, 125 * Global.guiRatio, 30 * Global.guiRatio), Global._system_CharacterParams["armor"].ToString(), this.gs_font.font_b52_36_c_white);
        GUI.EndGroup();
        //3D-модель героя
        GUI.DrawTexture(new Rect(1058 * Global.guiRatio, 0, 772 * Global.guiRatio, 772 * Global.guiRatio), this.gs_common.gui_inventory_hero_render);
        GUI.EndGroup();
        GUI.BeginGroup(new Rect(0, Screen.height - (144 * Global.guiRatio), 1920 * Global.guiRatio, 144 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_common_menu_background);
        GUI.Box(new Rect(52 * Global.guiRatio, 15 * Global.guiRatio, 116 * Global.guiRatio, 113 * Global.guiRatio), "", this.gs_common.gui_inventory_symbol);
        GUI.Label(new Rect(198 * Global.guiRatio, 40 * Global.guiRatio, 427 * Global.guiRatio, 80 * Global.guiRatio), Strings.string093, this.gs_font.font_28daysletter_79_lb_blue);
        GUI.Box(new Rect(1303 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_map);
        GUI.Box(new Rect(1447 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_ufo);
        GUI.Box(new Rect(1591 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_inventory_hover);
        GUI.Box(new Rect(1735 * Global.guiRatio, 6 * Global.guiRatio, 144 * Global.guiRatio, 138 * Global.guiRatio), "", this.gs_common.gui_common_button_exit);
        GUI.EndGroup();
        this.drawTutorialUserInventory(Global.globalInventoryThingsArr, true);
        this.drawTutorialDummyThings();
        GUI.EndGroup();
    }

    private void drawTutorialUserInventory(System.Collections.Generic.List<Hashtable> inArr, bool isThings)
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1010 * Global.guiRatio, 670 * Global.guiRatio));
        foreach (Hashtable oneThingInv in inArr)
        {
            Rect iconThingRect = new Rect((int.Parse((string) oneThingInv["x"]) * 170) * Global.guiRatio, (int.Parse((string) oneThingInv["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio);
            if ((Global.someDropableObject == null) || (!(Global.someDropableObject == null) && !(Global.someDropableObject["uniqueID"] == oneThingInv["vid"])))
            {
                GUI.BeginGroup(iconThingRect);
                if (!(Global.someDropableObject == null))
                {
                    if (Global.someDropableObject["uniqueID"] == oneThingInv["uniqueID"])
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    }
                    else
                    {
                        GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                        if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                        {
                            GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                        }
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", (GUIStyle) oneThingInv["icon"]);
                    if (!(oneThingInv["val"] == null) && !(oneThingInv["val"] as string == "0"))
                    {
                        GUI.Label(new Rect(107 * Global.guiRatio, 1 * Global.guiRatio, 53 * Global.guiRatio, 26 * Global.guiRatio), oneThingInv["val"].ToString(), this.gs_font.font_century_30_cb_green);
                    }
                }
                GUI.EndGroup();
            }
            if (Global.someDropableObject == null)
            {
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) - (915 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (411 * Global.guiRatio));
            }
            if (!(Global.someDropableObject == null))
            {
                if (Global._isInventoryThing)
                {
                    GUI.Box(new Rect((int.Parse((string) Global.someDropableObject["x"]) * 170) * Global.guiRatio, (int.Parse((string) Global.someDropableObject["y"]) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
                }
                iconThingRect.x = iconThingRect.x + ((Screen.width / 2) - (915 * Global.guiRatio));
                iconThingRect.y = iconThingRect.y + ((Screen.height / 2) - (411 * Global.guiRatio));
            }
        }
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1830 * Global.guiRatio, 783 * Global.guiRatio));
        if (Global.someDropableObject == null)
        {
        }
         //null
        if (!(Global.someDropableObject == null))
        {
            if (GUI.Button(new Rect(883 * Global.guiRatio, 688 * Global.guiRatio, 94 * Global.guiRatio, 95 * Global.guiRatio), "", this.gs_common.gui_inventory_button_trashbin))
            {
            }
        }
         //remove item
        if (Global._isInventoryThing)
        {
            if (!(Global.someDropableObject == null))
            {
                if ((Global.someDropableObject["type"] as string == "food") 
                    || ((Global.someDropableObject["type"] as string == "loot") 
                    && (Global.someDropableObject["thingname"] as string == "food_milk")))
                {
                    GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string096, this.gs_font.font_28daysletter_60_cb_blue);
                }
                else
                {
                    GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string094, this.gs_font.font_28daysletter_60_cb_blue);
                }
            }
            else
            {
                GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string097, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        else
        {
            if (Global._isDummyThing)
            {
                GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string095, this.gs_font.font_28daysletter_60_cb_blue);
            }
        }
        if (Global.fuckerCall && Global._isTutorial45)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorial45));
        }
        if (Global._isTutorial45)
        {
            GUI.Box(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal);
            GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string094, this.gs_font.font_28daysletter_60_cb_blue);
        }
        else
        {
            GUI.Box(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_disabled);
            GUI.Label(new Rect(343 * Global.guiRatio, 710 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string094, this.gs_font.font_28daysletter_60_cb_blue);
        }
        if (Global._isTutorial44)
        {
            this.someVectorTutorialBlaster = Global.GUIAniTexture(new Rect((float.Parse(Global.TutorialBlasterXCoord) * 170) * Global.guiRatio, (float.Parse(Global.TutorialBlasterYCoord) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), this.gs_common.gui_tutorial_flash_anim.normal.background, 14, 5, 0.15f, this.someVectorTutorialBlaster, false);
            if (GUI.Button(new Rect((float.Parse(Global.TutorialBlasterXCoord) * 170) * Global.guiRatio, (float.Parse(Global.TutorialBlasterYCoord) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorial44 = false;
                Global._isTutorial45 = true;
                Global._isDummyThing = false;
                Global._isInventoryThing = true;
                Hashtable someDropableObjectHash = this.getDropHashtableFor(Global.TutorialBlasterThingInv);
                someDropableObjectHash["fromdrag"] = "inventory";
                Global.someDropableObject = someDropableObjectHash;
                Global.globalBus.SendMessage("c_GameController_Base_command_cancelDropSomeObject");
                Global.fuckerXCoord = (Screen.width / 2) - (502 * Global.guiRatio);
                Global.fuckerYCoord = (Screen.height / 2) + (36 * Global.guiRatio);
                Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            }
        }
        if (Global._isTutorial45)
        {
            GUI.Box(new Rect((float.Parse(Global.TutorialBlasterXCoord) * 170) * Global.guiRatio, (float.Parse(Global.TutorialBlasterYCoord) * 170) * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_inventory_hover_slot);
        }
        GUI.EndGroup();
        if (Global._isTutorial45)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
            GUI.BeginGroup(new Rect((Screen.width / 2) - (915 * Global.guiRatio), (Screen.height / 2) - (411 * Global.guiRatio), 1830 * Global.guiRatio, 783 * Global.guiRatio));
            if (GUI.Button(new Rect(343 * Global.guiRatio, 687 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.emptystyle))
            {
                Global._isTutorial45 = false;
                Global.system_dummy.Add(Global.someDropableObject["type"], new Hashtable(new Hashtable() { {"position", Global.someDropableObject["type"] },  {"droptype", Global.someDropableObject["droptype"] },  {"type", Global.someDropableObject["type"] },  {"thingname", Global.someDropableObject["thingname"] },  {"icon", Global.someDropableObject["icon"] },  {"fromdrag", Global.someDropableObject["fromdrag"] },  {"isdropable", Global.someDropableObject["isdropable"] },  {"x", Global.someDropableObject["x"] },  {"y", Global.someDropableObject["y"] },  {"uniqueID", ((string) (((string) (((string) (((string) Global.someDropableObject["type"]) + Random.Range(1111, 9999).ToString())) + "_")) + Random.Range(1411, 9599).ToString())) + Random.Range(1171, 9991).ToString() },  {"vid", Global.someDropableObject["vid"] },  {"name", Global.someDropableObject["name"] },  {"level", Global.someDropableObject["level"] },  {"costtype1", Global.someDropableObject["costtype1"] },  {"costamount1", Global.someDropableObject["costamount1"] },  {"costicon1", Global.someDropableObject["costicon1"] },  {"costtype2", Global.someDropableObject["costtype2"] },  {"costamount2", Global.someDropableObject["costamount2"] },  {"costicon2", Global.someDropableObject["costicon2"] },  {"costtype3", Global.someDropableObject["costtype3"] },  {"costamount3", Global.someDropableObject["costamount3"] },  {"costicon3", Global.someDropableObject["costicon3"] },  {"costtype4", Global.someDropableObject["costtype4"] },  {"costamount4", Global.someDropableObject["costamount4"] },  {"costicon4", Global.someDropableObject["costicon4"] }, }));
                /*var ThingsArrayTemp: Hashtable[] = Global.globalInventoryThingsArr.ToBuiltin(Hashtable) as Hashtable[];
            var ThingsObjIndex = System.Array.IndexOf(ThingsArrayTemp, Global.someDropableObject["object"]);
            Global.globalInventoryThingsArr.RemoveAt(ThingsObjIndex);*/
                System.Collections.Generic.List<Hashtable> ThingsArrayTemp = Global.globalInventoryThingsArr;
                int ThingsObjIndex = ThingsArrayTemp.IndexOf((Hashtable) Global.someDropableObject["object"]);
                Global.globalInventoryThingsArr.Remove(Global.globalInventoryThingsArr[ThingsObjIndex]);
                Global._isDropStart = false;
                Global._isWeCanDragAndDrop = false;
                Global.isMouseHold = false;
                Global.someDropableObject = null;
                this.c_GameController_Base_command_SortThings();
                Global.r3_gun.SetActive(true);
                Global.inv_r3_gun.SetActive(true);
                Global._isR3Gun = true;
                Global._isAttack01 = false;
                Global._isAttack02 = true;
                Global._system_distanceAttack = 10;
                Global._gui_SetInterface("CharacterScreen");
                Global._isInventoryOpen = true;
                Global._isTutorialUFOStorageComplete = true;
                Global._isTutorialInventory = true;
                Global.globalBus.gameObject.SendMessage("SaveGame");
            }
            GUI.EndGroup();
        }
    }

    private void drawTutorialDummyThings()
    {
        GUI.BeginGroup(new Rect(0, 0, 1920 * Global.guiRatio, 1080 * Global.guiRatio));
        foreach (DictionaryEntry oneEntry in Global.system_dummy)
        {
            Rect iconThingRect = new Rect(0, 0, 159 * Global.guiRatio, 159 * Global.guiRatio);
            if ((oneEntry.Value as Hashtable).ContainsKey("position"))
            {
                if (Global._someWearHashPlace_StrplaceToRect.ContainsKey((oneEntry.Value as Hashtable)["position"]))
                {
                    iconThingRect = (Rect) Global._someWearHashPlace_StrplaceToRect[(oneEntry.Value as Hashtable)["position"]];
                }
            }
            else
            {
            }
             //nothing
            if ((Global.someDropableObject == null) || (!(Global.someDropableObject == null) && !(Global.someDropableObject["uniqueID"] == (oneEntry.Value as Hashtable)["vid"])))
            {
                GUI.BeginGroup(new Rect(iconThingRect.x, iconThingRect.y, iconThingRect.height, iconThingRect.width));
                if (!(Global.someDropableObject == null))
                {
                    if (Global.someDropableObject["uniqueID"] == (oneEntry.Value as Hashtable)["uniqueID"])
                    {
                        GUI.Box(new Rect(0, 0, 159 * Global.guiRatio, 159 * Global.guiRatio), "", (GUIStyle) (oneEntry.Value as Hashtable)["icon"]);
                    }
                    else
                    {
                        GUI.Box(new Rect(0, 0, 159 * Global.guiRatio, 159 * Global.guiRatio), "", (GUIStyle) (oneEntry.Value as Hashtable)["icon"]);
                    }
                }
                else
                {
                    GUI.Box(new Rect(0, 0, 159 * Global.guiRatio, 159 * Global.guiRatio), "", (GUIStyle) (oneEntry.Value as Hashtable)["icon"]);
                }
                GUI.EndGroup();
            }
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue27()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string143, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
             /*Global._isTutorialGoToGreenHouseAgain = true;
                Global._system_isHeroDead = false;
                Global.UFOShowEntry = true;
                Global.GreenHouseExitDoor = false;
                Global._hero_dolly.GetComponent.<UnityEngine.AI.NavMeshAgent>().enabled = true;
                Global._isPopUpOpen = false;
                Global._gui_SetInterface("WorldMap");*/
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._isTutorialGoToGreenHouseAgain = true;
            Global._walkerCamera.SetActive(false);
            Global._cutSceneCamera.SetActive(true);
            Global._isTutorialCutScene01 = false;
            Global._gui_SetInterface("TutorialCutScene01");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
             /*Global._isTutorialGoToGreenHouseAgain = true;
            Global._system_isHeroDead = false;
            Global.UFOShowEntry = true;
            Global.GreenHouseExitDoor = false;
            Global._hero_dolly.GetComponent.<UnityEngine.AI.NavMeshAgent>().enabled = true;
            Global._isPopUpOpen = false;
            Global._gui_SetInterface("WorldMap");*/
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._isTutorialGoToGreenHouseAgain = true;
            Global._walkerCamera.SetActive(false);
            Global._cutSceneCamera.SetActive(true);
            Global._isTutorialCutScene01 = false;
            Global._gui_SetInterface("TutorialCutScene01");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue28()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string144, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global.globalBus.SendMessage("c_GameController_Base_command_unsetPause");
            Global._system_isHeroDead = false;
            Global._isTutorialDialogueSpiderEnd = true;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
            Global._isPopUpOpen = false;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._showMiniMap = false;
            Global._gui_SetInterface("TutorialBattleScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global.globalBus.SendMessage("c_GameController_Base_command_unsetPause");
            Global._system_isHeroDead = false;
            Global._isTutorialDialogueSpiderEnd = true;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
            Global._isPopUpOpen = false;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._showMiniMap = false;
            Global._gui_SetInterface("TutorialBattleScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialBattleScreen()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect((Screen.width / 2) - (919 * Global.guiRatio), (Screen.height / 2) - (499 * Global.guiRatio), 57 * Global.guiRatio, 49 * Global.guiRatio), "", this.gs_common.gui_battlescreen_heart);
        if (GUI.Button(new Rect(Screen.width - (155 * Global.guiRatio), Screen.height - (120 * Global.guiRatio), 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_livebattle))
        {
            Global._isBattleRagesOn = false;
        }
        GUI.Label(new Rect((Screen.width / 2) - (847 * Global.guiRatio), (Screen.height / 2) - (498 * Global.guiRatio), 550 * Global.guiRatio, 40 * Global.guiRatio), Strings.string078, this.gs_font.font_b52_36_l_blue);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (851 * Global.guiRatio), (Screen.height / 2) - (468 * Global.guiRatio), 468 * Global.guiRatio, 18 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 468 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_battlescreen_healtbar_background);
        GUI.BeginGroup(new Rect(0, 0, ((Global._userCurrentHealth * 468) * Global.guiRatio) / Global._userMaxHealth, 18 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 468 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_battlescreen_healtbar_health);
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.BeginGroup(new Rect((Screen.width / 2) - (211 * Global.guiRatio), (Screen.height / 2) - (498 * Global.guiRatio), 422 * Global.guiRatio, 48 * Global.guiRatio));
        GUI.Label(new Rect(5 * Global.guiRatio, 0, 422 * Global.guiRatio, 40 * Global.guiRatio), ((s_AIController) Global._TutorialSpider.GetComponent(typeof(s_AIController))).npcname, this.gs_font.font_b52_36_l_blue);
        GUI.BeginGroup(new Rect(0, 30 * Global.guiRatio, 422 * Global.guiRatio, 18 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 422 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_battlescreen_mobhealth_background);
        GUI.BeginGroup(new Rect(0, 0, ((((s_AIController) Global._TutorialSpider.GetComponent(typeof(s_AIController))).npclife * 422) * Global.guiRatio) / ((s_AIController) Global._TutorialSpider.GetComponent(typeof(s_AIController))).npclifemax, 18 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 422 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_battlescreen_mobhealth);
        GUI.EndGroup();
        GUI.EndGroup();
        GUI.Label(new Rect(320 * Global.guiRatio, 4 * Global.guiRatio, 102 * Global.guiRatio, 30 * Global.guiRatio), (((s_AIController) Global._TutorialSpider.GetComponent(typeof(s_AIController))).npclife.ToString() + "/") + ((s_AIController) Global._TutorialSpider.GetComponent(typeof(s_AIController))).npclifemax.ToString(), this.gs_font.font_b52_28_l_blue);
        GUI.EndGroup();
        GUI.Label(new Rect((Screen.width / 2) - (490 * Global.guiRatio), (Screen.height / 2) - (494 * Global.guiRatio), 200 * Global.guiRatio, 50 * Global.guiRatio), (Global._userCurrentHealth.ToString() + "/") + Global._userMaxHealth.ToString(), this.gs_font.font_b52_28_l_blue);
        GUI.BeginGroup(new Rect((Screen.width / 2) - (902 * Global.guiRatio), Screen.height - (120 * Global.guiRatio), 638 * Global.guiRatio, 98 * Global.guiRatio));
        if (Global.Ability01Cooldown == 0)
        {
            if (GUI.Button(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01))
            {
                if (Global._isTutorialSpiderClick && Global._isTutorialAbilityClick)
                {
                    Global._isTutorialAbilityClick = false;
                    Global._isUFOScreen = false;
                    Global._isPopUpOpen = false;
                    Global._gui_SetInterface("WorldMap");
                }
                //Мощный выстрел
                if (!Global._isAbility01Select)
                {
                    Global._isAbility01Select = true;
                    Global._TempDistance = (int) Global._system_distanceAttack;
                    if (Global._system_distanceAttack < 15)
                    {
                        Global._system_distanceAttack = 15;
                    }
                }
                else
                {
                    Global._isAbility01Select = false;
                    Global._system_distanceAttack = Global._TempDistance;
                }
                Global._isClickDlg = false;
            }
            if (Global._isAbility01Select)
            {
                GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01_select);
                Global._isAbility01 = true;
            }
        }
        else
        {
            GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_battlescreen_ability01);
            GUI.Box(new Rect(0, 0, 98 * Global.guiRatio, ((98 * Global.guiRatio) / 10) * Global.Ability01Cooldown), "", this.gs_common.gui_battlescreen_shad);
        }
        GUI.EndGroup();
        if ((Global.fuckerCall && Global._isTutorialSpiderClick) && Global._isTutorialAbilityClick)
        {
            this.StartCoroutine(this.c_GuiCommonController_TutorialArrowFuckerUp(Global._isTutorialAbilityClick));
        }
        if (Global._isTutorialSpiderClick && Global._isTutorialAbilityClick)
        {
            GUI.Box(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 289 * Global.guiRatio), "", this.gs_common.gui_tutorial_fuckerarrow_down);
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue29()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string145, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_006);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue30");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_006);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue30");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue30()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string146, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_029);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue31");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_029);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue31");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue31()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string147, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            this.generateMushroomsItems();
            Global._isMushroomsGame01 = true;
            Global._gui_SetInterface("MushroomGameScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            this.generateMushroomsItems();
            Global._isMushroomsGame01 = true;
            Global._gui_SetInterface("MushroomGameScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialMushroomEndPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Label(new Rect(0, 20 * Global.guiRatio, 942 * Global.guiRatio, 60 * Global.guiRatio), Strings.string118, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
            Global._isUFOScreen = false;
            Global._isTutorialMushroomGameEnd = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_030);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue32");
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 184 * Global.guiRatio, 846 * Global.guiRatio, 120 * Global.guiRatio), Strings.string153, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(96 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            Global._gui_CloseInterface();
            Global._isTutorialMushroomGameEnd = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global.videoPlayer.SendMessage("_PlayVideo", "ED_CAT_MUSHROOM_rus.ogv");
        }
        GUI.Label(new Rect(96 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string120, this.gs_font.font_28daysletter_60_cb_blue);
        if (GUI.Button(new Rect(485 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_no))
        {
            Global._gui_CloseInterface();
            Global._isUFOScreen = false;
            Global._isTutorialMushroomGameEnd = true;
            Global._isTutorialMushroomVideo = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_030);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue32");
        }
        GUI.Label(new Rect(485 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string121, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialMushroomSoupLearn() //Туториальный попап - изучили грибной суп
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string075, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_icons_food_mushroom_soup);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string058, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._gui_CloseInterface();
            (Global._userBooksBiology["library_book02"] as Hashtable)["teach"] = "true";
            Global._recipeFood[2]["available"] = "true";
            Global._isTutorialMushroomVideo = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._gui_AddInterface("TutorialMushroomPotatoesLearn");
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialMushroomPotatoesLearn() //Туториальный попап - изучили грибы с картошкой
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_common_popup);
        GUI.Label(new Rect(0, 22 * Global.guiRatio, 918 * Global.guiRatio, 60 * Global.guiRatio), Strings.string075, this.gs_font.font_b52_60_cb_white);
        GUI.Box(new Rect(838 * Global.guiRatio, 16 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close);
        GUI.Box(new Rect(378 * Global.guiRatio, 145 * Global.guiRatio, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_icons_food_mushroom_potatoes);
        GUI.Label(new Rect(32 * Global.guiRatio, 342 * Global.guiRatio, 846 * Global.guiRatio, 50 * Global.guiRatio), Strings.string059, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(293 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_common_button_normal))
        {
            Global._gui_CloseInterface();
            Global._recipeFood[3]["available"] = "true";
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.StopDialogue();
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.sectoid_dlg_030);
            this.ResetDialogue();
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue32");
        }
        GUI.Label(new Rect(293 * Global.guiRatio, 462 * Global.guiRatio, 330 * Global.guiRatio, 50 * Global.guiRatio), Strings.string018, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue32()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string148, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_007);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue33");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_007);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue33");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue33()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string149, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_031);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue34");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_031);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue34");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue34()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string150, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_008);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue35");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_008);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue35");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue35()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string151, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_032);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue36");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_032);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TutorialDialogue36");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TutorialDialogue36()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string152, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._system_isHeroDead = false;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            Global._isTutorialEnd = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._system_isHeroDead = false;
            Global._hero_dolly.GetComponent<UnityEngine.AI.NavMeshAgent>().enabled = true;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            Global._isTutorialEnd = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
    }

    // ******************* ДИАЛОГИ НА ВХОДЕ В ВИЛЛУ
    public virtual void gui_VillaDialogue01()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string154, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_009);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("VillaDialogue02");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_009);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("VillaDialogue02");
        }
        GUI.EndGroup();
    }

    public virtual void gui_VillaDialogue02()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width/2 - 450*Global.guiRatio, Screen.height - 1061*Global.guiRatio, 995*Global.guiRatio, 1061*Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string155, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_034);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("VillaDialogue03");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_034);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("VillaDialogue03");
        }
        GUI.EndGroup();
    }

    public virtual void gui_VillaDialogue03()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string156, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_VillaDialogue04()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string157, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_VillaDialogue05()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string158, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
        }
        GUI.EndGroup();
    }

    // ******************* ДИАЛОГИ С ДЕВОЧКОЙ ИЗ ВИРТА
    public virtual void gui_GirlDialogue01()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string159, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_010);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue02");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_010);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue02");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue02()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string160, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_002);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue03");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_002);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue03");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue03()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string161, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_011);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue04");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_011);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue04");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue04()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string162, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_003);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue05");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_003);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue05");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue05()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string163, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_012);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue06");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_012);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue06");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue06()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string164, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_004);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue07");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_004);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue07");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue07()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string165, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_013);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue08");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_013);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue08");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue08()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string166, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_005);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue09");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_005);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue09");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue09()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string167, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_014);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue10");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_014);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue10");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue10()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string168, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_006);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue11");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_006);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue11");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue11()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string169, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_AddInterface("ZoeStoryPopUp");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_AddInterface("ZoeStoryPopUp");
        }
        GUI.EndGroup();
    }

    public virtual void gui_ZoeStoryPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        //GUI.Label(Rect(0, 20 * Global.guiRatio, 942 * Global.guiRatio, 60 * Global.guiRatio), Strings.string118, gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
            Global._isViewZoeStory = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._playDialogue(Global.audio_player.zoe_dlg_007);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue14");
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 184 * Global.guiRatio, 846 * Global.guiRatio, 120 * Global.guiRatio), Strings.string170, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(96 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            Global._gui_CloseInterface();
            Global._isViewZoeStory = true;
            Global.videoPlayer.SendMessage("_PlayVideo", "NGS.ogv");
        }
        GUI.Label(new Rect(96 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string120, this.gs_font.font_28daysletter_60_cb_blue);
        if (GUI.Button(new Rect(485 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_no))
        {
            Global._gui_CloseInterface();
            Global._isViewZoeStory = true;
            Global.speakerGO = GameObject.Find("_zoeSpeaker");
            Global.holoGO = GameObject.Find("_zoeSpeakerHolo");
            Global._playDialogue(Global.audio_player.zoe_dlg_007);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue14");
        }
        GUI.Label(new Rect(485 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string121, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue12()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string173, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_010);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue13");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.zoe_dlg_010);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("GirlDialogue13");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue13()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string174, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
            Global._isLearnZoeStory = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
            Global._isLearnZoeStory = true;
            Global.globalBus.gameObject.SendMessage("SaveGame");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue14()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string171, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("VillaScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue15()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string172, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_AddInterface("ZoeStoryPopUp");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_AddInterface("ZoeStoryPopUp");
        }
        GUI.EndGroup();
    }

    public virtual void gui_GirlDialogue16()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_dialogue_girl_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_zoe_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string176, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("MuseumScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            Global._gui_SetInterface("MuseumScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_HOG2Dialogue01()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_hog2_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string177, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            this.generateMuseumItems();
            Global._isMuseumGame01 = true;
            Global._gui_SetInterface("MuseumGameScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            this.generateMuseumItems();
            Global._isMuseumGame01 = true;
            Global._gui_SetInterface("MuseumGameScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_HOG3Dialogue01()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_dialogue_hog3_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string182, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            this.generateBoxroomItems();
            Global._isBoxroomGame01 = true;
            Global._gui_SetInterface("BoxroomGameScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            this.ResetDialogue();
            this.generateBoxroomItems();
            Global._isBoxroomGame01 = true;
            Global._gui_SetInterface("BoxroomGameScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_FishingDialogue01()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string186, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_015);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("FishingDialogue02");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_015);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("FishingDialogue02");
        }
        GUI.EndGroup();
    }

    public virtual void gui_FishingDialogue02()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string078, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string187, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_040);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("FishingDialogue03");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_040);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("FishingDialogue03");
        }
        GUI.EndGroup();
    }

    public virtual void gui_FishingDialogue03()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string188, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._isFirstFishing = true;
            Global._gui_SetInterface("FishingGameScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._isFirstFishing = true;
            Global._gui_SetInterface("FishingGameScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_FishingDialogue04()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string189, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_016);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("FishingDialogue05");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_016);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("FishingDialogue05");
        }
        GUI.EndGroup();
    }

    public virtual void gui_FishingDialogue05()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string078, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string190, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isPopUpOpen = false;
            Global.UFOShowEntry = true;
            Global._isUFOScreen = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isPopUpOpen = false;
            Global.UFOShowEntry = true;
            Global._isUFOScreen = false;
            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = false;
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
    }

    public virtual void gui_DoorLockDialogue01()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string191, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._gui_AddInterface("DoorLockHint");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._gui_AddInterface("DoorLockHint");
        }
        GUI.EndGroup();
    }

    public virtual void gui_DoorLockHint()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
            Global._gui_SetInterface("DoorLockGameScreen");
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 184 * Global.guiRatio, 846 * Global.guiRatio, 120 * Global.guiRatio), Strings.string192, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(96 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            Global._gui_CloseInterface();
            Global._isKot = false;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._isClickDialogue = true;
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_043);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("DoorLockDialogue02");
        }
        GUI.Label(new Rect(96 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string007, this.gs_font.font_28daysletter_60_cb_blue);
        if (GUI.Button(new Rect(485 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_no))
        {
            Global._gui_CloseInterface();
            Global._gui_SetInterface("DoorLockGameScreen");
        }
        GUI.Label(new Rect(485 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string008, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_DoorLockDialogue02()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string193, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 5).ToString();
            Global._gui_SetInterface("DoorLockGameScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global.globalInventoryThingsArr[0]["val"] = (int.Parse((string) Global.globalInventoryThingsArr[0]["val"]) - 5).ToString();
            Global._gui_SetInterface("DoorLockGameScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TempleDialogue01()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string194, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TempleDialogue02()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string195, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_017);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TempleDialogue03");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = true;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_kotSpeaker");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            Global._isClickDialogue = true;
            Global._playDialogue(Global.audio_player.kot_dlg_017);
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TempleDialogue03");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TempleDialogue03()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_cot_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_kot_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string196, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_046);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TempleDialogue04");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._isKot = false;
            Global._isChangeChar = true;
            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (Global._isChangeChar)
            {
                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                {
                }
                else
                {
                     //speak
                    this.ResetDialogue();
                }
            }
            Global._playDialogue(Global.audio_player.sectoid_dlg_046);
            this.StartCoroutine("DialogueEnd");
            Global._gui_SetInterface("TempleDialogue04");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TempleDialogue04()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string197, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global.MosaicFirstEntry = true;
            Global._isUFOScreen = false;
            Global._gui_SetInterface("WorldMap");
            Global._gui_AddInterface("MosaicGameScreen");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global.MosaicFirstEntry = true;
            Global._isUFOScreen = false;
            Global._gui_SetInterface("WorldMap");
            Global._gui_AddInterface("MosaicGameScreen");
        }
        GUI.EndGroup();
    }

    public virtual void gui_TempleDialogue05()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string198, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._gui_AddInterface("IndiansPopUp");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._gui_AddInterface("IndiansPopUp");
        }
        GUI.EndGroup();
    }

    public virtual void gui_IndiansPopUp()
    {
        GUI.BeginGroup(new Rect((Screen.width / 2) - (455 * Global.guiRatio), (Screen.height / 2) - (334 * Global.guiRatio), 918 * Global.guiRatio, 582 * Global.guiRatio));
        GUI.Box(new Rect(0, 0, 918 * Global.guiRatio, 582 * Global.guiRatio), "", this.gs_common.gui_vegame_popup);
        GUI.Label(new Rect(0, 20 * Global.guiRatio, 942 * Global.guiRatio, 60 * Global.guiRatio), Strings.string118, this.gs_font.font_b52_60_cb_white);
        if (GUI.Button(new Rect(838 * Global.guiRatio, 17 * Global.guiRatio, 51 * Global.guiRatio, 50 * Global.guiRatio), "", this.gs_common.gui_common_button_close))
        {
            Global._gui_CloseInterface();
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            Global.UFOShowEntry = true;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.Label(new Rect(32 * Global.guiRatio, 184 * Global.guiRatio, 846 * Global.guiRatio, 120 * Global.guiRatio), Strings.string200, this.gs_font.font_century_48_cb_blue);
        if (GUI.Button(new Rect(96 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_yes))
        {
            Global._gui_CloseInterface();
            Global.videoPlayer.SendMessage("_PlayVideo", "NGS.ogv");
        }
        GUI.Label(new Rect(96 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string120, this.gs_font.font_28daysletter_60_cb_blue);
        if (GUI.Button(new Rect(485 * Global.guiRatio, 440 * Global.guiRatio, 330 * Global.guiRatio, 96 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_no))
        {
            Global._gui_CloseInterface();
            Global._isPopUpOpen = false;
            Global._isUFOScreen = false;
            Global.UFOShowEntry = true;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.Label(new Rect(485 * Global.guiRatio, 464 * Global.guiRatio, 330 * Global.guiRatio, 60 * Global.guiRatio), Strings.string121, this.gs_font.font_28daysletter_60_cb_blue);
        GUI.EndGroup();
    }

    public virtual void gui_TempleDialogue06()
    {
        GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
        GUI.Box(new Rect(Global.xposition, 0, Global.newwidth, Screen.height), "", this.gs_common.gui_tutorial_isle_dialogue_background);
        //GUI.Box(Rect(Screen.width / 2 - 450 * Global.guiRatio, Screen.height - 1061 * Global.guiRatio, 995 * Global.guiRatio, 1061 * Global.guiRatio), "", gs_common.gui_tutorial_sectoid_avatar);
        GUI.DrawTexture(new Rect((Screen.width / 2) - (529 * Global.guiRatio), Screen.height - (1060 * Global.guiRatio), 1060 * Global.guiRatio, 1060 * Global.guiRatio), this.gs_common.gui_dialogue_sectoid_render);
        GUI.BeginGroup(new Rect(0, Screen.height - (186 * Global.guiRatio), 1920 * Global.guiRatio, 186 * Global.guiRatio));
        GUI.Box(new Rect(0, 42 * Global.guiRatio, 1920 * Global.guiRatio, 144 * Global.guiRatio), "", this.gs_common.gui_dialogue_block_background);
        GUI.Box(new Rect(15 * Global.guiRatio, 0, 327 * Global.guiRatio, 54 * Global.guiRatio), "", this.gs_common.gui_dialogue_name_background);
        GUI.Label(new Rect(15 * Global.guiRatio, 4 * Global.guiRatio, 327 * Global.guiRatio, 52 * Global.guiRatio), Strings.string043, this.gs_font.font_28daysletter_48_cb_blue);
        GUI.Label(new Rect(182 * Global.guiRatio, 72 * Global.guiRatio, 1556 * Global.guiRatio, 106 * Global.guiRatio), Strings.string199, this.gs_font.font_century_30_cb_blue);
        if (GUI.Button(new Rect(1811 * Global.guiRatio, 65 * Global.guiRatio, 52 * Global.guiRatio, 98 * Global.guiRatio), "", this.gs_common.gui_dialogue_button_right))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._isPopUpOpen = false;
            Global.UFOShowEntry = true;
            Global._isUFOScreen = false;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
        if (GUI.Button(new Rect(0, 0, Screen.width, Screen.height), "", this.gs_common.emptystyle))
        {
            Global._stopSoundDialogue();
            this.StopCoroutine("DialogueEnd");
            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
            {
            }
            else
            {
                 //speak
                this.ResetDialogue();
            }
            Global._isPopUpOpen = false;
            Global.UFOShowEntry = true;
            Global._isUFOScreen = false;
            Global._gui_SetInterface("WorldMap");
        }
        GUI.EndGroup();
    }

    /*****************************************************************************************
* main OnGUI function (calls every frame)
*****************************************************************************************/
    public virtual void OnGUI()
    {
        GUI.skin = this.gs_common.guiSkin;
        if ((Global._guiLayers[0] != "WorldMap") && !Global._is_global_show_interface)
        {
            return;
        }
        if (Global._is_global_show_interface)
        {
            if (Global._guiLayersPointer > 0)
            {
                if (Global._guiLayersNoBlack[Global._guiLayersPointer] != "1")
                {
                    GUI.depth = 10;
                    GUI.enabled = false;
                    this.gui_dc = GUI.color;
                    GUI.color = new Color(1, 1, 1, 2);
                }
            }
        }
        int guiL = 0;
        while (guiL <= Global._guiLayersPointer)
        {
            Global._guiLayersPointer_current = guiL;
            if (Global._is_global_show_interface || ((Global._guiLayers[guiL] == "WorldMap") && !Global._is_global_show_interface))
            {
                if (((Global._guiLayersPointer > 0) && (Global._guiLayersPointer == guiL)) && !Global._isTutorialShowing)
                {
                    GUI.color = this.gui_dc;
                    GUI.enabled = true;
                    if (Global._guiLayersNoBlack[guiL] != "1")
                    {
                        Global.setBlackSquareOnScreen(this.gs_common);
                    }
                }
                string guiLName = Global._guiLayers[guiL] as string;
                System.Delegate guiFunc = Global._guiFuncs[guiLName];
                guiFunc.DynamicInvoke(new object[] {});
            }
            guiL++;
        }
        if ((Global.isNpcBarShow && (this.npcBarGO != null)) && Global._isBattleRagesOn)
        {
            GUI.BeginGroup(new Rect((Screen.width / 2) - (211 * Global.guiRatio), (Screen.height / 2) - (498 * Global.guiRatio), 422 * Global.guiRatio, 48 * Global.guiRatio));
            //Global.GUILabelStroke(Rect(0, 0, 657*Global.guiRatio, 50*Global.guiRatio), npcBarName, gs_font.font_arial_47_lb_s, gs_font.font_arial_47_lb_white);
            GUI.Label(new Rect(5 * Global.guiRatio, 0, 422 * Global.guiRatio, 40 * Global.guiRatio), this.npcBarName, this.gs_font.font_b52_36_l_blue);
            GUI.BeginGroup(new Rect(0, 30 * Global.guiRatio, 422 * Global.guiRatio, 18 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 422 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_battlescreen_mobhealth_background);
            GUI.BeginGroup(new Rect(0, 0, ((this.npcBarLifeCUR * 422) * Global.guiRatio) / this.npcBarLifeMAX, 18 * Global.guiRatio));
            GUI.Box(new Rect(0, 0, 422 * Global.guiRatio, 18 * Global.guiRatio), "", this.gs_common.gui_battlescreen_mobhealth);
            GUI.EndGroup();
            GUI.EndGroup();
            GUI.Label(new Rect(320 * Global.guiRatio, 4 * Global.guiRatio, 102 * Global.guiRatio, 30 * Global.guiRatio), (this.npcBarLifeCUR.ToString() + "/") + this.npcBarLifeMAX.ToString(), this.gs_font.font_b52_28_l_blue);
            GUI.EndGroup();
        }
        //Вход и выход из оранжереи
        if (Global.GreenHouseEntry != null)
        {
            Vector3 GreenHouseEntryCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global.GreenHouseEntry.transform.position.x, Global.GreenHouseEntry.transform.position.y, Global.GreenHouseEntry.transform.position.z));
            GreenHouseEntryCurrentPos.y = Screen.height - GreenHouseEntryCurrentPos.y;
            if (Global.GreenHouseOpenDoor && Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(GreenHouseEntryCurrentPos.x - (80 * Global.guiRatio), GreenHouseEntryCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_entry))
                {
                    Global.UFOShowEntry = false;
                    Global.globalBus.gameObject.SendMessage("c_GameController_LoadZone");
                }
                GUI.EndGroup();
            }
        }
        if (Global.GreenHouseExit != null)
        {
            Vector3 GreenHouseExitCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global.GreenHouseExit.transform.position.x, Global.GreenHouseExit.transform.position.y, Global.GreenHouseExit.transform.position.z));
            GreenHouseExitCurrentPos.y = Screen.height - GreenHouseExitCurrentPos.y;
            if (Global.GreenHouseExitDoor && Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(GreenHouseExitCurrentPos.x - (80 * Global.guiRatio), GreenHouseExitCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_entry))
                {
                    Global._isGreenHouseExit = true;
                    Global.globalBus.gameObject.SendMessage("c_GameController_LoadZone");
                    Global.GreenHouseExitDoor = false;
                }
                GUI.EndGroup();
            }
        }
        //Вход и выход из подземного храма
        if ((Global.TempleEntry != null) && Global._isTutorialEnd)
        {
            Vector3 TempleEntryCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global.TempleEntry.transform.position.x, Global.TempleEntry.transform.position.y, Global.TempleEntry.transform.position.z));
            TempleEntryCurrentPos.y = Screen.height - TempleEntryCurrentPos.y;
            if ((Global.TempleOpenDoor && Global.UFOShowEntry) && Global._isOpenPyramid)
            {
                GUI.BeginGroup(new Rect(TempleEntryCurrentPos.x - (80 * Global.guiRatio), TempleEntryCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_entry))
                {
                    Global.UFOShowEntry = false;
                    Global.globalBus.gameObject.SendMessage("c_GameController_LoadZone");
                }
                GUI.EndGroup();
            }
            else
            {
                if ((Global.TempleOpenDoor && Global.UFOShowEntry) && !Global._isOpenPyramid)
                {
                    GUI.BeginGroup(new Rect(TempleEntryCurrentPos.x - (80 * Global.guiRatio), TempleEntryCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                    if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
                    {
                        if (!Global._isFirstVisitTemple)
                        {
                            Global.UFOShowEntry = false;
                            Global._isPopUpOpen = true;
                            Global._isKot = false;
                            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                            Global._isClickDialogue = true;
                            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                            {
                            }
                            else
                            {
                                 //speak
                                this.ResetDialogue();
                            }
                            Global._playDialogue(Global.audio_player.sectoid_dlg_042);
                            this.StartCoroutine("DialogueEnd");
                            Global._gui_AddInterface("DoorLockDialogue01");
                        }
                        else
                        {
                            Global.UFOShowEntry = false;
                            Global._isPopUpOpen = true;
                            Global._gui_AddInterface("DoorLockGameScreen");
                        }
                    }
                    GUI.EndGroup();
                }
            }
        }
        if (Global.TempleExit != null)
        {
            Vector3 TempleExitCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global.TempleExit.transform.position.x, Global.TempleExit.transform.position.y, Global.TempleExit.transform.position.z));
            TempleExitCurrentPos.y = Screen.height - TempleExitCurrentPos.y;
            if (Global.TempleExitDoor && Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(TempleExitCurrentPos.x - (80 * Global.guiRatio), TempleExitCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_entry))
                {
                    Global._isTempleExit = true;
                    Global.globalBus.gameObject.SendMessage("c_GameController_LoadZone");
                    Global.TempleExitDoor = false;
                }
                GUI.EndGroup();
            }
        }
        if (Global.UFOEntry != null)
        {
            Vector3 UFOEntryCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global.UFOEntry.transform.position.x, Global.UFOEntry.transform.position.y, Global.UFOEntry.transform.position.z));
            UFOEntryCurrentPos.y = Screen.height - UFOEntryCurrentPos.y;
            if (Global.UFOOpenDoor && Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(UFOEntryCurrentPos.x - (80 * Global.guiRatio), UFOEntryCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_entry))
                {
                    if (Global._isTutorialGreenHouseComplete && !Global._isTutorialUFOStorageComplete)
                    {
                        Global._gui_CloseAllInterfaces();
                        Global._isPopUpOpen = true;
                        Global.UFOShowEntry = false;
                        Global._gui_SetInterface("TutorialGoToStorage");
                    }
                    else
                    {
                        Global._gui_CloseAllInterfaces();
                        Global._isPopUpOpen = true;
                        Global._isUFOScreen = true;
                        Global.UFOShowEntry = false;
                        ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                        //Global.globalBus.SendMessage("c_GameController_Base_command_setPause");
                        Global._gui_SetInterface("ShipScreen");
                    }
                }
                GUI.EndGroup();
            }
        }
        if ((Global.VillaEntry != null) && Global._isTutorialEnd)
        {
            Vector3 VillaEntryCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global.VillaEntry.transform.position.x, Global.VillaEntry.transform.position.y, Global.VillaEntry.transform.position.z));
            VillaEntryCurrentPos.y = Screen.height - VillaEntryCurrentPos.y;
            if (Global.VillaOpenDoor && Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(VillaEntryCurrentPos.x - (80 * Global.guiRatio), VillaEntryCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_entry))
                {
                    Global._gui_CloseAllInterfaces();
                    Global._isPopUpOpen = true;
                    Global.UFOShowEntry = false;
                    ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                    if (Global._isVillaFirstVisit)
                    {
                        Global._isKot = false;
                        Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                        Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                        Global._isClickDialogue = true;
                        Global._playDialogue(Global.audio_player.sectoid_dlg_033);
                        if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                        {
                        }
                        else
                        {
                             //speak
                            this.ResetDialogue();
                        }
                        this.StartCoroutine("DialogueEnd");
                        Global._isVillaFirstVisit = false;
                        Global._gui_SetInterface("VillaDialogue01");
                    }
                    else
                    {
                        if (!Global._isVillaFirstVisit && ((!Global._isHOG1Complete || !Global._isHOG2Complete) || !Global._isHOG3Complete))
                        {
                            Global._isKot = false;
                            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                            Global._isClickDialogue = true;
                            Global._playDialogue(Global.audio_player.sectoid_dlg_035);
                            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                            {
                            }
                            else
                            {
                                 //speak
                                this.ResetDialogue();
                            }
                            this.StartCoroutine("DialogueEnd");
                            Global._isVillaFirstVisit = false;
                            Global._gui_SetInterface("VillaDialogue04");
                        }
                        else
                        {
                            if (((!Global._isVillaFirstVisit && Global._isHOG1Complete) && Global._isHOG2Complete) && Global._isHOG3Complete)
                            {
                                Global._isKot = false;
                                Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                                Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                                Global._isClickDialogue = true;
                                Global._playDialogue(Global.audio_player.sectoid_dlg_036);
                                if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                                {
                                }
                                else
                                {
                                     //speak
                                    this.ResetDialogue();
                                }
                                this.StartCoroutine("DialogueEnd");
                                Global._isVillaFirstVisit = false;
                                Global._gui_SetInterface("VillaDialogue05");
                            }
                        }
                    }
                }
                GUI.EndGroup();
            }
        }
        //Пирс с рыбалкой
        if ((Global.FishingEntry != null) && Global._isTutorialEnd)
        {
            Vector3 FishingEntryCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global.FishingEntry.transform.position.x, Global.FishingEntry.transform.position.y, Global.FishingEntry.transform.position.z));
            FishingEntryCurrentPos.y = Screen.height - FishingEntryCurrentPos.y;
            if (Global.FishingAvailable && Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(FishingEntryCurrentPos.x - (80 * Global.guiRatio), FishingEntryCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_worldmap_button_entry))
                {
                    if (!Global._isFirstFishing)
                    {
                        Global._isPopUpOpen = true;
                        Global.UFOShowEntry = false;
                        ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                        Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                        Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                        Global._isClickDialogue = true;
                        Global._playDialogue(Global.audio_player.sectoid_dlg_039);
                        this.StartCoroutine("DialogueEnd");
                        Global._gui_SetInterface("FishingDialogue01");
                    }
                    else
                    {
                        if (Global._isFirstFishing && (int.Parse((string) (Global._userResourcesFood["food_fish"] as Hashtable)["amount"]) >= 10))
                        {
                            Global._isKot = false;
                            Global._isPopUpOpen = true;
                            Global.UFOShowEntry = false;
                            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                            Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                            Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                            Global._isClickDialogue = true;
                            Global._playDialogue(Global.audio_player.sectoid_dlg_041);
                            if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                            {
                            }
                            else
                            {
                                 //speak
                                this.ResetDialogue();
                            }
                            this.StartCoroutine("DialogueEnd");
                            Global._gui_SetInterface("FishingDialogue04");
                        }
                        else
                        {
                            Global._isPopUpOpen = true;
                            Global.UFOShowEntry = false;
                            ((s_BlurEffect) Global._walkerCameraPhoto.GetComponent(typeof(s_BlurEffect))).enabled = true;
                            Global._gui_SetInterface("FishingGameScreen");
                        }
                    }
                }
                GUI.EndGroup();
            }
        }
        // Стрелочка-сношарь для туториальной паутины
        if ((((Global._isTutorialCobweb != null) && Global._isTutorialGoToGreenHouseAgain) && !Global._isTutorialDestroyCobweb) && !Global._isPopUpOpen)
        {
            Vector3 CobwebCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global._isTutorialCobweb.transform.position.x, Global._isTutorialCobweb.transform.position.y, Global._isTutorialCobweb.transform.position.z));
            CobwebCurrentPos.y = Screen.height - CobwebCurrentPos.y;
            Global.fuckerXCoord = CobwebCurrentPos.x - (94 * Global.guiRatio);
            Global.fuckerYCoord = CobwebCurrentPos.y - (578 * Global.guiRatio);
            Global.FuckerYcoordOriginal = Global.fuckerYCoord;
            if (Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 433 * Global.guiRatio));
                this.someVectorTutorialCobweb = Global.GUIAniTexture(new Rect(0, 0, 189 * Global.guiRatio, 433 * Global.guiRatio), this.gs_common.gui_tutorial_fuckerarrow_sheet.normal.background, 10, 5, 0.15f, this.someVectorTutorialCobweb, false);
                GUI.EndGroup();
            }
        }
        // Стрелочка-сношарь для паука
        if ((Global._isTutorialDialogueSpiderEnd && !Global._isTutorialSpiderClick) && !Global._isPopUpOpen)
        {
            Vector3 SpiderCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global._TutorialSpider.transform.position.x, Global._TutorialSpider.transform.position.y, Global._TutorialSpider.transform.position.z));
            SpiderCurrentPos.y = Screen.height - SpiderCurrentPos.y;
            Global.fuckerXCoord = SpiderCurrentPos.x - (94 * Global.guiRatio);
            Global.fuckerYCoord = SpiderCurrentPos.y - (578 * Global.guiRatio);
            if (Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(Global.fuckerXCoord, Global.fuckerYCoord, 189 * Global.guiRatio, 433 * Global.guiRatio));
                this.someVectorTutorialSpider = Global.GUIAniTexture(new Rect(0, 0, 189 * Global.guiRatio, 433 * Global.guiRatio), this.gs_common.gui_tutorial_fuckerarrow_sheet.normal.background, 10, 5, 0.15f, this.someVectorTutorialSpider, false);
                GUI.EndGroup();
                GUI.BeginGroup(new Rect(SpiderCurrentPos.x - (128 * Global.guiRatio), SpiderCurrentPos.y - (128 * Global.guiRatio), 256 * Global.guiRatio, 256 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 256 * Global.guiRatio, 256 * Global.guiRatio), "", this.gs_common.emptystyle))
                {
                    Global._isTutorialSpiderClick = true;
                    Global._TutorialSpider.tag = "MONSTER";
                    Global.globalBus.gameObject.SendMessage("c_UpdateController_command_attackSomeSelectedCreature", Global._TutorialSpider);
                    ((s_AIController) Global._TutorialSpider.GetComponent(typeof(s_AIController))).srv_reactionradius = 15;
                    Global.fuckerXCoord = (Screen.width / 2) - (948 * Global.guiRatio);
                    Global.fuckerYCoord = (Screen.height / 2) + (131 * Global.guiRatio);
                    Global.FuckerYcoordOriginal = Global.fuckerYCoord;
                }
                GUI.EndGroup();
            }
        }
        //Мозаика в подземелье
        if (Global.MosaicEntry != null)
        {
            Vector3 MosaicEntryCurrentPos = Camera.main.WorldToScreenPoint(new Vector3(Global.MosaicEntry.transform.position.x, Global.MosaicEntry.transform.position.y, Global.MosaicEntry.transform.position.z));
            MosaicEntryCurrentPos.y = Screen.height - MosaicEntryCurrentPos.y;
            if ((Global.MosaicAvailable && !Global.MosaicComplete) && Global.UFOShowEntry)
            {
                GUI.BeginGroup(new Rect(MosaicEntryCurrentPos.x - (80 * Global.guiRatio), MosaicEntryCurrentPos.y - (80 * Global.guiRatio), 160 * Global.guiRatio, 160 * Global.guiRatio));
                if (GUI.Button(new Rect(0, 0, 160 * Global.guiRatio, 160 * Global.guiRatio), "", this.gs_common.gui_villa_button_hog))
                {
                    if (!Global.MosaicFirstEntry)
                    {
                        Global.UFOShowEntry = false;
                        Global._isPopUpOpen = true;
                        Global._isKot = false;
                        Global.speakerGO = GameObject.Find("_sectoidSpeaker");
                        Global.holoGO = GameObject.Find("_sectodSpeakerHolo");
                        Global._isClickDialogue = true;
                        Global._playDialogue(Global.audio_player.sectoid_dlg_045);
                        if (((Animator) Global.speakerGO.GetComponent(typeof(Animator))).GetCurrentAnimatorStateInfo(0).IsName("npcSpeak"))
                        {
                        }
                        else
                        {
                             //speak
                            this.ResetDialogue();
                        }
                        this.StartCoroutine("DialogueEnd");
                        Global._gui_SetInterface("TempleDialogue02");
                    }
                    else
                    {
                        Global.UFOShowEntry = false;
                        Global._isPopUpOpen = true;
                        Global._gui_AddInterface("MosaicGameScreen");
                    }
                }
                GUI.EndGroup();
            }
        }
        if (Global._options_is_gamecursor)
        {
            if (Global._GAME_CURSOR == "")
            {
                Global._GAME_CURSOR = "default";
            }
            GUI.BeginGroup(new Rect(Global.gmrPos.x, Global.gmrPos.y, 128 * Global.guiRatio, 128 * Global.guiRatio));
            if (Global._GAME_CURSOR == "default")
            {
                this.someVectorCursor = Global.GUIAniTexture(new Rect(0, 0, 128 * Global.guiRatio, 128 * Global.guiRatio), this.gs_common.cursor_default.normal.background, 6, 6, 0.25f, this.someVectorCursor, false);
            }
            if (Global._GAME_CURSOR == "attack")
            {
                this.someVectorCursor = Global.GUIAniTexture(new Rect(0, 0, 128 * Global.guiRatio, 128 * Global.guiRatio), this.gs_common.cursor_attack.normal.background, 6, 6, 0.25f, this.someVectorCursor, false);
            }
            /*if (Global._GAME_CURSOR == "res")
            {
                someVectorCursor = Global.GUIAniTexture(
                    Rect(0, 0, 64, 64),
                    gs_common.cursor_res.normal.background,
                    12, 7, 0.2, someVectorCursor, false
                );
            }*/
            if (Global._GAME_CURSOR == "take")
            {
                this.someVectorCursor = Global.GUIAniTexture(new Rect(0, 0, 128 * Global.guiRatio, 128 * Global.guiRatio), this.gs_common.cursor_take.normal.background, 7, 7, 0.25f, this.someVectorCursor, false);
            }
            GUI.EndGroup();
        }
        if ((Global._showMiniMap == true) && !Global._system_isHeroDead)
        {
            GUI.BeginGroup(new Rect(0, 0, Screen.width, Screen.height));
            GUI.BeginGroup(new Rect(Screen.width - (310 * Global.guiRatio), 22 * Global.guiRatio, 288 * Global.guiRatio, 288 * Global.guiRatio));
            GUI.BeginGroup(new Rect(42 * Global.guiRatio, 17 * Global.guiRatio, 204 * Global.guiRatio, 135 * Global.guiRatio));
            this._heroPivotPoint = new Vector2(102 * Global.guiRatio, 127 * Global.guiRatio);
            GUIUtility.RotateAroundPivot(this._heroRotAngle, this._heroPivotPoint);
            this._heroRotAngle = Global._hero_dolly.transform.eulerAngles.y;
            GUI.Box(new Rect(0, 0, 204 * Global.guiRatio, 135 * Global.guiRatio), "", this.gs_common.gui_gamescreen_symbol_player);
            GUI.EndGroup();
            GUI.EndGroup();
            GUI.EndGroup();
        }
        if (Global._guiLayers[0] == "WorldMap")
        {
            if (!Global._isBattleRagesOn)
            {
                Global._showMiniMap = true;
            }
            else
            {
                if (!Global._isBattleRagesOn && Global._isPlayVideo)
                {
                    Global._showMiniMap = false;
                }
                else
                {
                    Global._showMiniMap = false;
                }
            }
        }
        else
        {
            Global._showMiniMap = false;
        }
    }

    public virtual void c_GameController_Base_command_SortThings() //Сортируем инвентарь
    {
         //Первая строка
        if ((Global.globalInventoryThingsArr.Count > 0) && !(Global.globalInventoryThingsArr[0] == null))
        {
            Global.globalInventoryThingsArr[0]["x"] = "0";
            Global.globalInventoryThingsArr[0]["y"] = "0";
        }
        if ((Global.globalInventoryThingsArr.Count > 1) && !(Global.globalInventoryThingsArr[1] == null))
        {
            Global.globalInventoryThingsArr[1]["x"] = "1";
            Global.globalInventoryThingsArr[1]["y"] = "0";
        }
        if ((Global.globalInventoryThingsArr.Count > 2) && !(Global.globalInventoryThingsArr[2] == null))
        {
            Global.globalInventoryThingsArr[2]["x"] = "2";
            Global.globalInventoryThingsArr[2]["y"] = "0";
        }
        if ((Global.globalInventoryThingsArr.Count > 3) && !(Global.globalInventoryThingsArr[3] == null))
        {
            Global.globalInventoryThingsArr[3]["x"] = "3";
            Global.globalInventoryThingsArr[3]["y"] = "0";
        }
        if ((Global.globalInventoryThingsArr.Count > 4) && !(Global.globalInventoryThingsArr[4] == null))
        {
            Global.globalInventoryThingsArr[4]["x"] = "4";
            Global.globalInventoryThingsArr[4]["y"] = "0";
        }
        if ((Global.globalInventoryThingsArr.Count > 5) && !(Global.globalInventoryThingsArr[5] == null))
        {
            Global.globalInventoryThingsArr[5]["x"] = "5";
            Global.globalInventoryThingsArr[5]["y"] = "0";
        }
        //Вторая строка
        if ((Global.globalInventoryThingsArr.Count > 6) && !(Global.globalInventoryThingsArr[6] == null))
        {
            Global.globalInventoryThingsArr[6]["x"] = "0";
            Global.globalInventoryThingsArr[6]["y"] = "1";
        }
        if ((Global.globalInventoryThingsArr.Count > 7) && !(Global.globalInventoryThingsArr[7] == null))
        {
            Global.globalInventoryThingsArr[7]["x"] = "1";
            Global.globalInventoryThingsArr[7]["y"] = "1";
        }
        if ((Global.globalInventoryThingsArr.Count > 8) && !(Global.globalInventoryThingsArr[8] == null))
        {
            Global.globalInventoryThingsArr[8]["x"] = "2";
            Global.globalInventoryThingsArr[8]["y"] = "1";
        }
        if ((Global.globalInventoryThingsArr.Count > 9) && !(Global.globalInventoryThingsArr[9] == null))
        {
            Global.globalInventoryThingsArr[9]["x"] = "3";
            Global.globalInventoryThingsArr[9]["y"] = "1";
        }
        if ((Global.globalInventoryThingsArr.Count > 10) && !(Global.globalInventoryThingsArr[10] == null))
        {
            Global.globalInventoryThingsArr[10]["x"] = "4";
            Global.globalInventoryThingsArr[10]["y"] = "1";
        }
        if ((Global.globalInventoryThingsArr.Count > 11) && !(Global.globalInventoryThingsArr[11] == null))
        {
            Global.globalInventoryThingsArr[11]["x"] = "5";
            Global.globalInventoryThingsArr[11]["y"] = "1";
        }
        //Третья строка
        if ((Global.globalInventoryThingsArr.Count > 12) && !(Global.globalInventoryThingsArr[12] == null))
        {
            Global.globalInventoryThingsArr[12]["x"] = "0";
            Global.globalInventoryThingsArr[12]["y"] = "2";
        }
        if ((Global.globalInventoryThingsArr.Count > 13) && !(Global.globalInventoryThingsArr[13] == null))
        {
            Global.globalInventoryThingsArr[13]["x"] = "1";
            Global.globalInventoryThingsArr[13]["y"] = "2";
        }
        if ((Global.globalInventoryThingsArr.Count > 14) && !(Global.globalInventoryThingsArr[14] == null))
        {
            Global.globalInventoryThingsArr[14]["x"] = "2";
            Global.globalInventoryThingsArr[14]["y"] = "2";
        }
        if ((Global.globalInventoryThingsArr.Count > 15) && !(Global.globalInventoryThingsArr[15] == null))
        {
            Global.globalInventoryThingsArr[15]["x"] = "3";
            Global.globalInventoryThingsArr[15]["y"] = "2";
        }
        if ((Global.globalInventoryThingsArr.Count > 16) && !(Global.globalInventoryThingsArr[16] == null))
        {
            Global.globalInventoryThingsArr[16]["x"] = "4";
            Global.globalInventoryThingsArr[16]["y"] = "2";
        }
        if ((Global.globalInventoryThingsArr.Count > 17) && !(Global.globalInventoryThingsArr[17] == null))
        {
            Global.globalInventoryThingsArr[17]["x"] = "5";
            Global.globalInventoryThingsArr[17]["y"] = "2";
        }
        //Четвертая строка
        if ((Global.globalInventoryThingsArr.Count > 18) && !(Global.globalInventoryThingsArr[18] == null))
        {
            Global.globalInventoryThingsArr[18]["x"] = "0";
            Global.globalInventoryThingsArr[18]["y"] = "3";
        }
        if ((Global.globalInventoryThingsArr.Count > 19) && !(Global.globalInventoryThingsArr[19] == null))
        {
            Global.globalInventoryThingsArr[19]["x"] = "1";
            Global.globalInventoryThingsArr[19]["y"] = "3";
        }
        if ((Global.globalInventoryThingsArr.Count > 20) && !(Global.globalInventoryThingsArr[20] == null))
        {
            Global.globalInventoryThingsArr[20]["x"] = "2";
            Global.globalInventoryThingsArr[20]["y"] = "3";
        }
        if ((Global.globalInventoryThingsArr.Count > 21) && !(Global.globalInventoryThingsArr[21] == null))
        {
            Global.globalInventoryThingsArr[21]["x"] = "3";
            Global.globalInventoryThingsArr[21]["y"] = "3";
        }
        if ((Global.globalInventoryThingsArr.Count > 22) && !(Global.globalInventoryThingsArr[22] == null))
        {
            Global.globalInventoryThingsArr[22]["x"] = "4";
            Global.globalInventoryThingsArr[22]["y"] = "3";
        }
        if ((Global.globalInventoryThingsArr.Count > 23) && !(Global.globalInventoryThingsArr[23] == null))
        {
            Global.globalInventoryThingsArr[23]["x"] = "5";
            Global.globalInventoryThingsArr[23]["y"] = "3";
        }
    }

    public virtual void c_GameController_Base_command_SortStorageInventory() //Сортируем инвентарь на складе
    {
         //Сортируем инвентарь на складе *********************************************************
         //Первая строка
        if ((Global.StorageInventoryArr.Count > 0) && !(Global.StorageInventoryArr[0] == null))
        {
            Global.StorageInventoryArr[0]["x"] = "0";
            Global.StorageInventoryArr[0]["y"] = "0";
        }
        if ((Global.StorageInventoryArr.Count > 1) && !(Global.StorageInventoryArr[1] == null))
        {
            Global.StorageInventoryArr[1]["x"] = "1";
            Global.StorageInventoryArr[1]["y"] = "0";
        }
        if ((Global.StorageInventoryArr.Count > 2) && !(Global.StorageInventoryArr[2] == null))
        {
            Global.StorageInventoryArr[2]["x"] = "2";
            Global.StorageInventoryArr[2]["y"] = "0";
        }
        if ((Global.StorageInventoryArr.Count > 3) && !(Global.StorageInventoryArr[3] == null))
        {
            Global.StorageInventoryArr[3]["x"] = "3";
            Global.StorageInventoryArr[3]["y"] = "0";
        }
        //Вторая строка
        if ((Global.StorageInventoryArr.Count > 4) && !(Global.StorageInventoryArr[4] == null))
        {
            Global.StorageInventoryArr[4]["x"] = "0";
            Global.StorageInventoryArr[4]["y"] = "1";
        }
        if ((Global.StorageInventoryArr.Count > 5) && !(Global.StorageInventoryArr[5] == null))
        {
            Global.StorageInventoryArr[5]["x"] = "1";
            Global.StorageInventoryArr[5]["y"] = "1";
        }
        if ((Global.StorageInventoryArr.Count > 6) && !(Global.StorageInventoryArr[6] == null))
        {
            Global.StorageInventoryArr[6]["x"] = "2";
            Global.StorageInventoryArr[6]["y"] = "1";
        }
        if ((Global.StorageInventoryArr.Count > 7) && !(Global.StorageInventoryArr[7] == null))
        {
            Global.StorageInventoryArr[7]["x"] = "3";
            Global.StorageInventoryArr[7]["y"] = "1";
        }
        //Третья строка
        if ((Global.StorageInventoryArr.Count > 8) && !(Global.StorageInventoryArr[8] == null))
        {
            Global.StorageInventoryArr[8]["x"] = "0";
            Global.StorageInventoryArr[8]["y"] = "2";
        }
        if ((Global.StorageInventoryArr.Count > 9) && !(Global.StorageInventoryArr[9] == null))
        {
            Global.StorageInventoryArr[9]["x"] = "1";
            Global.StorageInventoryArr[9]["y"] = "2";
        }
        if ((Global.StorageInventoryArr.Count > 10) && !(Global.StorageInventoryArr[10] == null))
        {
            Global.StorageInventoryArr[10]["x"] = "2";
            Global.StorageInventoryArr[10]["y"] = "2";
        }
        if ((Global.StorageInventoryArr.Count > 11) && !(Global.StorageInventoryArr[11] == null))
        {
            Global.StorageInventoryArr[11]["x"] = "3";
            Global.StorageInventoryArr[11]["y"] = "2";
        }
        //Четвертая строка
        if ((Global.StorageInventoryArr.Count > 12) && !(Global.StorageInventoryArr[12] == null))
        {
            Global.StorageInventoryArr[12]["x"] = "0";
            Global.StorageInventoryArr[12]["y"] = "3";
        }
        if ((Global.StorageInventoryArr.Count > 13) && !(Global.StorageInventoryArr[13] == null))
        {
            Global.StorageInventoryArr[13]["x"] = "1";
            Global.StorageInventoryArr[13]["y"] = "3";
        }
        if ((Global.StorageInventoryArr.Count > 14) && !(Global.StorageInventoryArr[14] == null))
        {
            Global.StorageInventoryArr[14]["x"] = "2";
            Global.StorageInventoryArr[14]["y"] = "3";
        }
        if ((Global.StorageInventoryArr.Count > 15) && !(Global.StorageInventoryArr[15] == null))
        {
            Global.StorageInventoryArr[15]["x"] = "3";
            Global.StorageInventoryArr[15]["y"] = "3";
        }
        //Сортируем предметы на складе *********************************************************
        //Первая строка
        if ((Global.StorageArr.Count > 0) && !(Global.StorageArr[0] == null))
        {
            Global.StorageArr[0]["x"] = "0";
            Global.StorageArr[0]["y"] = "0";
        }
        if ((Global.StorageArr.Count > 1) && !(Global.StorageArr[1] == null))
        {
            Global.StorageArr[1]["x"] = "1";
            Global.StorageArr[1]["y"] = "0";
        }
        if ((Global.StorageArr.Count > 2) && !(Global.StorageArr[2] == null))
        {
            Global.StorageArr[2]["x"] = "2";
            Global.StorageArr[2]["y"] = "0";
        }
        if ((Global.StorageArr.Count > 3) && !(Global.StorageArr[3] == null))
        {
            Global.StorageArr[3]["x"] = "3";
            Global.StorageArr[3]["y"] = "0";
        }
        //Вторая строка
        if ((Global.StorageArr.Count > 4) && !(Global.StorageArr[4] == null))
        {
            Global.StorageArr[4]["x"] = "0";
            Global.StorageArr[4]["y"] = "1";
        }
        if ((Global.StorageArr.Count > 5) && !(Global.StorageArr[5] == null))
        {
            Global.StorageArr[5]["x"] = "1";
            Global.StorageArr[5]["y"] = "1";
        }
        if ((Global.StorageArr.Count > 6) && !(Global.StorageArr[6] == null))
        {
            Global.StorageArr[6]["x"] = "2";
            Global.StorageArr[6]["y"] = "1";
        }
        if ((Global.StorageArr.Count > 7) && !(Global.StorageArr[7] == null))
        {
            Global.StorageArr[7]["x"] = "3";
            Global.StorageArr[7]["y"] = "1";
        }
        //Третья строка
        if ((Global.StorageArr.Count > 8) && !(Global.StorageArr[8] == null))
        {
            Global.StorageArr[8]["x"] = "0";
            Global.StorageArr[8]["y"] = "2";
        }
        if ((Global.StorageArr.Count > 9) && !(Global.StorageArr[9] == null))
        {
            Global.StorageArr[9]["x"] = "1";
            Global.StorageArr[9]["y"] = "2";
        }
        if ((Global.StorageArr.Count > 10) && !(Global.StorageArr[10] == null))
        {
            Global.StorageArr[10]["x"] = "2";
            Global.StorageArr[10]["y"] = "2";
        }
        if ((Global.StorageArr.Count > 11) && !(Global.StorageArr[11] == null))
        {
            Global.StorageArr[11]["x"] = "3";
            Global.StorageArr[11]["y"] = "2";
        }
        //Четвертая строка
        if ((Global.StorageArr.Count > 12) && !(Global.StorageArr[12] == null))
        {
            Global.StorageArr[12]["x"] = "0";
            Global.StorageArr[12]["y"] = "3";
        }
        if ((Global.StorageArr.Count > 13) && !(Global.StorageArr[13] == null))
        {
            Global.StorageArr[13]["x"] = "1";
            Global.StorageArr[13]["y"] = "3";
        }
        if ((Global.StorageArr.Count > 14) && !(Global.StorageArr[14] == null))
        {
            Global.StorageArr[14]["x"] = "2";
            Global.StorageArr[14]["y"] = "3";
        }
        if ((Global.StorageArr.Count > 15) && !(Global.StorageArr[15] == null))
        {
            Global.StorageArr[15]["x"] = "3";
            Global.StorageArr[15]["y"] = "3";
        }
    }

    public virtual void c_GameController_Base_command_SortStorage() //Сортируем инвентарь на складе
    {
         //Первая строка
        if ((Global.StorageArr.Count > 0) && !(Global.StorageArr[0] == null))
        {
            Global.StorageArr[0]["x"] = "0";
            Global.StorageArr[0]["y"] = "0";
        }
        if ((Global.StorageArr.Count > 1) && !(Global.StorageArr[1] == null))
        {
            Global.StorageArr[1]["x"] = "1";
            Global.StorageArr[1]["y"] = "0";
        }
        if ((Global.StorageArr.Count > 2) && !(Global.StorageArr[2] == null))
        {
            Global.StorageArr[2]["x"] = "2";
            Global.StorageArr[2]["y"] = "0";
        }
        if ((Global.StorageArr.Count > 3) && !(Global.StorageArr[3] == null))
        {
            Global.StorageArr[3]["x"] = "3";
            Global.StorageArr[3]["y"] = "0";
        }
        //Вторая строка
        if ((Global.StorageArr.Count > 4) && !(Global.StorageArr[4] == null))
        {
            Global.StorageArr[4]["x"] = "0";
            Global.StorageArr[4]["y"] = "1";
        }
        if ((Global.StorageArr.Count > 5) && !(Global.StorageArr[5] == null))
        {
            Global.StorageArr[5]["x"] = "1";
            Global.StorageArr[5]["y"] = "1";
        }
        if ((Global.StorageArr.Count > 6) && !(Global.StorageArr[6] == null))
        {
            Global.StorageArr[6]["x"] = "2";
            Global.StorageArr[6]["y"] = "1";
        }
        if ((Global.StorageArr.Count > 7) && !(Global.StorageArr[7] == null))
        {
            Global.StorageArr[7]["x"] = "3";
            Global.StorageArr[7]["y"] = "1";
        }
        //Третья строка
        if ((Global.StorageArr.Count > 8) && !(Global.StorageArr[8] == null))
        {
            Global.StorageArr[8]["x"] = "0";
            Global.StorageArr[8]["y"] = "2";
        }
        if ((Global.StorageArr.Count > 9) && !(Global.StorageArr[9] == null))
        {
            Global.StorageArr[9]["x"] = "1";
            Global.StorageArr[9]["y"] = "2";
        }
        if ((Global.StorageArr.Count > 10) && !(Global.StorageArr[10] == null))
        {
            Global.StorageArr[10]["x"] = "2";
            Global.StorageArr[10]["y"] = "2";
        }
        if ((Global.StorageArr.Count > 11) && !(Global.StorageArr[11] == null))
        {
            Global.StorageArr[11]["x"] = "3";
            Global.StorageArr[11]["y"] = "2";
        }
        //Четвертая строка
        if ((Global.StorageArr.Count > 12) && !(Global.StorageArr[12] == null))
        {
            Global.StorageArr[12]["x"] = "0";
            Global.StorageArr[12]["y"] = "3";
        }
        if ((Global.StorageArr.Count > 13) && !(Global.StorageArr[13] == null))
        {
            Global.StorageArr[13]["x"] = "1";
            Global.StorageArr[13]["y"] = "3";
        }
        if ((Global.StorageArr.Count > 14) && !(Global.StorageArr[14] == null))
        {
            Global.StorageArr[14]["x"] = "2";
            Global.StorageArr[14]["y"] = "3";
        }
        if ((Global.StorageArr.Count > 15) && !(Global.StorageArr[15] == null))
        {
            Global.StorageArr[15]["x"] = "3";
            Global.StorageArr[15]["y"] = "3";
        }
    }

    public virtual void c_GuiCommonController_command_updateNpcBar(object[] inArr)
    {
        this.npcBarLifeCUR = (int) inArr[0];
        this.npcBarLifeMAX = (int) inArr[1];
    }

    public virtual void c_GuiCommonController_command_showNpcBar(object[] inArr)
    {
        this.npcBarGO = (GameObject) inArr[0];
        this.npcBarLevel = (int) inArr[1];
        this.npcBarName = (string) inArr[2];
        this.npcBarLifeCUR = (int) inArr[3];
        this.npcBarLifeMAX = (int) inArr[4];
        Global.isNpcBarShow = true;
    }

    public virtual void c_GuiCommonController_command_showNPCName(object[] inArr)
    {
        this.npcGO = (GameObject) inArr[0];
        this.npcName = (string) inArr[1];
        Global.isNpcNameShow = true;
    }

    public virtual void c_GuiCommonController_command_hideNpcBar()
    {
        Global.isNpcBarShow = false;
    }

    public virtual IEnumerator c_GuiCommonController_TutorialArrowFuckerUp(bool fuck) //Стрелочка-сношарь, снизу вверх
    {
        if (fuck)
        {
            Global.fuckerCall = false;
            Global.fuckerYCoord = Global.FuckerYcoordOriginal;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord - 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerYCoord = Global.fuckerYCoord + 10;
            yield return new WaitForSeconds(0.05f);
            Global.fuckerCall = true;
        }
    }

    public virtual IEnumerator resizeHOGHint()
    {
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //10
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //20
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //30
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //40
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //50
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //60
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //70
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //80
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //90
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //100
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //110
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //120
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //130
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //140
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //150
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //160
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //170
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //180
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //190
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //200
        Global.hogFXcoord = Global.hogFXcoord - 5;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //210
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //220
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //230
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //240
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //250
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //260
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //270
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //280
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //290
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        yield return new WaitForSeconds(0.025f);
        Global.hogFXsize = Global.hogFXsize + 10; //300
        Global.hogFXcoord = Global.hogFXcoord - 5;
        Global.HOGhintAlpha = Global.HOGhintAlpha - 0.1f;
        Global._isShowHintHOG = false;
    }

    public virtual IEnumerator startDragAndDrop()
    {
        yield return new WaitForSeconds(0.5f);
        Global.isMouseHold = true;
    }

    public virtual IEnumerator openZasov1()
    {
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov1X = Global._zasov1X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._isZasov1 = true;
    }

    public virtual IEnumerator openZasov2()
    {
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov2X = Global._zasov2X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._isZasov2 = true;
    }

    public virtual IEnumerator openZasov3()
    {
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._zasov3X = Global._zasov3X - 10;
        yield return new WaitForSeconds(0.05f);
        Global._isZasov3 = true;
    }

    public virtual IEnumerator WaitingForTheSun()
    {
        yield return new WaitForSeconds(1.5f);
        Global._stopSoundDialogue();
        this.StopCoroutine("DialogueEnd");
        this.StopDialogue();
        Global._isClickDialogue = true;
        Global._playDialogue(Global.audio_player.sectoid_dlg_028);
        this.ResetDialogue();
        this.StartCoroutine("DialogueEnd");
        Global._gui_SetInterface("TutorialDialogue29");
    }

    public virtual IEnumerator DialogueEnd()
    {
        yield return new WaitForSeconds(Global.dialogueLength);
        if (Global.speakerGO != null)
        {
            ((Animator) Global.speakerGO.GetComponent(typeof(Animator))).SetTrigger("npcIdle");
        }
        if (!Global._isKot && (Global.holoGO != null))
        {
            ((Animator) Global.holoGO.GetComponent(typeof(Animator))).SetTrigger("npcIdle");
        }
        Global._isSpeak = false;
    }

    public virtual void ResetDialogue()
    {
        if (!Global._isSpeak)
        {
            if (Global.speakerGO != null)
            {
                ((Animator) Global.speakerGO.GetComponent(typeof(Animator))).ResetTrigger("npcIdle");
            }
            if (Global.holoGO != null)
            {
                ((Animator) Global.holoGO.GetComponent(typeof(Animator))).ResetTrigger("npcIdle");
            }
            Global._isSpeak = true;
        }
        if (Global.speakerGO != null)
        {
            ((Animator) Global.speakerGO.GetComponent(typeof(Animator))).SetTrigger("npcSpeak");
        }
        if (!Global._isKot && (Global.holoGO != null))
        {
            ((Animator) Global.holoGO.GetComponent(typeof(Animator))).SetTrigger("npcSpeak");
        }
    }

    public virtual void StopDialogue()
    {
        if (Global.speakerGO != null)
        {
            ((Animator) Global.speakerGO.GetComponent(typeof(Animator))).ResetTrigger("npcSpeak");
        }
        if (Global.holoGO != null)
        {
            ((Animator) Global.holoGO.GetComponent(typeof(Animator))).ResetTrigger("npcSpeak");
        }
        if (Global.speakerGO != null)
        {
            ((Animator) Global.speakerGO.GetComponent(typeof(Animator))).SetTrigger("npcIdle");
        }
        if (!Global._isKot && (Global.holoGO != null))
        {
            ((Animator) Global.holoGO.GetComponent(typeof(Animator))).SetTrigger("npcIdle");
        }
    }

    public c_GuiCommonController()
    {
        this.someVectorCursor = new Vector2(0, 0);
        this.scrollPosition = Vector2.zero;
        this.npcBarName = "";
        this.npcBarLifeMAX = 1;
        this.npcName = "";
        this._isRod1Select = true;
        this.Rod1RandomChance = 5;
        this.Rod2RandomChance = 10;
        this.Rod3RandomChance = 15;
        this.fishCooldown = 7;
        this.fishRandomChanceOriginal = 50;
        this.fishRandomChance = 50;
        this.fishMyChance = 50;
        this.fishRandomIndex = 1;
        this.someVectorFish = new Vector2(0, 0);
        this.scrollPositionKitchen = Vector2.zero;
        this.someVectorTutorialBlaster = new Vector2(0, 0);
        this.someVectorGoldenHOPA = new Vector2(0, 0);
        this.someVectorTutorialCobweb = new Vector2(0, 0);
        this.someVectorTutorialSpider = new Vector2(0, 0);
    }

}